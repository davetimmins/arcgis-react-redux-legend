{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///arcgis-react-redux-legend.js","webpack:///webpack/bootstrap eae960813174b8a3cd64","webpack:///./src/actions/map-legend.js","webpack:///./src/components/map-legend.js","webpack:///./src/reducers/map-legend.js","webpack:///./src/index.js","webpack:///external \"esri-loader\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-redux\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","modules","__webpack_require__","moduleId","installedModules","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","setInitialLegend","fetchLegend","showLayersNotVisibleForScale","reverseLayerOrder","toggleShowSettings","toggleNodeVisible","toggleNodeExpanded","toggleExpanded","TOGGLE_LEGEND_EXPANDED","SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA","SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA","INIT_MAP_OPTIONS","SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE","REVERSE_LAYER_ORDER","TOGGLE_SHOW_SETTINGS","SET_LEGEND_DOM_DATA","TOGGLE_LEGEND_NODE_EXPANDED","RECEIVE_LEGEND_DATA","REQUEST_LEGEND_DATA","RESET_LEGEND_IS_FETCHING","TOGGLE_LEGEND_NODE_VISIBLE","SET_CURRENT_SCALE","undefined","_esriLoader","hookLegend","mapId","expanded","type","payload","nodeId","show","url","dispatch","dojoRequire","esriRequest","query","f","responseType","then","response","layers","data","error","console","legend","callback","original","_buildLegendDOMForLayer","b","result","dispatchScaleChange","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","newScale","scale","createLayerLegend","view","layer","Legend","layerInfos","legendDOMForLayer","widget","legendWidget","destroy","watch","map","forEach","lyr","__index","loadedLayer","loaded","indexOf","toLowerCase","allSublayers","legendEnabled","source","_interopRequireDefault","obj","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","length","descriptor","key","protoProps","staticProps","_react","_react2","_propTypes","_propTypes2","_reactRedux","_mapLegend","styles","clickLegendNode","cursor","marginRight","display","inlineBlockDisplay","marginTop","marginBottom","titleContainer","paddingTop","paddingBottom","paddingLeft","backgroundColor","margin","titleControls","float","marginLeft","options","opacity","optionsOn","settingsPanel","position","top","right","zIndex","width","border","legendPadding","paddingRight","legendCheckbox","color","legendCheckboxSelected","legendCheckboxLabel","fontWeight","textStyle","verticalAlign","iconMargin","renderSubNodeLegendData","item","imageStyle","imageWidth","height","imageHeight","backgroundImage","image","backgroundRepeat","marginStyle","createElement","id","style","label","renderSubNodes","subLayerLegendData","subLayerScaleRestricted","subLayerMinScale","subLayerMaxScale","subNodeExpander","onClick","className","subNodeCheckbox","visible","subLayerName","renderNodes","optionsShowLayersNotVisibleForScale","alreadyLoaded","subMarginStyle","scaleRestricted","minScale","maxScale","sublayers","legendLayers","hasDomNode","index","dangerouslySetInnerHTML","__html","domNode","topNodeExpander","nodeCheckbox","layerName","MapLegend","_React$PureComponent","_ref","_temp","_this","_ret","_len","Array","_key","getPrototypeOf","concat","initialise","_this$props","isFetching","nextProps","_props","title","optionsShowOptions","optionsReverseLayerOrder","PureComponent","mapStateToProps","state","mapLegendConfig","legends","option","scales","showOptions","mapDispatchToProps","propTypes","string","isRequired","connect","_defineProperty","_createReducer","s4","Math","floor","random","toString","substring","guid","sortLayers","mapIndex","sortLayersBackwards","updateLayers","legendLyr","matchedLayer","find","uid","subLayersVisible","subLyr","subLayerFind","filter","subId","initialState","views","reducerMap","action","reducer","assign","sort","legendItems","leg","idx","legendData","subnode","imageData","subLayerId","layerId","initLyr","items","sl","push","replace","children","child","split","pop","outerHTML"],"mappings":"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","file":"arcgis-react-redux-legend.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"esri-loader\"), require(\"prop-types\"), require(\"react\"), require(\"react-redux\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"esri-loader\", \"prop-types\", \"react\", \"react-redux\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"esri-loader\"), require(\"prop-types\"), require(\"react\"), require(\"react-redux\")) : factory(root[\"esri-loader\"], root[\"prop-types\"], root[\"react\"], root[\"react-redux\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"esri-loader\"), require(\"prop-types\"), require(\"react\"), require(\"react-redux\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"esri-loader\", \"prop-types\", \"react\", \"react-redux\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"esri-loader\"), require(\"prop-types\"), require(\"react\"), require(\"react-redux\")) : factory(root[\"esri-loader\"], root[\"prop-types\"], root[\"react\"], root[\"react-redux\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setInitialLegend = exports.fetchLegend = exports.showLayersNotVisibleForScale = exports.reverseLayerOrder = exports.toggleShowSettings = exports.toggleNodeVisible = exports.toggleNodeExpanded = exports.toggleExpanded = exports.TOGGLE_LEGEND_EXPANDED = exports.SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA = exports.SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA = exports.INIT_MAP_OPTIONS = exports.SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE = exports.REVERSE_LAYER_ORDER = exports.TOGGLE_SHOW_SETTINGS = exports.SET_LEGEND_DOM_DATA = exports.TOGGLE_LEGEND_NODE_EXPANDED = exports.RECEIVE_LEGEND_DATA = exports.REQUEST_LEGEND_DATA = exports.RESET_LEGEND_IS_FETCHING = exports.TOGGLE_LEGEND_NODE_VISIBLE = exports.SET_CURRENT_SCALE = undefined;\n\nvar _esriLoader = __webpack_require__(4);\n\nvar SET_CURRENT_SCALE = exports.SET_CURRENT_SCALE = 'map-legend/SET_CURRENT_SCALE';\nvar TOGGLE_LEGEND_NODE_VISIBLE = exports.TOGGLE_LEGEND_NODE_VISIBLE = 'map-legend/TOGGLE_LEGEND_NODE_VISIBLE';\nvar RESET_LEGEND_IS_FETCHING = exports.RESET_LEGEND_IS_FETCHING = 'map-legend/RESET_LEGEND_IS_FETCHING';\nvar REQUEST_LEGEND_DATA = exports.REQUEST_LEGEND_DATA = 'map-legend/REQUEST_LEGEND_DATA';\nvar RECEIVE_LEGEND_DATA = exports.RECEIVE_LEGEND_DATA = 'map-legend/RECEIVE_LEGEND_DATA';\nvar TOGGLE_LEGEND_NODE_EXPANDED = exports.TOGGLE_LEGEND_NODE_EXPANDED = 'map-legend/TOGGLE_LEGEND_NODE_EXPANDED';\nvar SET_LEGEND_DOM_DATA = exports.SET_LEGEND_DOM_DATA = 'map-legend/SET_LEGEND_DOM_DATA';\nvar TOGGLE_SHOW_SETTINGS = exports.TOGGLE_SHOW_SETTINGS = 'map-legend/TOGGLE_SHOW_SETTINGS';\nvar REVERSE_LAYER_ORDER = exports.REVERSE_LAYER_ORDER = 'map-legend/REVERSE_LAYER_ORDER';\nvar SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE = exports.SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE = 'map-legend/SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE';\nvar INIT_MAP_OPTIONS = exports.INIT_MAP_OPTIONS = 'map-legend/INIT_MAP_OPTIONS';\nvar SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA = exports.SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA = 'map-legend/SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA';\nvar SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA = exports.SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA = 'map-legend/SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA';\nvar TOGGLE_LEGEND_EXPANDED = exports.TOGGLE_LEGEND_EXPANDED = 'map-legend/TOGGLE_LEGEND_EXPANDED';\n\nvar toggleExpanded = exports.toggleExpanded = function toggleExpanded(mapId, expanded) {\n  return {\n    type: TOGGLE_LEGEND_EXPANDED,\n    payload: { mapId: mapId, expanded: expanded }\n  };\n};\n\nvar toggleNodeExpanded = exports.toggleNodeExpanded = function toggleNodeExpanded(nodeId, mapId) {\n  return {\n    type: TOGGLE_LEGEND_NODE_EXPANDED,\n    payload: { nodeId: nodeId, mapId: mapId }\n  };\n};\n\nvar toggleNodeVisible = exports.toggleNodeVisible = function toggleNodeVisible(nodeId, mapId) {\n  return {\n    type: TOGGLE_LEGEND_NODE_VISIBLE,\n    payload: { nodeId: nodeId, mapId: mapId }\n  };\n};\n\nvar toggleShowSettings = exports.toggleShowSettings = function toggleShowSettings(mapId) {\n  return {\n    type: TOGGLE_SHOW_SETTINGS,\n    payload: { mapId: mapId }\n  };\n};\n\nvar reverseLayerOrder = exports.reverseLayerOrder = function reverseLayerOrder(mapId) {\n  return {\n    type: REVERSE_LAYER_ORDER,\n    payload: { mapId: mapId }\n  };\n};\n\nvar showLayersNotVisibleForScale = exports.showLayersNotVisibleForScale = function showLayersNotVisibleForScale(mapId, show) {\n  return {\n    type: SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE,\n    payload: { mapId: mapId, show: show }\n  };\n};\n\nvar fetchLegend = exports.fetchLegend = function fetchLegend(url, mapId) {\n  return function (dispatch) {\n    dispatch({\n      type: REQUEST_LEGEND_DATA,\n      payload: { url: url, mapId: mapId }\n    });\n\n    (0, _esriLoader.dojoRequire)(['esri/request'], function (esriRequest) {\n\n      return esriRequest(url + '/legend', {\n        query: { f: 'json' },\n        responseType: 'json'\n      }).then(function (response) {\n        dispatch({\n          type: RECEIVE_LEGEND_DATA,\n          payload: { layers: response.data.layers, url: url, mapId: mapId }\n        });\n      }, function (error) {\n        console.error(error);\n        dispatch({\n          type: RESET_LEGEND_IS_FETCHING\n        });\n      });\n    });\n  };\n};\n\nvar hookLegend = function hookLegend(legend, callback) {\n  var original = legend._buildLegendDOMForLayer;\n\n  legend._buildLegendDOMForLayer = function (a, b) {\n    var result = original.call(legend, a, b);\n    callback(result, legend);\n    return result;\n  };\n};\n\nvar debounce = function debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments;\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nvar dispatchScaleChange = debounce(function (dispatch, newScale, mapId) {\n  dispatch({\n    type: SET_CURRENT_SCALE,\n    payload: { scale: newScale, mapId: mapId }\n  });\n}, 250);\n\nvar createLayerLegend = function createLayerLegend(view, mapId, layer, dispatch) {\n  (0, _esriLoader.dojoRequire)(['esri/widgets/Legend'], function (Legend) {\n    hookLegend(new Legend({ view: view, layerInfos: [{ layer: layer }] }), function (legendDOMForLayer, legend) {\n      setTimeout(function () {\n        if (legendDOMForLayer && legendDOMForLayer.widget) {\n          dispatch({\n            type: SET_LEGEND_DOM_DATA,\n            payload: { legendWidget: legendDOMForLayer.widget, mapId: mapId }\n          });\n        }\n\n        if (legend && legend.destroy) {\n          legend.destroy();\n        }\n      }, 250);\n    });\n  });\n};\n\nvar setInitialLegend = exports.setInitialLegend = function setInitialLegend(view, mapId) {\n  return function (dispatch) {\n    view.then(function () {\n      dispatch({\n        type: INIT_MAP_OPTIONS,\n        payload: { mapId: mapId }\n      });\n\n      dispatchScaleChange(dispatch, view.scale, mapId);\n\n      view.watch('scale', function (newScale) {\n        dispatchScaleChange(dispatch, newScale, mapId);\n      });\n\n      var i = 1;\n\n      view.map.layers.forEach(function (lyr) {\n        lyr.__index = i;\n        i++;\n\n        lyr.then(function (loadedLayer) {\n          if (loadedLayer.loaded && loadedLayer.type && ['map-image'].indexOf(loadedLayer.type.toLowerCase()) > -1 && loadedLayer.allSublayers && loadedLayer.legendEnabled) {\n            dispatch({\n              type: SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA,\n              payload: { view: view, mapId: mapId, layer: loadedLayer }\n            });\n          }\n\n          if (loadedLayer.loaded && loadedLayer.type && ['csv', 'feature', 'graphics', 'scene', 'stream'].indexOf(loadedLayer.type.toLowerCase()) > -1 && (lyr.url || lyr.source) && loadedLayer.legendEnabled) {\n            dispatch({\n              type: SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA,\n              payload: { view: view, mapId: mapId, layer: loadedLayer }\n            });\n\n            createLayerLegend(view, mapId, loadedLayer, dispatch);\n          }\n        }, function (error) {\n          console.error('Failed to load a layer for use with the legend control.', error);\n        });\n      });\n    });\n  };\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(6);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(5);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = __webpack_require__(7);\n\nvar _mapLegend = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar styles = {\n  clickLegendNode: {\n    cursor: 'pointer',\n    marginRight: 6,\n    display: 'inline-block'\n  },\n  inlineBlockDisplay: {\n    display: 'inline-block',\n    marginTop: 8,\n    marginBottom: 0\n  },\n  marginTop: {\n    marginTop: 8\n  },\n  titleContainer: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 12,\n    backgroundColor: '#ebebeb',\n    margin: 0\n  },\n  titleControls: {\n    float: 'right',\n    cursor: 'pointer',\n    marginRight: 12,\n    marginLeft: 12\n  },\n  options: {\n    opacity: 0.5\n  },\n  optionsOn: {\n    opacity: 1\n  },\n  settingsPanel: {\n    position: 'absolute',\n    top: 30,\n    right: 8,\n    backgroundColor: 'whitesmoke',\n    zIndex: 101,\n    width: '90%',\n    border: 'solid 1px rgba(0,0,0,0.2)'\n  },\n  legendPadding: {\n    paddingRight: 12,\n    paddingBottom: 10,\n    paddingLeft: 12\n  },\n  legendCheckbox: {\n    cursor: 'pointer',\n    marginRight: 8,\n    color: '#EF5350'\n  },\n  legendCheckboxSelected: {\n    cursor: 'pointer',\n    marginRight: 8\n  },\n  legendCheckboxLabel: {\n    fontWeight: 400,\n    cursor: 'pointer'\n  },\n  textStyle: {\n    display: 'inline-block',\n    verticalAlign: 'bottom',\n    fontWeight: 500\n  },\n  iconMargin: {\n    marginRight: 4\n  }\n};\n\nvar renderSubNodeLegendData = function renderSubNodeLegendData(item) {\n  var imageStyle = {\n    width: item.imageWidth + 8,\n    height: item.imageHeight,\n    backgroundImage: 'url(data:image/png;base64,' + item.image + ')',\n    backgroundRepeat: 'no-repeat',\n    display: 'inline-block'\n  };\n\n  var marginStyle = { marginLeft: 16, marginTop: 6 };\n\n  return _react2.default.createElement(\n    'div',\n    { key: item.id, style: marginStyle },\n    _react2.default.createElement('div', { style: imageStyle }),\n    _react2.default.createElement(\n      'label',\n      { style: styles.textStyle },\n      item.label\n    )\n  );\n};\n\nvar renderSubNodes = function renderSubNodes(item, mapId, scale, toggleNodeExpanded, toggleNodeVisible) {\n  var marginStyle = { marginLeft: 8, opacity: 1 };\n\n  var subLayerLegendData = item.expanded && item.subLayerLegendData ? item.subLayerLegendData.map(renderSubNodeLegendData) : null;\n\n  if (scale && item.subLayerScaleRestricted && (item.subLayerMinScale !== 0 && item.subLayerMinScale < scale || item.subLayerMaxScale !== 0 && item.subLayerMaxScale > scale)) {\n    marginStyle.opacity = 0.5;\n  }\n\n  var subNodeExpander = !item.subLayerLegendData ? null : _react2.default.createElement(\n    'div',\n    { onClick: function onClick() {\n        return toggleNodeExpanded(item.id, mapId);\n      }, style: styles.clickLegendNode },\n    item.expanded ? _react2.default.createElement('span', { className: 'esri-icon-down' }) : _react2.default.createElement('span', { className: 'esri-icon-right' })\n  );\n\n  var subNodeCheckbox = _react2.default.createElement(\n    'div',\n    { style: styles.inlineBlockDisplay },\n    _react2.default.createElement(\n      'div',\n      { style: styles.inlineBlockDisplay },\n      _react2.default.createElement('span', {\n        style: item.visible ? styles.legendCheckboxSelected : styles.legendCheckbox,\n        onClick: function onClick() {\n          return toggleNodeVisible(item.id, mapId);\n        },\n        className: item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible'\n      }),\n      _react2.default.createElement(\n        'label',\n        { style: styles.legendCheckboxLabel, onClick: function onClick() {\n            return toggleNodeVisible(item.id, mapId);\n          } },\n        item.subLayerName\n      )\n    )\n  );\n\n  return _react2.default.createElement(\n    'div',\n    { key: item.id, style: marginStyle },\n    subNodeExpander,\n    subNodeCheckbox,\n    subLayerLegendData\n  );\n};\n\nvar renderNodes = function renderNodes(item, mapId, scale, toggleNodeExpanded, toggleNodeVisible, optionsShowLayersNotVisibleForScale) {\n  if (!item.alreadyLoaded) {\n    return null;\n  }\n\n  var marginStyle = { marginLeft: 4, marginTop: 8, opacity: 1 };\n  var subMarginStyle = { marginLeft: 8 };\n\n  if (scale && item.scaleRestricted && (item.minScale !== 0 && item.minScale < scale || item.maxScale !== 0 && item.maxScale > scale)) {\n    if (optionsShowLayersNotVisibleForScale === false) {\n      return null;\n    }\n    marginStyle.opacity = 0.4;\n  }\n\n  var sublayers = item.expanded && (item.legendLayers || item.hasDomNode) ? item.legendLayers ? item.legendLayers.map(function (item, index) {\n    return renderSubNodes(item, mapId, scale, toggleNodeExpanded, toggleNodeVisible);\n  }) : item.hasDomNode ? _react2.default.createElement('div', { style: subMarginStyle, dangerouslySetInnerHTML: { __html: item.domNode } }) : null : null;\n\n  var topNodeExpander = !item.legendLayers && !item.hasDomNode ? null : _react2.default.createElement(\n    'div',\n    { onClick: function onClick() {\n        return toggleNodeExpanded(item.id, mapId);\n      }, style: styles.clickLegendNode },\n    item.expanded ? _react2.default.createElement('span', { className: 'esri-icon-down' }) : _react2.default.createElement('span', { className: 'esri-icon-right' })\n  );\n\n  var nodeCheckbox = _react2.default.createElement(\n    'div',\n    { style: styles.inlineBlockDisplay },\n    _react2.default.createElement('span', {\n      style: item.visible ? styles.legendCheckboxSelected : styles.legendCheckbox,\n      onClick: function onClick() {\n        return toggleNodeVisible(item.id, mapId);\n      },\n      className: item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible'\n    }),\n    _react2.default.createElement(\n      'label',\n      { style: styles.legendCheckboxLabel, onClick: function onClick() {\n          return toggleNodeVisible(item.id, mapId);\n        } },\n      item.layerName\n    )\n  );\n\n  return _react2.default.createElement(\n    'div',\n    { key: item.id, style: marginStyle },\n    topNodeExpander,\n    nodeCheckbox,\n    sublayers\n  );\n};\n\nvar MapLegend = function (_React$PureComponent) {\n  _inherits(MapLegend, _React$PureComponent);\n\n  function MapLegend() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MapLegend);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MapLegend.__proto__ || Object.getPrototypeOf(MapLegend)).call.apply(_ref, [this].concat(args))), _this), _this.initialise = function (legend) {\n      var _this$props = _this.props,\n          mapId = _this$props.mapId,\n          fetchLegend = _this$props.fetchLegend;\n\n\n      if (!legend) {\n        return;\n      }\n\n      legend.forEach(function (lyr) {\n        if (!lyr.alreadyLoaded && lyr.url && !lyr.isFetching) {\n          fetchLegend(lyr.url, mapId);\n        }\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(MapLegend, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initialise(this.props.legend);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.legend && nextProps.legend && this.props.legend.length !== nextProps.legend.length) {\n        this.initialise(nextProps.legend);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          legend = _props.legend,\n          mapId = _props.mapId,\n          title = _props.title,\n          scale = _props.scale,\n          optionsShowOptions = _props.optionsShowOptions,\n          optionsShowLayersNotVisibleForScale = _props.optionsShowLayersNotVisibleForScale,\n          optionsReverseLayerOrder = _props.optionsReverseLayerOrder,\n          toggleExpanded = _props.toggleExpanded,\n          reverseLayerOrder = _props.reverseLayerOrder,\n          showLayersNotVisibleForScale = _props.showLayersNotVisibleForScale,\n          toggleShowSettings = _props.toggleShowSettings,\n          toggleNodeExpanded = _props.toggleNodeExpanded,\n          toggleNodeVisible = _props.toggleNodeVisible;\n\n\n      if (!legend) {\n        return null;\n      }\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'arcgis-legend' },\n        _react2.default.createElement(\n          'div',\n          null,\n          _react2.default.createElement(\n            'div',\n            { style: styles.titleContainer },\n            _react2.default.createElement(\n              'label',\n              null,\n              title ? title : mapId\n            ),\n            _react2.default.createElement(\n              'div',\n              { style: styles.titleControls },\n              _react2.default.createElement('span', {\n                title: 'Expand all',\n                className: 'esri-icon-down-arrow',\n                style: styles.iconMargin,\n                onClick: function onClick() {\n                  return toggleExpanded(mapId, true);\n                }\n              }),\n              _react2.default.createElement('span', {\n                title: 'Collapse all',\n                className: 'esri-icon-right-triangle-arrow',\n                style: styles.iconMargin,\n                onClick: function onClick() {\n                  return toggleExpanded(mapId, false);\n                }\n              }),\n              _react2.default.createElement('span', {\n                title: 'Options',\n                style: optionsShowOptions ? styles.optionsOn : styles.options,\n                className: 'esri-icon-settings',\n                onClick: function onClick() {\n                  return toggleShowSettings(mapId);\n                }\n              })\n            )\n          ),\n          optionsShowOptions ? _react2.default.createElement(\n            'div',\n            { style: styles.settingsPanel },\n            _react2.default.createElement(\n              'div',\n              { style: styles.titleContainer },\n              _react2.default.createElement(\n                'label',\n                null,\n                'Options'\n              )\n            ),\n            _react2.default.createElement(\n              'div',\n              { style: styles.legendPadding },\n              _react2.default.createElement(\n                'div',\n                { style: styles.marginTop },\n                _react2.default.createElement('span', {\n                  style: styles.legendCheckboxSelected,\n                  onClick: function onClick() {\n                    return reverseLayerOrder(mapId);\n                  },\n                  className: optionsReverseLayerOrder ? 'esri-icon-checkbox-checked' : 'esri-icon-checkbox-unchecked'\n                }),\n                _react2.default.createElement(\n                  'label',\n                  {\n                    style: styles.legendCheckboxLabel,\n                    onClick: function onClick() {\n                      return reverseLayerOrder(mapId);\n                    }\n                  },\n                  'Reverse order'\n                )\n              ),\n              _react2.default.createElement(\n                'div',\n                { style: styles.marginTop },\n                _react2.default.createElement('span', {\n                  style: styles.legendCheckboxSelected,\n                  onClick: function onClick() {\n                    return showLayersNotVisibleForScale(mapId, !optionsShowLayersNotVisibleForScale);\n                  },\n                  className: optionsShowLayersNotVisibleForScale ? 'esri-icon-checkbox-checked' : 'esri-icon-checkbox-unchecked'\n                }),\n                _react2.default.createElement(\n                  'label',\n                  {\n                    style: styles.legendCheckboxLabel,\n                    onClick: function onClick() {\n                      return showLayersNotVisibleForScale(mapId, !optionsShowLayersNotVisibleForScale);\n                    }\n                  },\n                  'Show layers not visible for current scale'\n                )\n              )\n            )\n          ) : null\n        ),\n        _react2.default.createElement(\n          'div',\n          { style: styles.legendPadding },\n          legend.map(function (item, index) {\n            return renderNodes(item, mapId, scale, toggleNodeExpanded, toggleNodeVisible, optionsShowLayersNotVisibleForScale);\n          })\n        )\n      );\n    }\n  }]);\n\n  return MapLegend;\n}(_react2.default.PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var legend = state.mapLegendConfig.legends[props.mapId];\n  var option = state.mapLegendConfig.options[props.mapId];\n  var scale = state.mapLegendConfig.scales[props.mapId];\n  return {\n    legend: legend,\n    optionsShowOptions: option ? option.showOptions : false,\n    optionsReverseLayerOrder: option ? option.reverseLayerOrder : false,\n    optionsShowLayersNotVisibleForScale: option ? option.showLayersNotVisibleForScale : true,\n    scale: scale\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchLegend: function fetchLegend(url, mapId) {\n      dispatch((0, _mapLegend.fetchLegend)(url, mapId));\n    },\n    toggleExpanded: function toggleExpanded(mapId, expanded) {\n      dispatch((0, _mapLegend.toggleExpanded)(mapId, expanded));\n    },\n    toggleNodeExpanded: function toggleNodeExpanded(id, mapId) {\n      dispatch((0, _mapLegend.toggleNodeExpanded)(id, mapId));\n    },\n    toggleNodeVisible: function toggleNodeVisible(id, mapId) {\n      dispatch((0, _mapLegend.toggleNodeVisible)(id, mapId));\n    },\n    toggleShowSettings: function toggleShowSettings(mapId) {\n      dispatch((0, _mapLegend.toggleShowSettings)(mapId));\n    },\n    reverseLayerOrder: function reverseLayerOrder(mapId) {\n      dispatch((0, _mapLegend.reverseLayerOrder)(mapId));\n    },\n    showLayersNotVisibleForScale: function showLayersNotVisibleForScale(mapId, show) {\n      dispatch((0, _mapLegend.showLayersNotVisibleForScale)(mapId, show));\n    }\n  };\n};\n\nMapLegend.propTypes = {\n  mapId: _propTypes2.default.string.isRequired,\n  title: _propTypes2.default.string\n};\n\nexports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MapLegend);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createReducer;\n\nvar _mapLegend = __webpack_require__(0);\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar s4 = function s4() {\n  return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);\n};\n\nvar guid = function guid() {\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n};\n\nvar sortLayers = function sortLayers(a, b) {\n  return a.mapIndex - b.mapIndex;\n};\n\nvar sortLayersBackwards = function sortLayersBackwards(a, b) {\n  return b.mapIndex - a.mapIndex;\n};\n\nvar updateLayers = function updateLayers(view, legend) {\n  legend.forEach(function (legendLyr) {\n    if (legendLyr.alreadyLoaded === true) {\n      var matchedLayer = view.map.layers.find(function (lyr) {\n        return lyr.uid === legendLyr.uid;\n      });\n\n      if (!matchedLayer) {\n        return null;\n      }\n\n      if (legendLyr.visible && legendLyr.subLayersVisible && matchedLayer.sublayers) {\n        matchedLayer.sublayers = matchedLayer.sublayers.map(function (subLyr) {\n          var subLayerFind = legendLyr.subLayersVisible.filter(function (subId) {\n            return subLyr.id === subId;\n          });\n\n          subLyr.visible = subLayerFind && subLayerFind.length === 1;\n          return subLyr;\n        });\n      }\n\n      if (matchedLayer.visible !== legendLyr.visible) {\n        matchedLayer.visible = legendLyr.visible;\n      }\n    }\n  });\n};\n\nvar initialState = {\n  isFetching: false,\n  legends: {},\n  views: {},\n  scales: {},\n  options: {}\n};\n\nvar createReducer = function createReducer(initialState, reducerMap) {\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments[1];\n\n    var reducer = reducerMap[action.type];\n\n    return reducer ? reducer(state, action.payload) : state;\n  };\n};\n\nexports.default = createReducer(initialState, (_createReducer = {}, _defineProperty(_createReducer, _mapLegend.SET_CURRENT_SCALE, function (state, payload) {\n  var scales = Object.assign({}, state.scales);\n  scales[payload.mapId] = payload.scale;\n\n  return Object.assign({}, state, { scales: scales });\n}), _defineProperty(_createReducer, _mapLegend.RESET_LEGEND_IS_FETCHING, function (state, payload) {\n  return Object.assign({}, state, { isFetching: false });\n}), _defineProperty(_createReducer, _mapLegend.TOGGLE_SHOW_SETTINGS, function (state, payload) {\n  var options = Object.assign({}, state.options);\n  options[payload.mapId].showOptions = !options[payload.mapId].showOptions;\n\n  return Object.assign({}, state, { options: options });\n}), _defineProperty(_createReducer, _mapLegend.REVERSE_LAYER_ORDER, function (state, payload) {\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var options = Object.assign({}, state.options);\n  options[payload.mapId].reverseLayerOrder = !options[payload.mapId].reverseLayerOrder;\n\n  legends[payload.mapId] = legend.sort(options[payload.mapId].reverseLayerOrder ? sortLayersBackwards : sortLayers);\n\n  return Object.assign({}, state, {\n    legends: legends,\n    options: options\n  });\n}), _defineProperty(_createReducer, _mapLegend.SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE, function (state, payload) {\n  var options = Object.assign({}, state.options);\n  options[payload.mapId].showLayersNotVisibleForScale = payload.show;\n\n  return Object.assign({}, state, { options: options });\n}), _defineProperty(_createReducer, _mapLegend.REQUEST_LEGEND_DATA, function (state, payload) {\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.map(function (leg, idx) {\n    if (leg.url === payload.url) {\n      leg.isFetching = true;\n    }\n\n    return leg;\n  });\n\n  legends[payload.mapId] = legendItems;\n\n  return Object.assign({}, state, {\n    isFetching: true,\n    legends: legends\n  });\n}), _defineProperty(_createReducer, _mapLegend.RECEIVE_LEGEND_DATA, function (state, payload) {\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.map(function (leg, idx) {\n    if (leg.url === payload.url) {\n      leg.legendLayers = payload.layers.map(function (lyr) {\n        var legendData = lyr.legend.map(function (subnode) {\n          return {\n            label: subnode.label,\n            image: subnode.imageData,\n            imageHeight: subnode.height,\n            imageWidth: subnode.width,\n            id: guid()\n          };\n        });\n\n        return {\n          subLayerId: lyr.layerId,\n          subLayerName: lyr.layerName,\n          subLayerMinScale: lyr.minScale,\n          subLayerMaxScale: lyr.maxScale,\n          subLayerScaleRestricted: lyr.minScale !== 0 || lyr.maxScale !== 0,\n          subLayerLegendData: legendData,\n          visible: leg.subLayersVisible ? leg.subLayersVisible.indexOf(lyr.layerId) > -1 : true,\n          expanded: true,\n          id: guid()\n        };\n      });\n\n      leg.alreadyLoaded = true;\n      leg.expanded = true;\n    }\n\n    return leg;\n  });\n\n  legends[payload.mapId] = legendItems;\n\n  return Object.assign({}, state, {\n    isFetching: false,\n    legends: legends\n  });\n}), _defineProperty(_createReducer, _mapLegend.INIT_MAP_OPTIONS, function (state, payload) {\n  var options = Object.assign({}, state.options);\n  var legends = Object.assign({}, state.legends);\n  var views = Object.assign({}, state.views);\n\n  options[payload.mapId] = {\n    reverseLayerOrder: false,\n    showLayersNotVisibleForScale: true,\n    showOptions: false\n  };\n  legends[payload.mapId] = null;\n  views[payload.mapId] = null;\n\n  return Object.assign({}, state, {\n    options: options,\n    legends: legends,\n    views: views\n  });\n}), _defineProperty(_createReducer, _mapLegend.SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA, function (state, payload) {\n  var views = Object.assign({}, state.views);\n  views[payload.mapId] = payload.view;\n\n  var initLyr = payload.layer;\n  var subLayersVisible = [];\n\n  initLyr.allSublayers.items.forEach(function (sl) {\n    if (sl.visible) {\n      subLayersVisible.push(sl.id);\n    }\n  });\n\n  var layer = [{\n    layerId: initLyr.id,\n    layerName: initLyr.title || initLyr.id,\n    minScale: initLyr.minScale,\n    maxScale: initLyr.maxScale,\n    scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\n    visible: initLyr.visible,\n    subLayersVisible: subLayersVisible,\n    url: initLyr.url.replace(/\\/+$/, ''),\n    legendLayers: null,\n    hasDomNode: false,\n    alreadyLoaded: false,\n    isFetching: false,\n    expanded: false,\n    id: guid(),\n    uid: initLyr.uid,\n    mapIndex: initLyr.__index,\n    reverseLayerOrder: false,\n    showLayersNotVisibleForScale: true\n  }];\n\n  var legends = Object.assign({}, state.legends);\n  legends[payload.mapId] = legends[payload.mapId] && legends[payload.mapId].length ? legends[payload.mapId].concat(layer) : layer;\n\n  legends[payload.mapId].sort(sortLayers);\n\n  return Object.assign({}, state, {\n    legends: legends,\n    views: views\n  });\n}), _defineProperty(_createReducer, _mapLegend.SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA, function (state, payload) {\n  var views = Object.assign({}, state.views);\n  views[payload.mapId] = payload.view;\n\n  var initLyr = payload.layer;\n\n  var layer = [{\n    layerId: initLyr.id,\n    layerName: initLyr.title || initLyr.id,\n    minScale: initLyr.minScale,\n    maxScale: initLyr.maxScale,\n    scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\n    visible: initLyr.visible,\n    legendLayers: null,\n    hasDomNode: false,\n    alreadyLoaded: false,\n    isFetching: false,\n    expanded: false,\n    id: guid(),\n    uid: initLyr.uid,\n    mapIndex: initLyr.__index,\n    reverseLayerOrder: false,\n    showLayersNotVisibleForScale: true\n  }];\n\n  var legends = Object.assign({}, state.legends);\n  legends[payload.mapId] = legends[payload.mapId] && legends[payload.mapId].length ? legends[payload.mapId].concat(layer) : layer;\n\n  legends[payload.mapId].sort(sortLayers);\n\n  return Object.assign({}, state, {\n    legends: legends,\n    views: views\n  });\n}), _defineProperty(_createReducer, _mapLegend.SET_LEGEND_DOM_DATA, function (state, payload) {\n  var legends = Object.assign({}, state.legends);\n\n  legends[payload.mapId] = legends[payload.mapId].map(function (leg, idx) {\n    if (payload.legendWidget && payload.legendWidget.children && payload.legendWidget.children.length > 0) {\n      var legendDOMForLayer = null;\n      for (var i = 0; i < payload.legendWidget.children.length; i++) {\n        var child = payload.legendWidget.children[i];\n        if (child.id.split('_').pop() === leg.uid) {\n          legendDOMForLayer = child;\n          break;\n        }\n      }\n\n      if (leg.hasDomNode === false && legendDOMForLayer && legendDOMForLayer.children && legendDOMForLayer.children.length > 1) {\n        leg.alreadyLoaded = true;\n        leg.hasDomNode = true;\n        leg.domNode = legendDOMForLayer.children[1].outerHTML;\n        leg.expanded = true;\n      }\n    }\n\n    return leg;\n  });\n\n  return Object.assign({}, state, {\n    legends: legends\n  });\n}), _defineProperty(_createReducer, _mapLegend.TOGGLE_LEGEND_NODE_EXPANDED, function (state, payload) {\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.map(function (leg, idx) {\n    if (leg.id === payload.nodeId) {\n      leg.expanded = !leg.expanded;\n    } else if (leg.legendLayers) {\n      var legendLayers = leg.legendLayers.map(function (lyr) {\n        if (lyr.id === payload.nodeId) {\n          lyr.expanded = !lyr.expanded;\n        }\n        return lyr;\n      });\n\n      leg.legendLayers = legendLayers;\n    }\n    return leg;\n  });\n\n  legends[payload.mapId] = legendItems;\n\n  return Object.assign({}, state, { legends: legends });\n}), _defineProperty(_createReducer, _mapLegend.TOGGLE_LEGEND_NODE_VISIBLE, function (state, payload) {\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.map(function (leg, idx) {\n    if (leg.id === payload.nodeId) {\n      leg.visible = !leg.visible;\n    } else if (leg.legendLayers) {\n      var legendLayers = leg.legendLayers.map(function (lyr) {\n        if (lyr.id === payload.nodeId) {\n          lyr.visible = !lyr.visible;\n        }\n\n        return lyr;\n      });\n\n      var subLayersVisible = [];\n\n      leg.legendLayers.forEach(function (layer) {\n        if (layer.visible) {\n          subLayersVisible.push(layer.subLayerId);\n        }\n      });\n\n      leg.subLayersVisible = subLayersVisible;\n      leg.legendLayers = legendLayers;\n    }\n\n    return leg;\n  });\n\n  legends[payload.mapId] = legendItems;\n\n  updateLayers(state.views[payload.mapId], legend);\n\n  return Object.assign({}, state, { legends: legends });\n}), _defineProperty(_createReducer, _mapLegend.TOGGLE_LEGEND_EXPANDED, function (state, payload) {\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.map(function (leg, idx) {\n    leg.expanded = payload.expanded;\n\n    if (leg.legendLayers) {\n      var legendLayers = leg.legendLayers.map(function (lyr) {\n        lyr.expanded = payload.expanded;\n        return lyr;\n      });\n\n      leg.legendLayers = legendLayers;\n    }\n    return leg;\n  });\n\n  legends[payload.mapId] = legendItems;\n\n  return Object.assign({}, state, { legends: legends });\n}), _createReducer));\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// components\nvar MapLegend = exports.MapLegend = __webpack_require__(1).default;\n\n// reducers\nvar reducer = exports.reducer = __webpack_require__(2).default;\n\n// actions\nvar setInitialLegend = exports.setInitialLegend = __webpack_require__(0).setInitialLegend;\nvar reverseLayerOrder = exports.reverseLayerOrder = __webpack_require__(0).reverseLayerOrder;\nvar showLayersNotVisibleForScale = exports.showLayersNotVisibleForScale = __webpack_require__(0).showLayersNotVisibleForScale;\nvar toggleExpanded = exports.toggleExpanded = __webpack_require__(0).toggleExpanded;\nvar toggleNodeExpanded = exports.toggleNodeExpanded = __webpack_require__(0).toggleNodeExpanded;\nvar toggleNodeVisible = exports.toggleNodeVisible = __webpack_require__(0).toggleNodeVisible;\nvar toggleShowSettings = exports.toggleShowSettings = __webpack_require__(0).toggleShowSettings;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"esri-loader\");\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"prop-types\");\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"react\");\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"react-redux\");\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// arcgis-react-redux-legend.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap eae960813174b8a3cd64","import { dojoRequire } from 'esri-loader';\r\n\r\nexport const SET_CURRENT_SCALE = 'map-legend/SET_CURRENT_SCALE';\r\nexport const TOGGLE_LEGEND_NODE_VISIBLE = 'map-legend/TOGGLE_LEGEND_NODE_VISIBLE';\r\nexport const RESET_LEGEND_IS_FETCHING = 'map-legend/RESET_LEGEND_IS_FETCHING';\r\nexport const REQUEST_LEGEND_DATA = 'map-legend/REQUEST_LEGEND_DATA';\r\nexport const RECEIVE_LEGEND_DATA = 'map-legend/RECEIVE_LEGEND_DATA';\r\nexport const TOGGLE_LEGEND_NODE_EXPANDED = 'map-legend/TOGGLE_LEGEND_NODE_EXPANDED';\r\nexport const SET_LEGEND_DOM_DATA = 'map-legend/SET_LEGEND_DOM_DATA';\r\nexport const TOGGLE_SHOW_SETTINGS = 'map-legend/TOGGLE_SHOW_SETTINGS';\r\nexport const REVERSE_LAYER_ORDER = 'map-legend/REVERSE_LAYER_ORDER';\r\nexport const SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE = 'map-legend/SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE';\r\nexport const INIT_MAP_OPTIONS = 'map-legend/INIT_MAP_OPTIONS';\r\nexport const SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA =\r\n  'map-legend/SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA';\r\nexport const SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA =\r\n  'map-legend/SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA';\r\nexport const TOGGLE_LEGEND_EXPANDED = 'map-legend/TOGGLE_LEGEND_EXPANDED';\r\n\r\nexport const toggleExpanded = (mapId, expanded) => {\r\n  return {\r\n    type: TOGGLE_LEGEND_EXPANDED,\r\n    payload: { mapId, expanded }\r\n  };\r\n};\r\n\r\nexport const toggleNodeExpanded = (nodeId, mapId) => {\r\n  return {\r\n    type: TOGGLE_LEGEND_NODE_EXPANDED,\r\n    payload: { nodeId, mapId }\r\n  };\r\n};\r\n\r\nexport const toggleNodeVisible = (nodeId, mapId) => {\r\n  return {\r\n    type: TOGGLE_LEGEND_NODE_VISIBLE,\r\n    payload: { nodeId, mapId }\r\n  };\r\n};\r\n\r\nexport const toggleShowSettings = mapId => {\r\n  return {\r\n    type: TOGGLE_SHOW_SETTINGS,\r\n    payload: { mapId }\r\n  };\r\n};\r\n\r\nexport const reverseLayerOrder = mapId => {\r\n  return {\r\n    type: REVERSE_LAYER_ORDER,\r\n    payload: { mapId }\r\n  };\r\n};\r\n\r\nexport const showLayersNotVisibleForScale = (mapId, show) => {\r\n  return {\r\n    type: SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE,\r\n    payload: { mapId, show }\r\n  };\r\n};\r\n\r\nexport const fetchLegend = (url, mapId) => {\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: REQUEST_LEGEND_DATA,\r\n      payload: { url, mapId }\r\n    });\r\n\r\n    dojoRequire(['esri/request'], (esriRequest) => {\r\n      \r\n      return esriRequest(url + '/legend', {\r\n        query: { f: 'json' },\r\n        responseType: 'json'\r\n      }).then(\r\n        response => {\r\n          dispatch({\r\n            type: RECEIVE_LEGEND_DATA,\r\n            payload: { layers: response.data.layers, url, mapId }\r\n          });\r\n        },\r\n        error => {\r\n          console.error(error);\r\n          dispatch({\r\n            type: RESET_LEGEND_IS_FETCHING\r\n          });\r\n        }\r\n      );\r\n    });\r\n  };\r\n};\r\n\r\nconst hookLegend = (legend, callback) => {\r\n  var original = legend._buildLegendDOMForLayer;\r\n\r\n  legend._buildLegendDOMForLayer = (a, b) => {\r\n    var result = original.call(legend, a, b);\r\n    callback(result, legend);\r\n    return result;\r\n  };\r\n};\r\n\r\nconst debounce = (func, wait, immediate) => {\r\n  var timeout;\r\n  return function() {\r\n    var context = this, args = arguments;\r\n    var later = function() {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n    var callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) func.apply(context, args);\r\n  };\r\n};\r\n\r\nconst dispatchScaleChange = debounce(function(dispatch, newScale, mapId) {\r\n  dispatch({\r\n    type: SET_CURRENT_SCALE,\r\n    payload: { scale: newScale, mapId }\r\n  });\r\n}, 250);\r\n\r\nconst createLayerLegend = (view, mapId, layer, dispatch) => {\r\n  dojoRequire(['esri/widgets/Legend'], Legend => {\r\n    hookLegend(new Legend({ view, layerInfos: [{ layer }] }), (legendDOMForLayer, legend) => {\r\n      setTimeout(() => {\r\n        if (legendDOMForLayer && legendDOMForLayer.widget) {\r\n          dispatch({\r\n            type: SET_LEGEND_DOM_DATA,\r\n            payload: { legendWidget: legendDOMForLayer.widget, mapId }\r\n          });\r\n        }\r\n\r\n        if (legend && legend.destroy) {\r\n          legend.destroy();\r\n        }\r\n      }, 250);\r\n    });\r\n  });\r\n};\r\n\r\nexport const setInitialLegend = (view, mapId) => {\r\n  return function(dispatch) {\r\n    view.then(() => {\r\n      dispatch({\r\n        type: INIT_MAP_OPTIONS,\r\n        payload: { mapId }\r\n      });\r\n\r\n      dispatchScaleChange(dispatch, view.scale, mapId);\r\n\r\n      view.watch('scale', newScale => {\r\n        dispatchScaleChange(dispatch, newScale, mapId);\r\n      });\r\n\r\n      let i = 1;\r\n\r\n      view.map.layers.forEach(lyr => {\r\n        lyr.__index = i;\r\n        i++;\r\n\r\n        lyr.then(\r\n          loadedLayer => {\r\n            if (\r\n              loadedLayer.loaded &&\r\n              loadedLayer.type &&\r\n              ['map-image'].indexOf(loadedLayer.type.toLowerCase()) > -1 &&\r\n              loadedLayer.allSublayers &&\r\n              loadedLayer.legendEnabled\r\n            ) {\r\n              dispatch({\r\n                type: SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA,\r\n                payload: { view, mapId, layer: loadedLayer }\r\n              });\r\n            }\r\n\r\n            if (\r\n              loadedLayer.loaded &&\r\n              loadedLayer.type &&\r\n              ['csv', 'feature', 'graphics', 'scene', 'stream'].indexOf(\r\n                loadedLayer.type.toLowerCase()\r\n              ) > -1 &&\r\n              (lyr.url || lyr.source) &&\r\n              loadedLayer.legendEnabled\r\n            ) {\r\n              dispatch({\r\n                type: SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA,\r\n                payload: { view, mapId, layer: loadedLayer }\r\n              });\r\n\r\n              createLayerLegend(view, mapId, loadedLayer, dispatch);\r\n            }\r\n          },\r\n          error => {\r\n            console.error('Failed to load a layer for use with the legend control.', error);\r\n          }\r\n        );\r\n      });\r\n    });\r\n  };\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/map-legend.js","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  fetchLegend,\r\n  toggleExpanded,\r\n  toggleNodeExpanded,\r\n  toggleNodeVisible,\r\n  toggleShowSettings,\r\n  reverseLayerOrder,\r\n  showLayersNotVisibleForScale\r\n} from '../actions/map-legend';\r\n\r\nconst styles = {\r\n  clickLegendNode: {\r\n    cursor: 'pointer',\r\n    marginRight: 6,\r\n    display: 'inline-block'\r\n  },\r\n  inlineBlockDisplay: {\r\n    display: 'inline-block',\r\n    marginTop: 8,\r\n    marginBottom: 0\r\n  },\r\n  marginTop: {\r\n    marginTop: 8\r\n  },\r\n  titleContainer: {\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    paddingLeft: 12,\r\n    backgroundColor: '#ebebeb',\r\n    margin: 0\r\n  },\r\n  titleControls: {\r\n    float: 'right',\r\n    cursor: 'pointer',\r\n    marginRight: 12,\r\n    marginLeft: 12\r\n  },\r\n  options: {\r\n    opacity: 0.5\r\n  },\r\n  optionsOn: {\r\n    opacity: 1\r\n  },\r\n  settingsPanel: {\r\n    position: 'absolute',\r\n    top: 30,\r\n    right: 8,\r\n    backgroundColor: 'whitesmoke',\r\n    zIndex: 101,\r\n    width: '90%',\r\n    border: 'solid 1px rgba(0,0,0,0.2)'\r\n  },\r\n  legendPadding: {\r\n    paddingRight: 12,\r\n    paddingBottom: 10,\r\n    paddingLeft: 12\r\n  },\r\n  legendCheckbox: {\r\n    cursor: 'pointer',\r\n    marginRight: 8,\r\n    color: '#EF5350'\r\n  },\r\n  legendCheckboxSelected: {\r\n    cursor: 'pointer',\r\n    marginRight: 8\r\n  },\r\n  legendCheckboxLabel: {\r\n    fontWeight: 400,\r\n    cursor: 'pointer'\r\n  },\r\n  textStyle: {\r\n    display: 'inline-block',\r\n    verticalAlign: 'bottom',\r\n    fontWeight: 500\r\n  },\r\n  iconMargin: {\r\n    marginRight: 4\r\n  }\r\n};\r\n\r\nconst renderSubNodeLegendData = item => {\r\n  const imageStyle = {\r\n    width: item.imageWidth + 8,\r\n    height: item.imageHeight,\r\n    backgroundImage: 'url(data:image/png;base64,' + item.image + ')',\r\n    backgroundRepeat: 'no-repeat',\r\n    display: 'inline-block'\r\n  };\r\n\r\n  const marginStyle = { marginLeft: 16, marginTop: 6 };\r\n\r\n  return (\r\n    <div key={item.id} style={marginStyle}>\r\n      <div style={imageStyle} />\r\n      <label style={styles.textStyle}>{item.label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderSubNodes = (item, mapId, scale, toggleNodeExpanded, toggleNodeVisible) => {\r\n  let marginStyle = { marginLeft: 8, opacity: 1 };\r\n\r\n  let subLayerLegendData = item.expanded && item.subLayerLegendData\r\n    ? item.subLayerLegendData.map(renderSubNodeLegendData)\r\n    : null;\r\n\r\n  if (\r\n    scale &&\r\n    item.subLayerScaleRestricted &&\r\n    ((item.subLayerMinScale !== 0 && item.subLayerMinScale < scale) ||\r\n      (item.subLayerMaxScale !== 0 && item.subLayerMaxScale > scale))\r\n  ) {\r\n    marginStyle.opacity = 0.5;\r\n  }\r\n\r\n  let subNodeExpander = !item.subLayerLegendData\r\n    ? null\r\n    : <div onClick={() => toggleNodeExpanded(item.id, mapId)} style={styles.clickLegendNode}>\r\n        {item.expanded ? <span className=\"esri-icon-down\" /> : <span className=\"esri-icon-right\" />}\r\n      </div>;\r\n\r\n  let subNodeCheckbox = (\r\n    <div style={styles.inlineBlockDisplay}>\r\n      <div style={styles.inlineBlockDisplay}>\r\n        <span\r\n          style={item.visible ? styles.legendCheckboxSelected : styles.legendCheckbox}\r\n          onClick={() => toggleNodeVisible(item.id, mapId)}\r\n          className={item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible'}\r\n        />\r\n        <label style={styles.legendCheckboxLabel} onClick={() => toggleNodeVisible(item.id, mapId)}>\r\n          {item.subLayerName}\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div key={item.id} style={marginStyle}>\r\n      {subNodeExpander}{subNodeCheckbox}{subLayerLegendData}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderNodes = (\r\n  item,\r\n  mapId,\r\n  scale,\r\n  toggleNodeExpanded,\r\n  toggleNodeVisible,\r\n  optionsShowLayersNotVisibleForScale\r\n) => {\r\n  if (!item.alreadyLoaded) {\r\n    return null;\r\n  }\r\n\r\n  const marginStyle = { marginLeft: 4, marginTop: 8, opacity: 1 };\r\n  const subMarginStyle = { marginLeft: 8 };\r\n\r\n  if (\r\n    scale &&\r\n    item.scaleRestricted &&\r\n    ((item.minScale !== 0 && item.minScale < scale) ||\r\n      (item.maxScale !== 0 && item.maxScale > scale))\r\n  ) {\r\n    if (optionsShowLayersNotVisibleForScale === false) {\r\n      return null;\r\n    }\r\n    marginStyle.opacity = 0.4;\r\n  }\r\n\r\n  let sublayers = item.expanded && (item.legendLayers || item.hasDomNode)\r\n    ? item.legendLayers\r\n        ? item.legendLayers.map((item, index) =>\r\n            renderSubNodes(item, mapId, scale, toggleNodeExpanded, toggleNodeVisible)\r\n          )\r\n        : item.hasDomNode\r\n            ? <div style={subMarginStyle} dangerouslySetInnerHTML={{ __html: item.domNode }} />\r\n            : null\r\n    : null;\r\n\r\n  let topNodeExpander = !item.legendLayers && !item.hasDomNode\r\n    ? null\r\n    : <div onClick={() => toggleNodeExpanded(item.id, mapId)} style={styles.clickLegendNode}>\r\n        {item.expanded ? <span className=\"esri-icon-down\" /> : <span className=\"esri-icon-right\" />}\r\n      </div>;\r\n\r\n  let nodeCheckbox = (\r\n    <div style={styles.inlineBlockDisplay}>\r\n      <span\r\n        style={item.visible ? styles.legendCheckboxSelected : styles.legendCheckbox}\r\n        onClick={() => toggleNodeVisible(item.id, mapId)}\r\n        className={item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible'}\r\n      />\r\n      <label style={styles.legendCheckboxLabel} onClick={() => toggleNodeVisible(item.id, mapId)}>\r\n        {item.layerName}\r\n      </label>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div key={item.id} style={marginStyle}>\r\n      {topNodeExpander}{nodeCheckbox}{sublayers}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass MapLegend extends React.PureComponent {\r\n  initialise = legend => {\r\n    const { mapId, fetchLegend } = this.props;\r\n\r\n    if (!legend) {\r\n      return;\r\n    }\r\n\r\n    legend.forEach(lyr => {\r\n      if (!lyr.alreadyLoaded && lyr.url && !lyr.isFetching) {\r\n        fetchLegend(lyr.url, mapId);\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initialise(this.props.legend);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (\r\n      this.props.legend &&\r\n      nextProps.legend &&\r\n      this.props.legend.length !== nextProps.legend.length\r\n    ) {\r\n      this.initialise(nextProps.legend);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      legend,\r\n      mapId,\r\n      title,\r\n      scale,\r\n      optionsShowOptions,\r\n      optionsShowLayersNotVisibleForScale,\r\n      optionsReverseLayerOrder,\r\n      toggleExpanded,\r\n      reverseLayerOrder,\r\n      showLayersNotVisibleForScale,\r\n      toggleShowSettings,\r\n      toggleNodeExpanded,\r\n      toggleNodeVisible\r\n    } = this.props;\r\n\r\n    if (!legend) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"arcgis-legend\">\r\n        <div>\r\n          <div style={styles.titleContainer}>\r\n            <label>{title ? title : mapId}</label>\r\n            <div style={styles.titleControls}>\r\n              <span\r\n                title=\"Expand all\"\r\n                className=\"esri-icon-down-arrow\"\r\n                style={styles.iconMargin}\r\n                onClick={() => toggleExpanded(mapId, true)}\r\n              />\r\n              <span\r\n                title=\"Collapse all\"\r\n                className=\"esri-icon-right-triangle-arrow\"\r\n                style={styles.iconMargin}\r\n                onClick={() => toggleExpanded(mapId, false)}\r\n              />\r\n              <span\r\n                title=\"Options\"\r\n                style={optionsShowOptions ? styles.optionsOn : styles.options}\r\n                className=\"esri-icon-settings\"\r\n                onClick={() => toggleShowSettings(mapId)}\r\n              />\r\n            </div>\r\n          </div>\r\n          {optionsShowOptions\r\n            ? <div style={styles.settingsPanel}>\r\n                <div style={styles.titleContainer}>\r\n                  <label>Options</label>\r\n                </div>\r\n                <div style={styles.legendPadding}>\r\n                  <div style={styles.marginTop}>\r\n                    <span\r\n                      style={styles.legendCheckboxSelected}\r\n                      onClick={() => reverseLayerOrder(mapId)}\r\n                      className={\r\n                        optionsReverseLayerOrder\r\n                          ? 'esri-icon-checkbox-checked'\r\n                          : 'esri-icon-checkbox-unchecked'\r\n                      }\r\n                    />\r\n                    <label\r\n                      style={styles.legendCheckboxLabel}\r\n                      onClick={() => reverseLayerOrder(mapId)}\r\n                    >\r\n                      Reverse order\r\n                    </label>\r\n                  </div>\r\n                  <div style={styles.marginTop}>\r\n                    <span\r\n                      style={styles.legendCheckboxSelected}\r\n                      onClick={() =>\r\n                        showLayersNotVisibleForScale(mapId, !optionsShowLayersNotVisibleForScale)}\r\n                      className={\r\n                        optionsShowLayersNotVisibleForScale\r\n                          ? 'esri-icon-checkbox-checked'\r\n                          : 'esri-icon-checkbox-unchecked'\r\n                      }\r\n                    />\r\n                    <label\r\n                      style={styles.legendCheckboxLabel}\r\n                      onClick={() =>\r\n                        showLayersNotVisibleForScale(mapId, !optionsShowLayersNotVisibleForScale)}\r\n                    >\r\n                      Show layers not visible for current scale\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            : null}\r\n        </div>\r\n        <div style={styles.legendPadding}>\r\n          {legend.map((item, index) =>\r\n            renderNodes(\r\n              item,\r\n              mapId,\r\n              scale,\r\n              toggleNodeExpanded,\r\n              toggleNodeVisible,\r\n              optionsShowLayersNotVisibleForScale\r\n            )\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const legend = state.mapLegendConfig.legends[props.mapId];\r\n  const option = state.mapLegendConfig.options[props.mapId];\r\n  const scale = state.mapLegendConfig.scales[props.mapId];\r\n  return {\r\n    legend,\r\n    optionsShowOptions: option ? option.showOptions : false,\r\n    optionsReverseLayerOrder: option ? option.reverseLayerOrder : false,\r\n    optionsShowLayersNotVisibleForScale: option ? option.showLayersNotVisibleForScale : true,\r\n    scale\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchLegend: (url, mapId) => {\r\n      dispatch(fetchLegend(url, mapId));\r\n    },\r\n    toggleExpanded: (mapId, expanded) => {\r\n      dispatch(toggleExpanded(mapId, expanded));\r\n    },\r\n    toggleNodeExpanded: (id, mapId) => {\r\n      dispatch(toggleNodeExpanded(id, mapId));\r\n    },\r\n    toggleNodeVisible: (id, mapId) => {\r\n      dispatch(toggleNodeVisible(id, mapId));\r\n    },\r\n    toggleShowSettings: mapId => {\r\n      dispatch(toggleShowSettings(mapId));\r\n    },\r\n    reverseLayerOrder: mapId => {\r\n      dispatch(reverseLayerOrder(mapId));\r\n    },\r\n    showLayersNotVisibleForScale: (mapId, show) => {\r\n      dispatch(showLayersNotVisibleForScale(mapId, show));\r\n    }\r\n  };\r\n};\r\n\r\nMapLegend.propTypes = {\r\n  mapId: PropTypes.string.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapLegend);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-legend.js","import {\r\n  SET_CURRENT_SCALE,\r\n  TOGGLE_SHOW_SETTINGS,\r\n  REVERSE_LAYER_ORDER,\r\n  SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE,\r\n  RESET_LEGEND_IS_FETCHING,\r\n  REQUEST_LEGEND_DATA,\r\n  RECEIVE_LEGEND_DATA,\r\n  TOGGLE_LEGEND_NODE_EXPANDED,\r\n  TOGGLE_LEGEND_NODE_VISIBLE,\r\n  SET_LEGEND_DOM_DATA,\r\n  SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA,\r\n  SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA,\r\n  INIT_MAP_OPTIONS,\r\n  TOGGLE_LEGEND_EXPANDED\r\n} from '../actions/map-legend';\r\n\r\nconst s4 = () => {\r\n  return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);\r\n};\r\n\r\nconst guid = () => {\r\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n};\r\n\r\nconst sortLayers = (a, b) => {\r\n  return a.mapIndex - b.mapIndex;\r\n};\r\n\r\nconst sortLayersBackwards = (a, b) => {\r\n  return b.mapIndex - a.mapIndex;\r\n};\r\n\r\nconst updateLayers = (view, legend) => {\r\n  legend.forEach(legendLyr => {\r\n    if (legendLyr.alreadyLoaded === true) {\r\n      const matchedLayer = view.map.layers.find(lyr => lyr.uid === legendLyr.uid);\r\n\r\n      if (!matchedLayer) {\r\n        return null;\r\n      }\r\n\r\n      if (legendLyr.visible && legendLyr.subLayersVisible && matchedLayer.sublayers) {\r\n        matchedLayer.sublayers = matchedLayer.sublayers.map(subLyr => {\r\n          const subLayerFind = legendLyr.subLayersVisible.filter(subId => {\r\n            return subLyr.id === subId;\r\n          });\r\n\r\n          subLyr.visible = subLayerFind && subLayerFind.length === 1;\r\n          return subLyr;\r\n        });\r\n      }\r\n\r\n      if (matchedLayer.visible !== legendLyr.visible) {\r\n        matchedLayer.visible = legendLyr.visible;\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  legends: {},\r\n  views: {},\r\n  scales: {},\r\n  options: {}\r\n};\r\n\r\nconst createReducer = (initialState, reducerMap) => {\r\n  return (state = initialState, action) => {\r\n    const reducer = reducerMap[action.type];\r\n\r\n    return reducer ? reducer(state, action.payload) : state;\r\n  };\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [SET_CURRENT_SCALE]: (state, payload) => {\r\n    let scales = Object.assign({}, state.scales);\r\n    scales[payload.mapId] = payload.scale;\r\n\r\n    return Object.assign({}, state, { scales: scales });\r\n  },\r\n\r\n  [RESET_LEGEND_IS_FETCHING]: (state, payload) => {\r\n    return Object.assign({}, state, { isFetching: false });\r\n  },\r\n\r\n  [TOGGLE_SHOW_SETTINGS]: (state, payload) => {\r\n    let options = Object.assign({}, state.options);\r\n    options[payload.mapId].showOptions = !options[payload.mapId].showOptions;\r\n\r\n    return Object.assign({}, state, { options: options });\r\n  },\r\n\r\n  [REVERSE_LAYER_ORDER]: (state, payload) => {\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    let options = Object.assign({}, state.options);\r\n    options[payload.mapId].reverseLayerOrder = !options[payload.mapId].reverseLayerOrder;\r\n\r\n    legends[payload.mapId] = legend.sort(\r\n      options[payload.mapId].reverseLayerOrder ? sortLayersBackwards : sortLayers\r\n    );\r\n\r\n    return Object.assign({}, state, {\r\n      legends: legends,\r\n      options: options\r\n    });\r\n  },\r\n\r\n  [SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE]: (state, payload) => {\r\n    let options = Object.assign({}, state.options);\r\n    options[payload.mapId].showLayersNotVisibleForScale = payload.show;\r\n\r\n    return Object.assign({}, state, { options: options });\r\n  },\r\n\r\n  [REQUEST_LEGEND_DATA]: (state, payload) => {\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.map((leg, idx) => {\r\n      if (leg.url === payload.url) {\r\n        leg.isFetching = true;\r\n      }\r\n\r\n      return leg;\r\n    });\r\n\r\n    legends[payload.mapId] = legendItems;\r\n\r\n    return Object.assign({}, state, {\r\n      isFetching: true,\r\n      legends: legends\r\n    });\r\n  },\r\n\r\n  [RECEIVE_LEGEND_DATA]: (state, payload) => {\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.map((leg, idx) => {\r\n      if (leg.url === payload.url) {\r\n        leg.legendLayers = payload.layers.map(lyr => {\r\n          const legendData = lyr.legend.map(subnode => {\r\n            return {\r\n              label: subnode.label,\r\n              image: subnode.imageData,\r\n              imageHeight: subnode.height,\r\n              imageWidth: subnode.width,\r\n              id: guid()\r\n            };\r\n          });\r\n\r\n          return {\r\n            subLayerId: lyr.layerId,\r\n            subLayerName: lyr.layerName,\r\n            subLayerMinScale: lyr.minScale,\r\n            subLayerMaxScale: lyr.maxScale,\r\n            subLayerScaleRestricted: lyr.minScale !== 0 || lyr.maxScale !== 0,\r\n            subLayerLegendData: legendData,\r\n            visible: leg.subLayersVisible ? leg.subLayersVisible.indexOf(lyr.layerId) > -1 : true,\r\n            expanded: true,\r\n            id: guid()\r\n          };\r\n        });\r\n\r\n        leg.alreadyLoaded = true;\r\n        leg.expanded = true;\r\n      }\r\n\r\n      return leg;\r\n    });\r\n\r\n    legends[payload.mapId] = legendItems;\r\n\r\n    return Object.assign({}, state, {\r\n      isFetching: false,\r\n      legends: legends\r\n    });\r\n  },\r\n\r\n  [INIT_MAP_OPTIONS]: (state, payload) => {\r\n    let options = Object.assign({}, state.options);\r\n    let legends = Object.assign({}, state.legends);\r\n    let views = Object.assign({}, state.views);\r\n\r\n    options[payload.mapId] = {\r\n      reverseLayerOrder: false,\r\n      showLayersNotVisibleForScale: true,\r\n      showOptions: false\r\n    };\r\n    legends[payload.mapId] = null;\r\n    views[payload.mapId] = null;\r\n\r\n    return Object.assign({}, state, { \r\n      options: options,\r\n      legends: legends,\r\n      views: views\r\n    });\r\n  },\r\n\r\n  [SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA]: (state, payload) => {\r\n    let views = Object.assign({}, state.views);\r\n    views[payload.mapId] = payload.view;\r\n\r\n    let initLyr = payload.layer;\r\n    let subLayersVisible = [];\r\n\r\n    initLyr.allSublayers.items.forEach(sl => {\r\n      if (sl.visible) {\r\n        subLayersVisible.push(sl.id);\r\n      }\r\n    });\r\n\r\n    let layer = [\r\n      {\r\n        layerId: initLyr.id,\r\n        layerName: initLyr.title || initLyr.id,\r\n        minScale: initLyr.minScale,\r\n        maxScale: initLyr.maxScale,\r\n        scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\r\n        visible: initLyr.visible,\r\n        subLayersVisible: subLayersVisible,\r\n        url: initLyr.url.replace(/\\/+$/, ''),\r\n        legendLayers: null,\r\n        hasDomNode: false,\r\n        alreadyLoaded: false,\r\n        isFetching: false,\r\n        expanded: false,\r\n        id: guid(),\r\n        uid: initLyr.uid,\r\n        mapIndex: initLyr.__index,\r\n        reverseLayerOrder: false,\r\n        showLayersNotVisibleForScale: true\r\n      }\r\n    ];\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    legends[payload.mapId] = legends[payload.mapId] && legends[payload.mapId].length\r\n      ? legends[payload.mapId].concat(layer)\r\n      : layer;\r\n\r\n    legends[payload.mapId].sort(sortLayers);\r\n\r\n    return Object.assign({}, state, {\r\n      legends: legends,\r\n      views: views\r\n    });\r\n  },\r\n\r\n  [SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA]: (state, payload) => {\r\n    let views = Object.assign({}, state.views);\r\n    views[payload.mapId] = payload.view;\r\n\r\n    let initLyr = payload.layer;\r\n\r\n    let layer = [\r\n      {\r\n        layerId: initLyr.id,\r\n        layerName: initLyr.title || initLyr.id,\r\n        minScale: initLyr.minScale,\r\n        maxScale: initLyr.maxScale,\r\n        scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\r\n        visible: initLyr.visible,\r\n        legendLayers: null,\r\n        hasDomNode: false,\r\n        alreadyLoaded: false,\r\n        isFetching: false,\r\n        expanded: false,\r\n        id: guid(),\r\n        uid: initLyr.uid,\r\n        mapIndex: initLyr.__index,\r\n        reverseLayerOrder: false,\r\n        showLayersNotVisibleForScale: true\r\n      }\r\n    ];\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    legends[payload.mapId] = legends[payload.mapId] && legends[payload.mapId].length\r\n      ? legends[payload.mapId].concat(layer)\r\n      : layer;\r\n\r\n    legends[payload.mapId].sort(sortLayers);\r\n\r\n    return Object.assign({}, state, {\r\n      legends: legends,\r\n      views: views\r\n    });\r\n  },\r\n\r\n  [SET_LEGEND_DOM_DATA]: (state, payload) => {\r\n    let legends = Object.assign({}, state.legends);\r\n\r\n    legends[payload.mapId] = legends[payload.mapId].map((leg, idx) => {\r\n      if (\r\n        payload.legendWidget &&\r\n        payload.legendWidget.children &&\r\n        payload.legendWidget.children.length > 0\r\n      ) {\r\n        let legendDOMForLayer = null;\r\n        for (let i = 0; i < payload.legendWidget.children.length; i++) {\r\n          let child = payload.legendWidget.children[i];\r\n          if (child.id.split('_').pop() === leg.uid) {\r\n            legendDOMForLayer = child;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (\r\n          leg.hasDomNode === false &&\r\n          legendDOMForLayer &&\r\n          legendDOMForLayer.children &&\r\n          legendDOMForLayer.children.length > 1\r\n        ) {\r\n          leg.alreadyLoaded = true;\r\n          leg.hasDomNode = true;\r\n          leg.domNode = legendDOMForLayer.children[1].outerHTML;\r\n          leg.expanded = true;\r\n        }\r\n      }\r\n\r\n      return leg;\r\n    });\r\n\r\n    return Object.assign({}, state, {\r\n      legends: legends\r\n    });\r\n  },\r\n\r\n  [TOGGLE_LEGEND_NODE_EXPANDED]: (state, payload) => {\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.map((leg, idx) => {\r\n      if (leg.id === payload.nodeId) {\r\n        leg.expanded = !leg.expanded;\r\n      } else if (leg.legendLayers) {\r\n        const legendLayers = leg.legendLayers.map(lyr => {\r\n          if (lyr.id === payload.nodeId) {\r\n            lyr.expanded = !lyr.expanded;\r\n          }\r\n          return lyr;\r\n        });\r\n\r\n        leg.legendLayers = legendLayers;\r\n      }\r\n      return leg;\r\n    });\r\n\r\n    legends[payload.mapId] = legendItems;\r\n\r\n    return Object.assign({}, state, { legends: legends });\r\n  },\r\n\r\n  [TOGGLE_LEGEND_NODE_VISIBLE]: (state, payload) => {\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.map((leg, idx) => {\r\n      if (leg.id === payload.nodeId) {\r\n        leg.visible = !leg.visible;\r\n      } else if (leg.legendLayers) {\r\n        const legendLayers = leg.legendLayers.map(lyr => {\r\n          if (lyr.id === payload.nodeId) {\r\n            lyr.visible = !lyr.visible;\r\n          }\r\n\r\n          return lyr;\r\n        });\r\n\r\n        let subLayersVisible = [];\r\n\r\n        leg.legendLayers.forEach(layer => {\r\n          if (layer.visible) {\r\n            subLayersVisible.push(layer.subLayerId);\r\n          }\r\n        });\r\n\r\n        leg.subLayersVisible = subLayersVisible;\r\n        leg.legendLayers = legendLayers;\r\n      }\r\n\r\n      return leg;\r\n    });\r\n\r\n    legends[payload.mapId] = legendItems;\r\n\r\n    updateLayers(state.views[payload.mapId], legend);\r\n\r\n    return Object.assign({}, state, { legends: legends });\r\n  },\r\n\r\n  [TOGGLE_LEGEND_EXPANDED]: (state, payload) => {\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.map((leg, idx) => {\r\n      leg.expanded = payload.expanded;\r\n\r\n      if (leg.legendLayers) {\r\n        const legendLayers = leg.legendLayers.map(lyr => {\r\n          lyr.expanded = payload.expanded;\r\n          return lyr;\r\n        });\r\n\r\n        leg.legendLayers = legendLayers;\r\n      }\r\n      return leg;\r\n    });\r\n\r\n    legends[payload.mapId] = legendItems;\r\n\r\n    return Object.assign({}, state, { legends: legends });\r\n  }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/map-legend.js","// components\r\nexport const MapLegend = require('./components/map-legend').default;\r\n\r\n// reducers\r\nexport const reducer = require('./reducers/map-legend').default;\r\n\r\n// actions\r\nexport const setInitialLegend = require('./actions/map-legend').setInitialLegend;\r\nexport const reverseLayerOrder = require('./actions/map-legend').reverseLayerOrder;\r\nexport const showLayersNotVisibleForScale = require('./actions/map-legend')\r\n  .showLayersNotVisibleForScale;\r\nexport const toggleExpanded = require('./actions/map-legend').toggleExpanded;\r\nexport const toggleNodeExpanded = require('./actions/map-legend').toggleNodeExpanded;\r\nexport const toggleNodeVisible = require('./actions/map-legend').toggleNodeVisible;\r\nexport const toggleShowSettings = require('./actions/map-legend').toggleShowSettings;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"esri-loader\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"esri-loader\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"react-redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-redux\"\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}