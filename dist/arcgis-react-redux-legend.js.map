{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///arcgis-react-redux-legend.js","webpack:///webpack/bootstrap 6c7189933b1ee19b5149","webpack:///./src/actions/map-legend.js","webpack:///./src/components/map-legend.js","webpack:///./src/reducers/map-legend.js","webpack:///external \"esri-loader\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///./src/index.js"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","modules","__webpack_require__","moduleId","installedModules","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireWildcard","obj","newObj","key","default","setInitialLegend","fetchLegend","toggleNodeVisible","toggleNodeExpanded","SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA","SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA","SET_LEGEND_DOM_DATA","TOGGLE_LEGEND_NODE_EXPANDED","RECEIVE_LEGEND_DATA","REQUEST_LEGEND_DATA","RESET_LEGEND_IS_FETCHING","TOGGLE_LEGEND_NODE_VISIBLE","SET_CURRENT_SCALE","undefined","_esriLoader","esriLoader","hookLegend","nodeId","mapId","type","payload","url","dispatch","dojoRequire","esriRequest","esriConfig","request","corsDetection","query","f","responseType","then","response","layers","data","error","console","legend","callback","original","_buildLegendDOMForLayer","b","result","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","dispatchScaleChange","newScale","scale","createLayerLegend","view","layer","Legend","layerInfos","legendDOMForLayer","widget","legendWidget","destroy","watch","map","forEach","lyr","__index","loadedLayer","loaded","allSublayers","legendEnabled","toLowerCase","source","_interopRequireDefault","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","length","descriptor","protoProps","staticProps","_react","_react2","_reactRedux","_mapLegend","styles","clickLegendNode","cursor","marginRight","display","inlineBlockDisplay","marginTop","marginBottom","legendMap","paddingTop","paddingRight","paddingBottom","paddingLeft","backgroundColor","fontWeight","legendCheckbox","legendCheckboxLabel","textStyle","verticalAlign","MapLegend","_React$Component","_ref","_temp","_this","_ret","_len","Array","_key","getPrototypeOf","concat","initialise","_this$props","legends","isFetching","alreadyLoaded","renderSubNodeLegendData","item","imageStyle","width","imageWidth","height","imageHeight","backgroundImage","image","backgroundRepeat","marginStyle","marginLeft","createElement","id","style","label","renderSubNodes","_this$props2","scales","currentScale","subLayerLegendData","expanded","subLayerScaleRestricted","subLayerMinScale","subLayerMaxScale","color","subNodeExpander","onClick","className","subNodeCheckbox","visible","subLayerName","renderNodes","_this$props3","subMarginStyle","sublayers","legendLayers","hasDomNode","dangerouslySetInnerHTML","__html","domNode","scaleRestricted","minScale","maxScale","topNodeExpander","nodeCheckbox","layerName","prevProps","prevState","_props","split","join","Component","mapStateToProps","state","mapLegendConfig","mapDispatchToProps","connect","_defineProperty","_createReducer","s4","Math","floor","random","toString","substring","guid","updateLayers","legendLyr","matchedLayer","find","uid","subLayersVisible","subLyr","subLayerFind","filter","subId","initialState","views","createReducer","reducerMap","action","reducer","assign","legendItems","leg","idx","legendData","subnode","imageData","subLayerId","layerId","indexOf","initLyr","items","sl","push","title","replace","mapIndex","sort","children","child","pop","outerHTML"],"mappings":"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","file":"arcgis-react-redux-legend.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"esri-loader\", \"react\", \"react-redux\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\")) : factory(root[\"esri-loader\"], root[\"react\"], root[\"react-redux\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"esri-loader\", \"react\", \"react-redux\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\")) : factory(root[\"esri-loader\"], root[\"react\"], root[\"react-redux\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setInitialLegend = exports.fetchLegend = exports.toggleNodeVisible = exports.toggleNodeExpanded = exports.SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA = exports.SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA = exports.SET_LEGEND_DOM_DATA = exports.TOGGLE_LEGEND_NODE_EXPANDED = exports.RECEIVE_LEGEND_DATA = exports.REQUEST_LEGEND_DATA = exports.RESET_LEGEND_IS_FETCHING = exports.TOGGLE_LEGEND_NODE_VISIBLE = exports.SET_CURRENT_SCALE = undefined;\n\nvar _esriLoader = __webpack_require__(3);\n\nvar esriLoader = _interopRequireWildcard(_esriLoader);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar SET_CURRENT_SCALE = exports.SET_CURRENT_SCALE = \"map-legend/SET_CURRENT_SCALE\";\nvar TOGGLE_LEGEND_NODE_VISIBLE = exports.TOGGLE_LEGEND_NODE_VISIBLE = \"map-legend/TOGGLE_LEGEND_NODE_VISIBLE\";\nvar RESET_LEGEND_IS_FETCHING = exports.RESET_LEGEND_IS_FETCHING = \"map-legend/RESET_LEGEND_IS_FETCHING\";\nvar REQUEST_LEGEND_DATA = exports.REQUEST_LEGEND_DATA = \"map-legend/REQUEST_LEGEND_DATA\";\nvar RECEIVE_LEGEND_DATA = exports.RECEIVE_LEGEND_DATA = \"map-legend/RECEIVE_LEGEND_DATA\";\nvar TOGGLE_LEGEND_NODE_EXPANDED = exports.TOGGLE_LEGEND_NODE_EXPANDED = \"map-legend/TOGGLE_LEGEND_NODE_EXPANDED\";\nvar SET_LEGEND_DOM_DATA = exports.SET_LEGEND_DOM_DATA = \"map-legend/SET_LEGEND_DOM_DATA\";\n\nvar SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA = exports.SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA = 'map-legend/SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA';\nvar SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA = exports.SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA = 'map-legend/SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA';\n\nvar toggleNodeExpanded = exports.toggleNodeExpanded = function toggleNodeExpanded(nodeId, mapId) {\n  return {\n    type: TOGGLE_LEGEND_NODE_EXPANDED,\n    payload: { nodeId: nodeId, mapId: mapId }\n  };\n};\n\nvar toggleNodeVisible = exports.toggleNodeVisible = function toggleNodeVisible(nodeId, mapId) {\n  return {\n    type: TOGGLE_LEGEND_NODE_VISIBLE,\n    payload: { nodeId: nodeId, mapId: mapId }\n  };\n};\n\nvar fetchLegend = exports.fetchLegend = function fetchLegend(url, mapId) {\n\n  return function (dispatch) {\n\n    dispatch({\n      type: REQUEST_LEGEND_DATA,\n      payload: { url: url, mapId: mapId }\n    });\n\n    esriLoader.dojoRequire([\"esri/request\", \"esri/config\"], function (esriRequest, esriConfig) {\n      esriConfig.request.corsDetection = false;\n\n      return esriRequest(url + \"/legend\", {\n        query: { f: \"json\" },\n        responseType: \"json\"\n      }).then(function (response) {\n        dispatch({\n          type: RECEIVE_LEGEND_DATA,\n          payload: { layers: response.data.layers, url: url, mapId: mapId }\n        });\n      }, function (error) {\n        console.error(error);\n        dispatch({\n          type: RESET_LEGEND_IS_FETCHING\n        });\n      });\n    });\n  };\n};\n\nvar hookLegend = function hookLegend(legend, callback) {\n\n  var original = legend._buildLegendDOMForLayer;\n\n  legend._buildLegendDOMForLayer = function (a, b) {\n\n    var result = original.call(legend, a, b);\n    callback(result, legend);\n    return result;\n  };\n};\n\nvar debounce = function debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments;\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nvar dispatchScaleChange = debounce(function (dispatch, newScale, mapId) {\n\n  dispatch({\n    type: SET_CURRENT_SCALE,\n    payload: { scale: newScale, mapId: mapId }\n  });\n}, 250);\n\nvar createLayerLegend = function createLayerLegend(view, mapId, layer, dispatch) {\n\n  esriLoader.dojoRequire([\"esri/widgets/Legend\"], function (Legend) {\n\n    hookLegend(new Legend({ view: view, layerInfos: [{ layer: layer }] }), function (legendDOMForLayer, legend) {\n\n      setTimeout(function () {\n\n        if (legendDOMForLayer && legendDOMForLayer.widget) {\n          dispatch({\n            type: SET_LEGEND_DOM_DATA,\n            payload: { legendWidget: legendDOMForLayer.widget, mapId: mapId }\n          });\n        }\n\n        if (legend && legend.destroy) {\n          legend.destroy();\n        }\n      }, 250);\n    });\n  });\n};\n\nvar setInitialLegend = exports.setInitialLegend = function setInitialLegend(view, mapId) {\n\n  return function (dispatch) {\n\n    view.then(function () {\n\n      dispatchScaleChange(dispatch, view.scale, mapId);\n\n      view.watch(\"scale\", function (newScale) {\n        dispatchScaleChange(dispatch, newScale, mapId);\n      });\n\n      var i = 1;\n\n      view.map.layers.forEach(function (lyr) {\n\n        lyr.__index = i;\n        i++;\n\n        lyr.then(function (loadedLayer) {\n\n          if (loadedLayer.loaded && loadedLayer.allSublayers && loadedLayer.legendEnabled) {\n\n            dispatch({\n              type: SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA,\n              payload: { view: view, mapId: mapId, layer: loadedLayer }\n            });\n          }\n\n          if (loadedLayer.loaded && loadedLayer.type && (loadedLayer.type.toLowerCase() === 'feature' || loadedLayer.type.toLowerCase() === 'graphics') && (lyr.url || lyr.source) && loadedLayer.legendEnabled) {\n\n            dispatch({\n              type: SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA,\n              payload: { view: view, mapId: mapId, layer: loadedLayer }\n            });\n\n            createLayerLegend(view, mapId, loadedLayer, dispatch);\n          }\n        }, function (error) {\n          console.error('Failed to load a layer for use with the legend control.', error);\n        });\n      });\n    });\n  };\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(4);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(5);\n\nvar _mapLegend = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar styles = {\n  clickLegendNode: {\n    cursor: 'pointer',\n    marginRight: 6,\n    display: 'inline-block'\n  },\n  inlineBlockDisplay: {\n    display: 'inline-block',\n    marginTop: 8,\n    marginBottom: 0\n  },\n  legendMap: {\n    paddingTop: 10,\n    paddingRight: 6,\n    paddingBottom: 10,\n    paddingLeft: 6,\n    backgroundColor: '#ebebeb',\n    fontWeight: 'bold'\n  },\n  legendCheckbox: {\n    cursor: 'pointer',\n    marginRight: 8\n  },\n  legendCheckboxLabel: {\n    fontWeight: 400,\n    cursor: 'pointer'\n  },\n  textStyle: {\n    display: \"inline-block\",\n    verticalAlign: \"bottom\",\n    fontWeight: 500\n  }\n};\n\nvar MapLegend = function (_React$Component) {\n  _inherits(MapLegend, _React$Component);\n\n  function MapLegend() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MapLegend);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MapLegend.__proto__ || Object.getPrototypeOf(MapLegend)).call.apply(_ref, [this].concat(args))), _this), _this.initialise = function () {\n      var _this$props = _this.props,\n          legends = _this$props.legends,\n          mapId = _this$props.mapId,\n          fetchLegend = _this$props.fetchLegend;\n\n      var legend = legends[mapId];\n\n      if (!legend) {\n        return;\n      }\n\n      legend.forEach(function (lyr) {\n\n        if (lyr.url && !lyr.isFetching && !lyr.alreadyLoaded) {\n          fetchLegend(lyr.url, mapId);\n        }\n      });\n    }, _this.renderSubNodeLegendData = function (item) {\n      var imageStyle = {\n        width: item.imageWidth + 8,\n        height: item.imageHeight,\n        backgroundImage: \"url(data:image/png;base64,\" + item.image + \")\",\n        backgroundRepeat: \"no-repeat\",\n        display: 'inline-block'\n      };\n\n      var marginStyle = { marginLeft: 16, marginTop: 6 };\n\n      return _react2.default.createElement(\n        \"div\",\n        { key: item.id, style: marginStyle },\n        _react2.default.createElement(\"div\", { style: imageStyle }),\n        _react2.default.createElement(\n          \"label\",\n          { style: styles.textStyle },\n          item.label\n        )\n      );\n    }, _this.renderSubNodes = function (item) {\n      var _this$props2 = _this.props,\n          mapId = _this$props2.mapId,\n          scales = _this$props2.scales,\n          toggleNodeExpanded = _this$props2.toggleNodeExpanded,\n          toggleNodeVisible = _this$props2.toggleNodeVisible;\n\n\n      var currentScale = scales[mapId];\n\n      var marginStyle = { marginLeft: 8 };\n\n      var subLayerLegendData = item.expanded && item.subLayerLegendData ? item.subLayerLegendData.map(_this.renderSubNodeLegendData) : null;\n\n      if (currentScale && item.subLayerScaleRestricted && (item.subLayerMinScale !== 0 && item.subLayerMinScale < currentScale || item.subLayerMaxScale !== 0 && item.subLayerMaxScale > currentScale)) {\n        marginStyle.color = \"#dcdcdc\";\n      }\n\n      var subNodeExpander = !item.subLayerLegendData ? null : _react2.default.createElement(\n        \"div\",\n        { onClick: function onClick() {\n            return toggleNodeExpanded(item.id, mapId);\n          }, style: styles.clickLegendNode },\n        item.expanded ? _react2.default.createElement(\"span\", { className: \"esri-icon-down\" }) : _react2.default.createElement(\"span\", { className: \"esri-icon-right\" })\n      );\n\n      var subNodeCheckbox = _react2.default.createElement(\n        \"div\",\n        { style: styles.inlineBlockDisplay },\n        _react2.default.createElement(\n          \"div\",\n          { style: styles.inlineBlockDisplay },\n          _react2.default.createElement(\"span\", { style: styles.legendCheckbox, onClick: function onClick() {\n              return toggleNodeVisible(item.id, mapId);\n            }, className: item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible' }),\n          _react2.default.createElement(\n            \"label\",\n            { style: styles.legendCheckboxLabel, onClick: function onClick() {\n                return toggleNodeVisible(item.id, mapId);\n              } },\n            item.subLayerName\n          )\n        )\n      );\n\n      return _react2.default.createElement(\n        \"div\",\n        { key: item.id, style: marginStyle },\n        subNodeExpander,\n        subNodeCheckbox,\n        subLayerLegendData\n      );\n    }, _this.renderNodes = function (item) {\n\n      if (!item.alreadyLoaded) {\n        return '';\n      }\n\n      var _this$props3 = _this.props,\n          mapId = _this$props3.mapId,\n          scales = _this$props3.scales,\n          toggleNodeExpanded = _this$props3.toggleNodeExpanded,\n          toggleNodeVisible = _this$props3.toggleNodeVisible;\n\n\n      var currentScale = scales[mapId];\n\n      var marginStyle = { marginLeft: 4, marginTop: 8 };\n      var subMarginStyle = { marginLeft: 8 };\n\n      var sublayers = item.expanded && (item.legendLayers || item.hasDomNode) ? item.legendLayers ? item.legendLayers.map(_this.renderSubNodes) : item.hasDomNode ? _react2.default.createElement(\"div\", { style: subMarginStyle, dangerouslySetInnerHTML: { __html: item.domNode } }) : null : null;\n\n      if (currentScale && item.scaleRestricted && (item.minScale !== 0 && item.minScale < currentScale || item.maxScale !== 0 && item.maxScale > currentScale)) {\n        marginStyle.color = \"#dcdcdc\";\n      }\n\n      var topNodeExpander = !item.legendLayers && !item.hasDomNode ? null : _react2.default.createElement(\n        \"div\",\n        { onClick: function onClick() {\n            return toggleNodeExpanded(item.id, mapId);\n          }, style: styles.clickLegendNode },\n        item.expanded ? _react2.default.createElement(\"span\", { className: \"esri-icon-down\" }) : _react2.default.createElement(\"span\", { className: \"esri-icon-right\" })\n      );\n\n      var nodeCheckbox = _react2.default.createElement(\n        \"div\",\n        { style: styles.inlineBlockDisplay },\n        _react2.default.createElement(\"span\", { style: styles.legendCheckbox, onClick: function onClick() {\n            return toggleNodeVisible(item.id, mapId);\n          }, className: item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible' }),\n        _react2.default.createElement(\n          \"label\",\n          { style: styles.legendCheckboxLabel, onClick: function onClick() {\n              return toggleNodeVisible(item.id, mapId);\n            } },\n          item.layerName\n        )\n      );\n\n      return _react2.default.createElement(\n        \"div\",\n        { key: item.id, style: marginStyle },\n        topNodeExpander,\n        nodeCheckbox,\n        sublayers\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(MapLegend, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initialise();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this.initialise();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          legends = _props.legends,\n          mapId = _props.mapId;\n\n      var legend = legends[mapId];\n\n      if (!legend) {\n        return null;\n      }\n\n      return _react2.default.createElement(\n        \"div\",\n        { id: \"legend\" },\n        _react2.default.createElement(\n          \"div\",\n          null,\n          _react2.default.createElement(\n            \"h5\",\n            { style: styles.legendMap },\n            mapId.split(\"-\").join(\" - \")\n          )\n        ),\n        _react2.default.createElement(\n          \"div\",\n          null,\n          legend.map(this.renderNodes)\n        )\n      );\n    }\n  }]);\n\n  return MapLegend;\n}(_react2.default.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    legends: state.mapLegendConfig.legends,\n    scales: state.mapLegendConfig.scales\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchLegend: function fetchLegend(url, mapId) {\n      dispatch((0, _mapLegend.fetchLegend)(url, mapId));\n    },\n    toggleNodeExpanded: function toggleNodeExpanded(id, mapId) {\n      dispatch((0, _mapLegend.toggleNodeExpanded)(id, mapId));\n    },\n    toggleNodeVisible: function toggleNodeVisible(id, mapId) {\n      dispatch((0, _mapLegend.toggleNodeVisible)(id, mapId));\n    }\n  };\n};\n\nexports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MapLegend);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createReducer;\n\nvar _mapLegend = __webpack_require__(0);\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar s4 = function s4() {\n  return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);\n};\n\nvar guid = function guid() {\n  return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\n};\n\nvar updateLayers = function updateLayers(view, legend) {\n\n  legend.forEach(function (legendLyr) {\n\n    if (legendLyr.alreadyLoaded === true) {\n      var matchedLayer = view.map.layers.find(function (lyr) {\n        return lyr.uid === legendLyr.uid;\n      });\n\n      if (!matchedLayer) {\n        return null;\n      }\n\n      if (legendLyr.visible && legendLyr.subLayersVisible && matchedLayer.sublayers) {\n        if (matchedLayer.sublayers) {\n          matchedLayer.sublayers = matchedLayer.sublayers.map(function (subLyr) {\n            var subLayerFind = legendLyr.subLayersVisible.filter(function (subId) {\n              return subLyr.id === subId;\n            });\n\n            subLyr.visible = subLayerFind && subLayerFind.length === 1;\n            return subLyr;\n          });\n        }\n      }\n\n      if (matchedLayer.visible !== legendLyr.visible) {\n        matchedLayer.visible = legendLyr.visible;\n      }\n    }\n  });\n};\n\nvar initialState = {\n  isFetching: false,\n  legends: {},\n  views: {},\n  scales: {}\n};\n\nvar createReducer = function createReducer(initialState, reducerMap) {\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments[1];\n\n    var reducer = reducerMap[action.type];\n\n    return reducer ? reducer(state, action.payload) : state;\n  };\n};\n\nexports.default = createReducer(initialState, (_createReducer = {}, _defineProperty(_createReducer, _mapLegend.SET_CURRENT_SCALE, function (state, payload) {\n\n  var scales = Object.assign({}, state.scales);\n  scales[payload.mapId] = payload.scale;\n\n  return Object.assign({}, state, { 'scales': scales });\n}), _defineProperty(_createReducer, _mapLegend.RESET_LEGEND_IS_FETCHING, function (state, payload) {\n\n  return Object.assign({}, state, { 'isFetching': false });\n}), _defineProperty(_createReducer, _mapLegend.REQUEST_LEGEND_DATA, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.map(function (leg, idx) {\n    if (leg.url === payload.url) {\n      leg.isFetching = true;\n    }\n\n    return leg;\n  });\n\n  legends[payload.mapId] = legendItems;\n\n  return Object.assign({}, state, {\n    'isFetching': true,\n    'legends': legends\n  });\n}), _defineProperty(_createReducer, _mapLegend.RECEIVE_LEGEND_DATA, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.map(function (leg, idx) {\n    if (leg.url === payload.url) {\n      leg.legendLayers = payload.layers.map(function (lyr) {\n        var legendData = lyr.legend.map(function (subnode) {\n          return {\n            label: subnode.label,\n            image: subnode.imageData,\n            imageHeight: subnode.height,\n            imageWidth: subnode.width,\n            id: guid()\n          };\n        });\n\n        return {\n          subLayerId: lyr.layerId,\n          subLayerName: lyr.layerName,\n          subLayerMinScale: lyr.minScale,\n          subLayerMaxScale: lyr.maxScale,\n          subLayerScaleRestricted: lyr.minScale !== 0 || lyr.maxScale !== 0,\n          subLayerLegendData: legendData,\n          visible: leg.subLayersVisible ? leg.subLayersVisible.indexOf(lyr.layerId) > -1 : true,\n          expanded: true,\n          id: guid()\n        };\n      });\n\n      leg.alreadyLoaded = true;\n      leg.expanded = true;\n    }\n\n    return leg;\n  });\n\n  legends[payload.mapId] = legendItems;\n\n  return Object.assign({}, state, {\n    'isFetching': false,\n    'legends': legends\n  });\n}), _defineProperty(_createReducer, _mapLegend.SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA, function (state, payload) {\n\n  var views = Object.assign({}, state.views);\n  views[payload.mapId] = payload.view;\n\n  var initLyr = payload.layer;\n  var subLayersVisible = [];\n\n  initLyr.allSublayers.items.forEach(function (sl) {\n\n    if (sl.visible) {\n      subLayersVisible.push(sl.id);\n    }\n  });\n\n  var layer = [{\n    layerId: initLyr.id,\n    layerName: initLyr.title || initLyr.id,\n    minScale: initLyr.minScale,\n    maxScale: initLyr.maxScale,\n    scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\n    visible: initLyr.visible,\n    subLayersVisible: subLayersVisible,\n    url: initLyr.url.replace(/\\/+$/, ''),\n    legendLayers: null,\n    hasDomNode: false,\n    alreadyLoaded: false,\n    isFetching: false,\n    expanded: false,\n    id: guid(),\n    uid: initLyr.uid,\n    mapIndex: initLyr.__index\n  }];\n\n  var legends = Object.assign({}, state.legends);\n  legends[payload.mapId] = legends[payload.mapId] && legends[payload.mapId].length ? legends[payload.mapId].concat(layer) : layer;\n\n  legends[payload.mapId].sort(function (a, b) {\n    return a.mapIndex - b.mapIndex;\n  });\n\n  return Object.assign({}, state, {\n    'legends': legends,\n    'views': views\n  });\n}), _defineProperty(_createReducer, _mapLegend.SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA, function (state, payload) {\n\n  var views = Object.assign({}, state.views);\n  views[payload.mapId] = payload.view;\n\n  var initLyr = payload.layer;\n\n  var layer = [{\n    layerId: initLyr.id,\n    layerName: initLyr.title || initLyr.id,\n    minScale: initLyr.minScale,\n    maxScale: initLyr.maxScale,\n    scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\n    visible: initLyr.visible,\n    legendLayers: null,\n    hasDomNode: false,\n    alreadyLoaded: false,\n    isFetching: false,\n    expanded: false,\n    id: guid(),\n    uid: initLyr.uid,\n    mapIndex: initLyr.__index\n  }];\n\n  var legends = Object.assign({}, state.legends);\n  legends[payload.mapId] = legends[payload.mapId] && legends[payload.mapId].length ? legends[payload.mapId].concat(layer) : layer;\n\n  legends[payload.mapId].sort(function (a, b) {\n    return a.mapIndex - b.mapIndex;\n  });\n\n  return Object.assign({}, state, {\n    'legends': legends,\n    'views': views\n  });\n}), _defineProperty(_createReducer, _mapLegend.SET_LEGEND_DOM_DATA, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n\n  legends[payload.mapId] = legends[payload.mapId].map(function (leg, idx) {\n\n    if (payload.legendWidget && payload.legendWidget.children && payload.legendWidget.children.length > 0) {\n\n      var legendDOMForLayer = null;\n      for (var i = 0; i < payload.legendWidget.children.length; i++) {\n\n        var child = payload.legendWidget.children[i];\n        if (child.id.split('_').pop() === leg.uid) {\n          legendDOMForLayer = child;\n          break;\n        }\n      }\n\n      if (leg.hasDomNode === false && legendDOMForLayer && legendDOMForLayer.children && legendDOMForLayer.children.length > 1) {\n\n        leg.alreadyLoaded = true;\n        leg.hasDomNode = true;\n        leg.domNode = legendDOMForLayer.children[1].outerHTML;\n        leg.expanded = true;\n      }\n    }\n\n    return leg;\n  });\n\n  return Object.assign({}, state, {\n    'legends': legends\n  });\n}), _defineProperty(_createReducer, _mapLegend.TOGGLE_LEGEND_NODE_EXPANDED, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.map(function (leg, idx) {\n\n    if (leg.id === payload.nodeId) {\n      leg.expanded = !leg.expanded;\n    } else if (leg.legendLayers) {\n      var legendLayers = leg.legendLayers.map(function (lyr) {\n        if (lyr.id === payload.nodeId) {\n          lyr.expanded = !lyr.expanded;\n        }\n        return lyr;\n      });\n\n      leg.legendLayers = legendLayers;\n    }\n    return leg;\n  });\n\n  legends[payload.mapId] = legendItems;\n\n  return Object.assign({}, state, { 'legends': legends });\n}), _defineProperty(_createReducer, _mapLegend.TOGGLE_LEGEND_NODE_VISIBLE, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.map(function (leg, idx) {\n    if (leg.id === payload.nodeId) {\n      leg.visible = !leg.visible;\n    } else if (leg.legendLayers) {\n      (function () {\n        var legendLayers = leg.legendLayers.map(function (lyr) {\n          if (lyr.id === payload.nodeId) {\n            lyr.visible = !lyr.visible;\n          }\n\n          return lyr;\n        });\n\n        var subLayersVisible = [];\n\n        leg.legendLayers.forEach(function (layer) {\n\n          if (layer.visible) {\n            subLayersVisible.push(layer.subLayerId);\n          }\n        });\n\n        leg.subLayersVisible = subLayersVisible;\n        leg.legendLayers = legendLayers;\n      })();\n    }\n\n    return leg;\n  });\n\n  legends[payload.mapId] = legendItems;\n\n  updateLayers(state.views[payload.mapId], legend);\n\n  return Object.assign({}, state, { 'legends': legends });\n}), _createReducer));\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"esri-loader\");\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"react\");\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"react-redux\");\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// components\nvar MapLegend = exports.MapLegend = __webpack_require__(1).default;\n\n// reducers\nvar reducer = exports.reducer = __webpack_require__(2).default;\n\n// actions\nvar setInitialLegend = exports.setInitialLegend = __webpack_require__(0).setInitialLegend;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// arcgis-react-redux-legend.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6c7189933b1ee19b5149","import * as esriLoader from \"esri-loader\";\r\n\r\nexport const SET_CURRENT_SCALE = \"map-legend/SET_CURRENT_SCALE\";\r\nexport const TOGGLE_LEGEND_NODE_VISIBLE = \"map-legend/TOGGLE_LEGEND_NODE_VISIBLE\";\r\nexport const RESET_LEGEND_IS_FETCHING = \"map-legend/RESET_LEGEND_IS_FETCHING\";\r\nexport const REQUEST_LEGEND_DATA = \"map-legend/REQUEST_LEGEND_DATA\";\r\nexport const RECEIVE_LEGEND_DATA = \"map-legend/RECEIVE_LEGEND_DATA\";\r\nexport const TOGGLE_LEGEND_NODE_EXPANDED = \"map-legend/TOGGLE_LEGEND_NODE_EXPANDED\";\r\nexport const SET_LEGEND_DOM_DATA = \"map-legend/SET_LEGEND_DOM_DATA\";\r\n\r\nexport const SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA = 'map-legend/SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA';\r\nexport const SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA = 'map-legend/SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA';\r\n\r\nexport const toggleNodeExpanded = (nodeId, mapId) => {\r\n  return {\r\n    type: TOGGLE_LEGEND_NODE_EXPANDED, \r\n    payload: { nodeId, mapId } \r\n  };\r\n};\r\n\r\nexport const toggleNodeVisible = (nodeId, mapId) => {\r\n  return {\r\n    type: TOGGLE_LEGEND_NODE_VISIBLE, \r\n    payload: { nodeId, mapId } \r\n  };\r\n};\r\n\r\nexport const fetchLegend = (url, mapId) => {\r\n\r\n  return function(dispatch) {\r\n\r\n    dispatch({\r\n      type: REQUEST_LEGEND_DATA, \r\n      payload: { url, mapId } \r\n    });\r\n\r\n    esriLoader.dojoRequire(\r\n      [\"esri/request\", \"esri/config\"], \r\n      (esriRequest, esriConfig) =>\r\n      {\r\n        esriConfig.request.corsDetection = false;\r\n\r\n        return esriRequest(url + \"/legend\", {\r\n          query: {f: \"json\"},\r\n          responseType: \"json\"\r\n        })\r\n        .then(\r\n          response => {\r\n            dispatch({\r\n              type: RECEIVE_LEGEND_DATA, \r\n              payload: { layers: response.data.layers, url, mapId } \r\n            });\r\n          },\r\n          error => {\r\n            console.error(error);\r\n            dispatch({\r\n              type: RESET_LEGEND_IS_FETCHING\r\n            });\r\n          }\r\n        );\r\n      });\r\n  };\r\n};\r\n\r\nconst hookLegend = (legend, callback) => {\r\n\r\n  var original = legend._buildLegendDOMForLayer;\r\n\r\n  legend._buildLegendDOMForLayer = (a, b) => {\r\n\r\n    var result = original.call(legend, a, b);\r\n    callback(result, legend);\r\n    return result;\r\n  };\r\n}\r\n\r\nconst debounce = (func, wait, immediate) => {\r\n\tvar timeout;\r\n\treturn function() {\r\n\t\tvar context = this, args = arguments;\r\n\t\tvar later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tvar callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n};\r\n\r\nconst dispatchScaleChange = debounce(function(dispatch, newScale, mapId) {\r\n\t\r\n  dispatch({\r\n    type: SET_CURRENT_SCALE, \r\n    payload: { scale: newScale, mapId }\r\n  });\r\n}, 250);\r\n\r\nconst createLayerLegend = (view, mapId, layer, dispatch) => {\r\n\r\n  esriLoader.dojoRequire(\r\n    [\"esri/widgets/Legend\"], \r\n    (Legend) => {\r\n\r\n    hookLegend(new Legend({ view, layerInfos: [{ layer }] }), (legendDOMForLayer, legend) => {\r\n      \r\n      setTimeout(() => {\r\n\r\n        if (legendDOMForLayer && legendDOMForLayer.widget) {\r\n          dispatch({\r\n            type: SET_LEGEND_DOM_DATA, \r\n            payload: { legendWidget: legendDOMForLayer.widget, mapId } \r\n          });\r\n        }\r\n\r\n        if (legend && legend.destroy) {\r\n          legend.destroy();\r\n        }\r\n      }, 250);       \r\n    });\r\n  });    \r\n}\r\n\r\nexport const setInitialLegend = (view, mapId) => {\r\n\r\n  return function(dispatch) {\r\n\r\n    view.then(() => {\r\n\r\n      dispatchScaleChange(dispatch, view.scale, mapId);\r\n\r\n      view.watch(\"scale\", (newScale) => {\r\n        dispatchScaleChange(dispatch, newScale, mapId);\r\n      });\r\n\r\n      let i = 1;\r\n      \r\n      view.map.layers.forEach((lyr) => {\r\n\r\n        lyr.__index = i;\r\n        i++;\r\n\r\n        lyr.then(\r\n          loadedLayer => {\r\n\r\n            if (loadedLayer.loaded \r\n              && loadedLayer.allSublayers \r\n              && loadedLayer.legendEnabled) {\r\n\r\n              dispatch({\r\n                type: SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA, \r\n                payload: { view, mapId, layer: loadedLayer } \r\n              });\r\n            }\r\n\r\n            if (loadedLayer.loaded\r\n              && loadedLayer.type \r\n              && (loadedLayer.type.toLowerCase() === 'feature' || loadedLayer.type.toLowerCase() === 'graphics')\r\n              && (lyr.url || lyr.source)\r\n              && loadedLayer.legendEnabled) {\r\n\r\n              dispatch({\r\n                type: SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA, \r\n                payload: { view, mapId, layer: loadedLayer } \r\n              });\r\n\r\n              createLayerLegend(view, mapId, loadedLayer, dispatch);\r\n            }\r\n          },\r\n          error => {\r\n            console.error('Failed to load a layer for use with the legend control.', error);\r\n          });\r\n      });\r\n    });\r\n  };\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/actions/map-legend.js","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  fetchLegend,\r\n  toggleNodeExpanded,\r\n  toggleNodeVisible\r\n} from \"../actions/map-legend\";\r\n\r\nconst styles = {  \r\n  clickLegendNode: {\r\n      cursor: 'pointer',\r\n      marginRight: 6,\r\n      display: 'inline-block'\r\n  },\r\n  inlineBlockDisplay: {\r\n      display: 'inline-block',\r\n      marginTop: 8,\r\n      marginBottom: 0\r\n  },\r\n  legendMap: {\r\n      paddingTop: 10,\r\n      paddingRight: 6,\r\n      paddingBottom: 10,\r\n      paddingLeft: 6,\r\n      backgroundColor: '#ebebeb',\r\n      fontWeight: 'bold'\r\n  },\r\n  legendCheckbox: {\r\n      cursor: 'pointer',\r\n      marginRight: 8\r\n  },\r\n  legendCheckboxLabel: {\r\n      fontWeight: 400,\r\n      cursor: 'pointer'\r\n  },\r\n  textStyle: {\r\n    display: \"inline-block\",\r\n    verticalAlign: \"bottom\",\r\n    fontWeight: 500\r\n  }\r\n}\r\n\r\nclass MapLegend extends React.Component {\r\n  initialise = () => {\r\n    const {legends, mapId, fetchLegend} = this.props;\r\n    const legend = legends[mapId];\r\n\r\n    if (!legend) {\r\n      return;\r\n    }\r\n\r\n    legend.forEach((lyr) => {\r\n\r\n      if (lyr.url && !lyr.isFetching && !lyr.alreadyLoaded) {\r\n        fetchLegend(lyr.url, mapId);\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initialise();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.initialise();\r\n  }\r\n\r\n  renderSubNodeLegendData = item => {\r\n    const imageStyle = {\r\n      width: item.imageWidth + 8,\r\n      height: item.imageHeight,\r\n      backgroundImage: \"url(data:image/png;base64,\" + item.image + \")\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      display: 'inline-block'\r\n    };\r\n\r\n    const marginStyle = {marginLeft: 16, marginTop: 6};\r\n\r\n    return (\r\n      <div key={item.id} style={marginStyle}>\r\n        <div style={imageStyle} />\r\n        <label style={styles.textStyle}>{item.label}</label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderSubNodes = item => {\r\n    const {\r\n      mapId,\r\n      scales,\r\n      toggleNodeExpanded,\r\n      toggleNodeVisible\r\n    } = this.props;\r\n\r\n    const currentScale = scales[mapId];\r\n\r\n    let marginStyle = {marginLeft: 8};\r\n\r\n    let subLayerLegendData = item.expanded && item.subLayerLegendData\r\n      ? item.subLayerLegendData.map(this.renderSubNodeLegendData)\r\n      : null;\r\n\r\n    if (currentScale && item.subLayerScaleRestricted &&\r\n      (item.subLayerMinScale !== 0 && (item.subLayerMinScale < currentScale) \r\n      || item.subLayerMaxScale !== 0 && (item.subLayerMaxScale > currentScale))) {\r\n      marginStyle.color = \"#dcdcdc\";\r\n    }\r\n\r\n    let subNodeExpander = !item.subLayerLegendData\r\n      ? null\r\n      : <div onClick={() => toggleNodeExpanded(item.id, mapId)} style={styles.clickLegendNode}>          \r\n          {item.expanded\r\n            ? <span className='esri-icon-down' />\r\n            : <span className='esri-icon-right' />}          \r\n        </div>;\r\n\r\n    let subNodeCheckbox = \r\n      <div style={styles.inlineBlockDisplay}>        \r\n        <div style={styles.inlineBlockDisplay}>\r\n          <span style={styles.legendCheckbox} onClick={() => toggleNodeVisible(item.id, mapId)} className={item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible'} />\r\n          <label style={styles.legendCheckboxLabel} onClick={() => toggleNodeVisible(item.id, mapId)}>{item.subLayerName}</label>             \r\n        </div>\r\n      </div>;\r\n\r\n    return (\r\n      <div key={item.id} style={marginStyle}>\r\n        {subNodeExpander}{subNodeCheckbox}{subLayerLegendData}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderNodes = item => {\r\n\r\n    if (!item.alreadyLoaded) {\r\n      return '';\r\n    }\r\n\r\n    const {mapId, scales, toggleNodeExpanded, toggleNodeVisible} = this.props;\r\n\r\n    const currentScale = scales[mapId];\r\n\r\n    const marginStyle = {marginLeft: 4, marginTop: 8};\r\n    const subMarginStyle = {marginLeft: 8};\r\n\r\n    let sublayers = item.expanded && (item.legendLayers || item.hasDomNode)\r\n      ? item.legendLayers \r\n        ? item.legendLayers.map(this.renderSubNodes)\r\n        : item.hasDomNode \r\n          ? <div style={subMarginStyle} dangerouslySetInnerHTML={{__html: item.domNode}}></div>\r\n          : null\r\n      : null;\r\n\r\n    if (currentScale && item.scaleRestricted &&\r\n      (item.minScale !== 0 && (item.minScale < currentScale) || item.maxScale !== 0 && (item.maxScale > currentScale))) {\r\n      marginStyle.color = \"#dcdcdc\";\r\n    }\r\n\r\n    let topNodeExpander = !item.legendLayers && !item.hasDomNode\r\n      ? null\r\n      : <div onClick={() => toggleNodeExpanded(item.id, mapId)} style={styles.clickLegendNode}>\r\n          {item.expanded\r\n            ? <span className='esri-icon-down' />\r\n            : <span className='esri-icon-right' />}    \r\n        </div>;\r\n         \r\n    let nodeCheckbox = \r\n      <div style={styles.inlineBlockDisplay}>\r\n        <span style={styles.legendCheckbox} onClick={() => toggleNodeVisible(item.id, mapId)} className={item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible'} />\r\n        <label style={styles.legendCheckboxLabel} onClick={() => toggleNodeVisible(item.id, mapId)}>{item.layerName}</label>             \r\n      </div>;\r\n\r\n    return (\r\n      <div key={item.id} style={marginStyle}>\r\n        {topNodeExpander}{nodeCheckbox}{sublayers}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {legends, mapId} = this.props;\r\n    const legend = legends[mapId];\r\n\r\n    if (!legend) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div id=\"legend\">\r\n        <div>\r\n          <h5 style={styles.legendMap}>{mapId.split(\"-\").join(\" - \")}</h5>\r\n        </div>\r\n        <div>\r\n          {legend.map(this.renderNodes)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    legends: state.mapLegendConfig.legends,\r\n    scales: state.mapLegendConfig.scales\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchLegend: (url, mapId) => {\r\n      dispatch(fetchLegend(url, mapId));\r\n    },\r\n    toggleNodeExpanded: (id, mapId) => {\r\n      dispatch(toggleNodeExpanded(id, mapId));\r\n    },\r\n    toggleNodeVisible: (id, mapId) => {\r\n      dispatch(toggleNodeVisible(id, mapId));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapLegend)\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-legend.js","import {\r\n  SET_CURRENT_SCALE,\r\n  RESET_LEGEND_IS_FETCHING,\r\n  REQUEST_LEGEND_DATA,\r\n  RECEIVE_LEGEND_DATA,\r\n  TOGGLE_LEGEND_NODE_EXPANDED,\r\n  TOGGLE_LEGEND_NODE_VISIBLE,\r\n  SET_LEGEND_DOM_DATA,\r\n  SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA,\r\n  SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA\r\n} from \"../actions/map-legend\";\r\n\r\nconst s4 = () => {\r\n  return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);\r\n};\r\n\r\nconst guid = () => {\r\n  return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\r\n};\r\n\r\nconst updateLayers = (view, legend) => {\r\n\r\n  legend.forEach((legendLyr) => {\r\n  \r\n    if (legendLyr.alreadyLoaded === true) {\r\n      const matchedLayer = view.map.layers.find((lyr) => lyr.uid === legendLyr.uid);\r\n        \r\n      if (!matchedLayer) {\r\n        return null;\r\n      }\r\n\r\n      if (legendLyr.visible && legendLyr.subLayersVisible && matchedLayer.sublayers) {\r\n        if (matchedLayer.sublayers) {\r\n          matchedLayer.sublayers = matchedLayer.sublayers.map((subLyr) => {\r\n            const subLayerFind = legendLyr.subLayersVisible.filter((subId) => {\r\n              return subLyr.id === subId;\r\n            });\r\n\r\n            subLyr.visible = subLayerFind && subLayerFind.length === 1;\r\n            return subLyr;\r\n          });\r\n        }\r\n      }\r\n\r\n      if (matchedLayer.visible !== legendLyr.visible) {\r\n        matchedLayer.visible = legendLyr.visible;\r\n      }\r\n    }    \r\n  });\r\n};\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  legends: {},\r\n  views: {},\r\n  scales: {}\r\n};\r\n\r\nconst createReducer = (initialState, reducerMap) => {\r\n  return (state = initialState, action) => {\r\n    const reducer = reducerMap[action.type];\r\n\r\n    return reducer\r\n      ? reducer(state, action.payload)\r\n      : state;\r\n  };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n\r\n  [SET_CURRENT_SCALE]: (state, payload) => {\r\n\r\n    let scales = Object.assign({}, state.scales);\r\n    scales[payload.mapId] = payload.scale;\r\n\r\n    return Object.assign({}, state, {'scales': scales});\r\n  },\r\n\r\n  [RESET_LEGEND_IS_FETCHING]: (state, payload) => {\r\n\r\n    return Object.assign({}, state, {'isFetching': false});\r\n  },\r\n\r\n  [REQUEST_LEGEND_DATA]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.map((leg, idx) => {\r\n      if (leg.url === payload.url) {\r\n        leg.isFetching = true;\r\n      }\r\n\r\n      return leg;\r\n    });\r\n\r\n    legends[payload.mapId] = legendItems;\r\n\r\n    return Object.assign({}, state, {\r\n      'isFetching': true,\r\n      'legends': legends\r\n    });\r\n  },\r\n\r\n  [RECEIVE_LEGEND_DATA]: (state, payload) => {\r\n  \r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.map((leg, idx) => {\r\n      if (leg.url === payload.url) {\r\n        leg.legendLayers = payload.layers.map((lyr) => {\r\n          const legendData = lyr.legend.map((subnode) => {\r\n            return {\r\n              label: subnode.label,\r\n              image: subnode.imageData,\r\n              imageHeight: subnode.height,\r\n              imageWidth: subnode.width,\r\n              id: guid()\r\n            };\r\n          });\r\n\r\n          return {\r\n            subLayerId: lyr.layerId,\r\n            subLayerName: lyr.layerName,\r\n            subLayerMinScale: lyr.minScale,\r\n            subLayerMaxScale: lyr.maxScale,\r\n            subLayerScaleRestricted: lyr.minScale !== 0 || lyr.maxScale !== 0,\r\n            subLayerLegendData: legendData,\r\n            visible: leg.subLayersVisible\r\n              ? leg.subLayersVisible.indexOf(lyr.layerId) > -1\r\n              : true,\r\n            expanded: true,\r\n            id: guid()\r\n          };\r\n        });\r\n\r\n        leg.alreadyLoaded = true;\r\n        leg.expanded = true;\r\n      }\r\n\r\n      return leg;\r\n    });\r\n\r\n    legends[payload.mapId] = legendItems;\r\n\r\n    return Object.assign({}, state, {\r\n      'isFetching': false,\r\n      'legends': legends\r\n    });\r\n  },\r\n\r\n  [SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA]: (state, payload) => {\r\n\r\n    let views = Object.assign({}, state.views);\r\n    views[payload.mapId] = payload.view;\r\n\r\n    let initLyr = payload.layer;\r\n    let subLayersVisible = [];    \r\n\r\n    initLyr.allSublayers.items.forEach((sl) => {\r\n\r\n      if (sl.visible) {\r\n        subLayersVisible.push(sl.id);\r\n      }\r\n    });\r\n\r\n    let layer = [{\r\n      layerId: initLyr.id,\r\n      layerName: initLyr.title || initLyr.id,\r\n      minScale: initLyr.minScale,\r\n      maxScale: initLyr.maxScale,\r\n      scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\r\n      visible: initLyr.visible,\r\n      subLayersVisible: subLayersVisible,\r\n      url: initLyr.url.replace(/\\/+$/, ''),\r\n      legendLayers: null,\r\n      hasDomNode: false,\r\n      alreadyLoaded: false,\r\n      isFetching: false,\r\n      expanded: false,\r\n      id: guid(),\r\n      uid: initLyr.uid,\r\n      mapIndex: initLyr.__index\r\n    }];\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    legends[payload.mapId] = legends[payload.mapId] && legends[payload.mapId].length ? legends[payload.mapId].concat(layer) : layer;\r\n\r\n    legends[payload.mapId].sort(function(a, b) {\r\n      return a.mapIndex - b.mapIndex;\r\n    });\r\n\r\n    return Object.assign({}, state, {\r\n      'legends': legends,\r\n      'views': views\r\n    });\r\n  },\r\n\r\n  [SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA]: (state, payload) => {\r\n\r\n    let views = Object.assign({}, state.views);\r\n    views[payload.mapId] = payload.view;\r\n\r\n    let initLyr = payload.layer;\r\n\r\n    let layer = [{\r\n      layerId: initLyr.id,\r\n      layerName: initLyr.title || initLyr.id,\r\n      minScale: initLyr.minScale,\r\n      maxScale: initLyr.maxScale,\r\n      scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\r\n      visible: initLyr.visible,      \r\n      legendLayers: null,\r\n      hasDomNode: false,\r\n      alreadyLoaded: false,\r\n      isFetching: false,\r\n      expanded: false,\r\n      id: guid(),\r\n      uid: initLyr.uid,\r\n      mapIndex: initLyr.__index\r\n    }];\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    legends[payload.mapId] = legends[payload.mapId] && legends[payload.mapId].length ? legends[payload.mapId].concat(layer) : layer;\r\n\r\n    legends[payload.mapId].sort(function(a, b) {\r\n      return a.mapIndex - b.mapIndex;\r\n    });\r\n    \r\n    return Object.assign({}, state, {\r\n      'legends': legends,\r\n      'views': views\r\n    });\r\n  },\r\n  \r\n  [SET_LEGEND_DOM_DATA]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n\r\n    legends[payload.mapId] = legends[payload.mapId].map((leg, idx) => {\r\n\r\n      if (payload.legendWidget && payload.legendWidget.children && payload.legendWidget.children.length > 0) {\r\n      \r\n        let legendDOMForLayer = null;\r\n        for (let i = 0; i < payload.legendWidget.children.length; i++) {\r\n          \r\n          let child = payload.legendWidget.children[i];\r\n          if (child.id.split('_').pop() === leg.uid) {\r\n            legendDOMForLayer = child;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if (\r\n          leg.hasDomNode === false && legendDOMForLayer && \r\n          legendDOMForLayer.children && legendDOMForLayer.children.length > 1\r\n          ) {\r\n\r\n          leg.alreadyLoaded = true;\r\n          leg.hasDomNode = true;\r\n          leg.domNode = legendDOMForLayer.children[1].outerHTML;\r\n          leg.expanded = true;\r\n        }\r\n      }\r\n\r\n      return leg;\r\n    });\r\n\r\n    return Object.assign({}, state, {\r\n      'legends': legends\r\n    });\r\n  },\r\n\r\n  [TOGGLE_LEGEND_NODE_EXPANDED]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.map((leg, idx) => {\r\n\r\n        if (leg.id === payload.nodeId) {\r\n          leg.expanded = !leg.expanded;\r\n        } \r\n        else if (leg.legendLayers) {\r\n          const legendLayers = leg.legendLayers.map((lyr) => {\r\n              if (lyr.id === payload.nodeId) {\r\n                lyr.expanded = !lyr.expanded;\r\n              }\r\n              return lyr;\r\n            }\r\n          );\r\n\r\n          leg.legendLayers = legendLayers;\r\n        }\r\n        return leg;\r\n      }\r\n    );\r\n\r\n    legends[payload.mapId] = legendItems;\r\n\r\n    return Object.assign({}, state, {'legends': legends});\r\n  },\r\n      \r\n  [TOGGLE_LEGEND_NODE_VISIBLE]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.map((leg, idx) => {\r\n        if (leg.id === payload.nodeId) {\r\n          leg.visible = !leg.visible;\r\n        } \r\n        else if (leg.legendLayers) {\r\n          const legendLayers = leg.legendLayers.map((lyr) => {\r\n              if (lyr.id === payload.nodeId) {\r\n                lyr.visible = !lyr.visible;\r\n              }\r\n\r\n              return lyr;\r\n            }\r\n          );\r\n\r\n          let subLayersVisible = [];\r\n\r\n          leg.legendLayers.forEach((layer) => {\r\n\r\n            if (layer.visible) {\r\n              subLayersVisible.push(layer.subLayerId);\r\n            }\r\n          });\r\n\r\n          leg.subLayersVisible = subLayersVisible;\r\n          leg.legendLayers = legendLayers;\r\n        }\r\n\r\n        return leg;\r\n      } \r\n    );\r\n\r\n    legends[payload.mapId] = legendItems;\r\n\r\n    updateLayers(state.views[payload.mapId], legend);\r\n\r\n    return Object.assign({}, state, {'legends': legends});\r\n  }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/map-legend.js","module.exports = require(\"esri-loader\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"esri-loader\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"react-redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-redux\"\n// module id = 5\n// module chunks = 0","// components\r\nexport const MapLegend = require('./components/map-legend').default;\r\n\r\n// reducers\r\nexport const reducer = require('./reducers/map-legend').default;\r\n\r\n// actions\r\nexport const setInitialLegend = require('./actions/map-legend').setInitialLegend;\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}