{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///arcgis-react-redux-legend.js","webpack:///webpack/bootstrap b0d8f58859cbca00b929","webpack:///./src/index.js","webpack:///./src/actions/map-legend.js","webpack:///./src/components/map-legend.js","webpack:///./src/reducers/map-legend.js","webpack:///external \"esri-loader\"","webpack:///external \"react\"","webpack:///external \"react-redux\""],"names":["root","factory","exports","module","require","define","amd","a","react","i","this","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","MapLegend","default","reducer","setInitialLegend","_interopRequireWildcard","obj","__esModule","newObj","key","prototype","hasOwnProperty","fetchLegend","toggleNodeVisible","toggleNodeExpanded","SET_LEGEND_DOM_DATA","TOGGLE_LEGEND_NODE_EXPANDED","SET_INITIAL_LEGEND_DATA","RECEIVE_LEGEND_DATA","REQUEST_LEGEND_DATA","RESET_LEGEND_IS_FETCHING","TOGGLE_LEGEND_NODE_VISIBLE","SET_CURRENT_SCALE","undefined","_esriLoader","esriLoader","hookLegend","nodeId","mapId","type","payload","url","dispatch","dojoRequire","esriRequest","esriConfig","request","corsDetection","query","f","responseType","then","response","layers","data","error","console","legend","callback","original","_buildLegendDOMForLayer","b","result","view","watchUtils","Legend","map","forEach","lyr","once","allLoaded","items","loadError","reduce","prev","curr","layerInfos","filter","toLowerCase","source","idx","layer","length","esriLegendCount","legendDOMForLayer","setTimeout","legendWidget","widget","destroy","watch","newScale","scale","_interopRequireDefault","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","_react","_react2","_reactRedux","_mapLegend","styles","clickLegendNode","cursor","marginRight","display","inlineBlockDisplay","legendMap","paddingTop","paddingRight","paddingBottom","paddingLeft","backgroundColor","fontWeight","legendCheckbox","position","marginTop","marginBottom","marginLeft","legendCheckboxLabel","minHeight","textStyle","verticalAlign","_React$Component","_ref","_temp","_this","_ret","_len","arguments","args","Array","_key","getPrototypeOf","apply","concat","initialise","_this$props","legends","alreadyLoaded","renderSubNodeLegendData","item","imageStyle","width","imageWidth","height","imageHeight","backgroundImage","image","backgroundRepeat","marginStyle","createElement","style","label","renderSubNodes","_this$props2","scales","currentScale","subLayerLegendData","expanded","subLayerScaleRestricted","subLayerMinScale","subLayerMaxScale","color","subNodeExpander","onClick","xmlns","viewBox","d","subNodeCheckbox","onChange","checked","visible","subLayerName","renderNodes","_this$props3","subMarginStyle","sublayers","legendLayers","hasDomNode","dangerouslySetInnerHTML","__html","domNode","scaleRestricted","minScale","maxScale","topNodeExpander","nodeCheckbox","layerName","prevProps","prevState","_props","split","join","Component","mapStateToProps","state","mapLegendConfig","mapDispatchToProps","connect","_defineProperty","_createReducer","s4","Math","floor","random","toString","substring","guid","updateLayers","legendLyr","layerFind","title","matchedLayer","subLayersVisible","subLyr","subLayerFind","subId","initialState","isFetching","views","createReducer","reducerMap","action","assign","legendItems","leg","legendData","subnode","imageData","subLayerId","layerId","indexOf","layersWithSublayers","allSublayers","initLyr","sl","push","replace","uid","graphicsLayers","children","child","pop","outerHTML"],"mappings":"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","file":"arcgis-react-redux-legend.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"esri-loader\", \"react\", \"react-redux\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\")) : factory(root[\"esri-loader\"], root[\"react\"], root[\"react-redux\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"esri-loader\", \"react\", \"react-redux\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\")) : factory(root[\"esri-loader\"], root[\"react\"], root[\"react-redux\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t// components\n\tvar MapLegend = exports.MapLegend = __webpack_require__(2).default;\n\t\n\t// redurcers\n\tvar reducer = exports.reducer = __webpack_require__(3).default;\n\t\n\t// actions\n\tvar setInitialLegend = exports.setInitialLegend = __webpack_require__(1).setInitialLegend;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.setInitialLegend = exports.fetchLegend = exports.toggleNodeVisible = exports.toggleNodeExpanded = exports.SET_LEGEND_DOM_DATA = exports.TOGGLE_LEGEND_NODE_EXPANDED = exports.SET_INITIAL_LEGEND_DATA = exports.RECEIVE_LEGEND_DATA = exports.REQUEST_LEGEND_DATA = exports.RESET_LEGEND_IS_FETCHING = exports.TOGGLE_LEGEND_NODE_VISIBLE = exports.SET_CURRENT_SCALE = undefined;\n\t\n\tvar _esriLoader = __webpack_require__(4);\n\t\n\tvar esriLoader = _interopRequireWildcard(_esriLoader);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar SET_CURRENT_SCALE = exports.SET_CURRENT_SCALE = \"map-legend/SET_CURRENT_SCALE\";\n\tvar TOGGLE_LEGEND_NODE_VISIBLE = exports.TOGGLE_LEGEND_NODE_VISIBLE = \"map-legend/TOGGLE_LEGEND_NODE_VISIBLE\";\n\tvar RESET_LEGEND_IS_FETCHING = exports.RESET_LEGEND_IS_FETCHING = \"map-legend/RESET_LEGEND_IS_FETCHING\";\n\tvar REQUEST_LEGEND_DATA = exports.REQUEST_LEGEND_DATA = \"map-legend/REQUEST_LEGEND_DATA\";\n\tvar RECEIVE_LEGEND_DATA = exports.RECEIVE_LEGEND_DATA = \"map-legend/RECEIVE_LEGEND_DATA\";\n\tvar SET_INITIAL_LEGEND_DATA = exports.SET_INITIAL_LEGEND_DATA = \"map-legend/SET_INITIAL_LEGEND_DATA\";\n\tvar TOGGLE_LEGEND_NODE_EXPANDED = exports.TOGGLE_LEGEND_NODE_EXPANDED = \"map-legend/TOGGLE_LEGEND_NODE_EXPANDED\";\n\tvar SET_LEGEND_DOM_DATA = exports.SET_LEGEND_DOM_DATA = \"map-legend/SET_LEGEND_DOM_DATA\";\n\t\n\tvar toggleNodeExpanded = exports.toggleNodeExpanded = function toggleNodeExpanded(nodeId, mapId) {\n\t  return {\n\t    type: TOGGLE_LEGEND_NODE_EXPANDED,\n\t    payload: { nodeId: nodeId, mapId: mapId }\n\t  };\n\t};\n\t\n\tvar toggleNodeVisible = exports.toggleNodeVisible = function toggleNodeVisible(nodeId, mapId) {\n\t  return {\n\t    type: TOGGLE_LEGEND_NODE_VISIBLE,\n\t    payload: { nodeId: nodeId, mapId: mapId }\n\t  };\n\t};\n\t\n\tvar fetchLegend = exports.fetchLegend = function fetchLegend(url, mapId) {\n\t\n\t  return function (dispatch) {\n\t\n\t    dispatch({\n\t      type: REQUEST_LEGEND_DATA,\n\t      payload: { url: url, mapId: mapId }\n\t    });\n\t\n\t    esriLoader.dojoRequire([\"esri/request\", \"esri/config\"], function (esriRequest, esriConfig) {\n\t      esriConfig.request.corsDetection = false;\n\t\n\t      return esriRequest(url + \"/legend\", {\n\t        query: { f: \"json\" },\n\t        responseType: \"json\"\n\t      }).then(function (response) {\n\t        dispatch({\n\t          type: RECEIVE_LEGEND_DATA,\n\t          payload: { layers: response.data.layers, url: url, mapId: mapId }\n\t        });\n\t      }, function (error) {\n\t        console.error(error);\n\t        dispatch({\n\t          type: RESET_LEGEND_IS_FETCHING\n\t        });\n\t      });\n\t    });\n\t  };\n\t};\n\t\n\tvar hookLegend = function hookLegend(legend, callback) {\n\t\n\t  var original = legend._buildLegendDOMForLayer;\n\t\n\t  legend._buildLegendDOMForLayer = function (a, b) {\n\t\n\t    var result = original.call(legend, a, b);\n\t    callback(result);\n\t    return result;\n\t  };\n\t};\n\t\n\tvar setInitialLegend = exports.setInitialLegend = function setInitialLegend(view, mapId) {\n\t\n\t  return function (dispatch) {\n\t\n\t    esriLoader.dojoRequire([\"esri/core/watchUtils\", \"esri/widgets/Legend\"], function (watchUtils, Legend) {\n\t\n\t      view.then(function () {\n\t\n\t        view.map.layers.forEach(function (lyr) {\n\t\n\t          watchUtils.once(lyr, \"loaded\", function (value) {\n\t\n\t            var allLoaded = view.map.layers.items.map(function (a) {\n\t              return a.loaded || a.loadError;\n\t            }).reduce(function (prev, curr) {\n\t              return prev && curr;\n\t            });\n\t\n\t            if (allLoaded) {\n\t              (function () {\n\t                dispatch({\n\t                  type: SET_INITIAL_LEGEND_DATA,\n\t                  payload: { view: view, mapId: mapId }\n\t                });\n\t\n\t                var layerInfos = view.map.layers.filter(function (lyr) {\n\t                  return lyr.type && (lyr.type.toLowerCase() === 'feature' || lyr.type.toLowerCase() === 'graphics') && !lyr.loadError && (lyr.url || lyr.source);\n\t                }).map(function (lyr, idx) {\n\t\n\t                  return {\n\t                    layer: lyr\n\t                  };\n\t                });\n\t\n\t                if (layerInfos && layerInfos.length > 0) {\n\t                  (function () {\n\t\n\t                    var legend = new Legend({\n\t                      view: view,\n\t                      layerInfos: layerInfos\n\t                    });\n\t\n\t                    var esriLegendCount = 0;\n\t                    hookLegend(legend, function (legendDOMForLayer) {\n\t\n\t                      esriLegendCount++;\n\t\n\t                      if (esriLegendCount === layerInfos.length) {\n\t\n\t                        setTimeout(function () {\n\t\n\t                          dispatch({\n\t                            type: SET_LEGEND_DOM_DATA,\n\t                            payload: { legendWidget: legendDOMForLayer.widget, mapId: mapId }\n\t                          });\n\t\n\t                          legend.destroy();\n\t                          legend = null;\n\t                        }, 400);\n\t                      }\n\t                    });\n\t                  })();\n\t                }\n\t              })();\n\t            }\n\t          });\n\t        });\n\t\n\t        view.watch(\"scale\", function (newScale) {\n\t          dispatch({\n\t            type: SET_CURRENT_SCALE,\n\t            payload: { scale: newScale, mapId: mapId }\n\t          });\n\t        });\n\t      });\n\t    });\n\t  };\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(5);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(6);\n\t\n\tvar _mapLegend = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar styles = {\n\t  clickLegendNode: {\n\t    cursor: 'pointer',\n\t    marginRight: 6,\n\t    display: 'inline-block'\n\t  },\n\t  inlineBlockDisplay: {\n\t    display: 'inline-block'\n\t  },\n\t  legendMap: {\n\t    paddingTop: 10,\n\t    paddingRight: 6,\n\t    paddingBottom: 10,\n\t    paddingLeft: 6,\n\t    backgroundColor: '#ebebeb',\n\t    fontWeight: 'bold'\n\t  },\n\t  legendCheckbox: {\n\t    position: 'relative',\n\t    display: 'inline-block',\n\t    marginTop: 10,\n\t    marginRight: 6,\n\t    marginBottom: 10,\n\t    marginLeft: 0\n\t  },\n\t  legendCheckboxLabel: {\n\t    minHeight: 20,\n\t    marginBottom: 0,\n\t    fontWeight: 400,\n\t    cursor: 'pointer'\n\t  },\n\t  textStyle: {\n\t    display: \"inline-block\",\n\t    verticalAlign: \"bottom\",\n\t    fontWeight: 500\n\t  }\n\t};\n\t\n\tvar MapLegend = function (_React$Component) {\n\t  _inherits(MapLegend, _React$Component);\n\t\n\t  function MapLegend() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, MapLegend);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MapLegend.__proto__ || Object.getPrototypeOf(MapLegend)).call.apply(_ref, [this].concat(args))), _this), _this.initialise = function () {\n\t      var _this$props = _this.props,\n\t          legends = _this$props.legends,\n\t          mapId = _this$props.mapId,\n\t          fetchLegend = _this$props.fetchLegend;\n\t\n\t      var legend = legends[mapId];\n\t\n\t      if (!legend) {\n\t        return;\n\t      }\n\t\n\t      legend.items.forEach(function (lyr) {\n\t\n\t        if (lyr.url && lyr.alreadyLoaded === false) {\n\t          fetchLegend(lyr.url, mapId);\n\t        }\n\t      });\n\t    }, _this.renderSubNodeLegendData = function (item) {\n\t      var imageStyle = {\n\t        width: item.imageWidth + 8,\n\t        height: item.imageHeight,\n\t        backgroundImage: \"url(data:image/png;base64,\" + item.image + \")\",\n\t        backgroundRepeat: \"no-repeat\",\n\t        display: \"inline-block\"\n\t      };\n\t\n\t      var marginStyle = { marginLeft: 16 };\n\t\n\t      return _react2.default.createElement(\n\t        \"div\",\n\t        { key: item.id, style: marginStyle },\n\t        _react2.default.createElement(\"div\", { style: imageStyle }),\n\t        _react2.default.createElement(\n\t          \"label\",\n\t          { style: styles.textStyle },\n\t          item.label\n\t        )\n\t      );\n\t    }, _this.renderSubNodes = function (item) {\n\t      var _this$props2 = _this.props,\n\t          mapId = _this$props2.mapId,\n\t          scales = _this$props2.scales,\n\t          toggleNodeExpanded = _this$props2.toggleNodeExpanded,\n\t          toggleNodeVisible = _this$props2.toggleNodeVisible;\n\t\n\t\n\t      var currentScale = scales[mapId];\n\t\n\t      var marginStyle = { marginLeft: 8, marginTop: 8 };\n\t\n\t      var subLayerLegendData = item.expanded && item.subLayerLegendData ? item.subLayerLegendData.map(_this.renderSubNodeLegendData) : \"\";\n\t\n\t      if (currentScale && item.subLayerScaleRestricted && (item.subLayerMinScale !== 0 && item.subLayerMinScale < currentScale || item.subLayerMaxScale !== 0 && item.subLayerMaxScale > currentScale)) {\n\t        marginStyle.color = \"#dcdcdc\";\n\t      }\n\t\n\t      var subNodeExpander = !item.subLayerLegendData ? \"\" : _react2.default.createElement(\n\t        \"div\",\n\t        { onClick: function onClick() {\n\t            return toggleNodeExpanded(item.id, mapId);\n\t          }, style: styles.clickLegendNode },\n\t        _react2.default.createElement(\n\t          \"svg\",\n\t          { xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 32 32\" },\n\t          item.expanded ? _react2.default.createElement(\"path\", { d: \"M28 9v5L16 26 4 14V9l12 12L28 9z\" }) : _react2.default.createElement(\"path\", { d: \"M7 4h5l12 12-12 12H7l12-12L7 4z\" })\n\t        )\n\t      );\n\t\n\t      var subNodeCheckbox = _react2.default.createElement(\n\t        \"div\",\n\t        { style: styles.inlineBlockDisplay },\n\t        _react2.default.createElement(\n\t          \"label\",\n\t          { style: styles.legendCheckboxLabel },\n\t          _react2.default.createElement(\"input\", { type: \"checkbox\", style: styles.legendCheckbox, onChange: function onChange() {\n\t              return toggleNodeVisible(item.id, mapId);\n\t            }, checked: item.visible }),\n\t          item.subLayerName\n\t        )\n\t      );\n\t\n\t      return _react2.default.createElement(\n\t        \"div\",\n\t        { key: item.id, style: marginStyle },\n\t        subNodeExpander,\n\t        subNodeCheckbox,\n\t        subLayerLegendData\n\t      );\n\t    }, _this.renderNodes = function (item) {\n\t\n\t      if (!item.alreadyLoaded) {\n\t        return '';\n\t      }\n\t\n\t      var _this$props3 = _this.props,\n\t          mapId = _this$props3.mapId,\n\t          scales = _this$props3.scales,\n\t          toggleNodeExpanded = _this$props3.toggleNodeExpanded,\n\t          toggleNodeVisible = _this$props3.toggleNodeVisible;\n\t\n\t\n\t      var currentScale = scales[mapId];\n\t\n\t      var marginStyle = { marginLeft: 4 };\n\t      var subMarginStyle = { marginLeft: 8, marginTop: 8 };\n\t\n\t      var sublayers = item.expanded && (item.legendLayers || item.hasDomNode) ? item.legendLayers ? item.legendLayers.map(_this.renderSubNodes) : item.hasDomNode ? _react2.default.createElement(\"div\", { style: subMarginStyle, dangerouslySetInnerHTML: { __html: item.domNode } }) : \"\" : \"\";\n\t\n\t      if (currentScale && item.scaleRestricted && (item.minScale !== 0 && item.minScale < currentScale || item.maxScale !== 0 && item.maxScale > currentScale)) {\n\t        marginStyle.color = \"#dcdcdc\";\n\t      }\n\t\n\t      var topNodeExpander = !item.legendLayers && !item.hasDomNode ? \"\" : _react2.default.createElement(\n\t        \"div\",\n\t        { onClick: function onClick() {\n\t            return toggleNodeExpanded(item.id, mapId);\n\t          }, style: styles.clickLegendNode },\n\t        _react2.default.createElement(\n\t          \"svg\",\n\t          { xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 32 32\" },\n\t          item.expanded ? _react2.default.createElement(\"path\", { d: \"M28 9v5L16 26 4 14V9l12 12L28 9z\" }) : _react2.default.createElement(\"path\", { d: \"M7 4h5l12 12-12 12H7l12-12L7 4z\" })\n\t        )\n\t      );\n\t\n\t      var nodeCheckbox = _react2.default.createElement(\n\t        \"div\",\n\t        { style: styles.inlineBlockDisplay },\n\t        _react2.default.createElement(\n\t          \"label\",\n\t          { style: styles.legendCheckboxLabel },\n\t          _react2.default.createElement(\"input\", { type: \"checkbox\", style: styles.legendCheckbox, onChange: function onChange() {\n\t              return toggleNodeVisible(item.id, mapId);\n\t            }, checked: item.visible }),\n\t          item.layerName\n\t        )\n\t      );\n\t\n\t      return _react2.default.createElement(\n\t        \"div\",\n\t        { key: item.id, style: marginStyle },\n\t        topNodeExpander,\n\t        nodeCheckbox,\n\t        sublayers\n\t      );\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  _createClass(MapLegend, [{\n\t    key: \"componentDidMount\",\n\t    value: function componentDidMount() {\n\t      this.initialise();\n\t    }\n\t  }, {\n\t    key: \"componentDidUpdate\",\n\t    value: function componentDidUpdate(prevProps, prevState) {\n\t      this.initialise();\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      var _props = this.props,\n\t          legends = _props.legends,\n\t          mapId = _props.mapId;\n\t\n\t      var legend = legends[mapId];\n\t\n\t      if (!legend) {\n\t        return null;\n\t      }\n\t\n\t      return _react2.default.createElement(\n\t        \"div\",\n\t        { id: \"legend\" },\n\t        _react2.default.createElement(\n\t          \"div\",\n\t          null,\n\t          _react2.default.createElement(\n\t            \"h5\",\n\t            { style: styles.legendMap },\n\t            mapId.split(\"-\").join(\" - \")\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          \"div\",\n\t          null,\n\t          legend.items.map(this.renderNodes)\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return MapLegend;\n\t}(_react2.default.Component);\n\t\n\tvar mapStateToProps = function mapStateToProps(state) {\n\t  return {\n\t    legends: state.mapLegendConfig.legends,\n\t    scales: state.mapLegendConfig.scales\n\t  };\n\t};\n\t\n\tvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n\t  return {\n\t    fetchLegend: function fetchLegend(url, mapId) {\n\t      dispatch((0, _mapLegend.fetchLegend)(url, mapId));\n\t    },\n\t    toggleNodeExpanded: function toggleNodeExpanded(id, mapId) {\n\t      dispatch((0, _mapLegend.toggleNodeExpanded)(id, mapId));\n\t    },\n\t    toggleNodeVisible: function toggleNodeVisible(id, mapId) {\n\t      dispatch((0, _mapLegend.toggleNodeVisible)(id, mapId));\n\t    }\n\t  };\n\t};\n\t\n\texports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MapLegend);\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createReducer;\n\t\n\tvar _mapLegend = __webpack_require__(1);\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tvar s4 = function s4() {\n\t  return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);\n\t};\n\t\n\tvar guid = function guid() {\n\t  return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\n\t};\n\t\n\tvar updateLayers = function updateLayers(view, legend) {\n\t\n\t  legend.items.forEach(function (legendLyr) {\n\t\n\t    if (legendLyr.alreadyLoaded === true) {\n\t      var layerFind = view.map.layers.filter(function (lyr) {\n\t        return lyr.title === legendLyr.layerName || lyr.id === legendLyr.layerName;\n\t      });\n\t\n\t      if (layerFind && layerFind.items && layerFind.items.length !== 1) {\n\t        return null;\n\t      }\n\t\n\t      var matchedLayer = layerFind.items[0];\n\t\n\t      if (legendLyr.visible && legendLyr.subLayersVisible && matchedLayer.sublayers) {\n\t        if (matchedLayer.sublayers) {\n\t          matchedLayer.sublayers = matchedLayer.sublayers.map(function (subLyr) {\n\t            var subLayerFind = legendLyr.subLayersVisible.filter(function (subId) {\n\t              return subLyr.id === subId;\n\t            });\n\t\n\t            subLyr.visible = subLayerFind && subLayerFind.length === 1;\n\t            return subLyr;\n\t          });\n\t        }\n\t      }\n\t\n\t      if (matchedLayer.visible !== legendLyr.visible) {\n\t        matchedLayer.visible = legendLyr.visible;\n\t      }\n\t    }\n\t  });\n\t};\n\t\n\tvar initialState = {\n\t  isFetching: false,\n\t  legends: {},\n\t  views: {},\n\t  scales: {}\n\t};\n\t\n\tvar createReducer = function createReducer(initialState, reducerMap) {\n\t  return function () {\n\t    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\t    var action = arguments[1];\n\t\n\t    var reducer = reducerMap[action.type];\n\t\n\t    return reducer ? reducer(state, action.payload) : state;\n\t  };\n\t};\n\t\n\texports.default = createReducer(initialState, (_createReducer = {}, _defineProperty(_createReducer, _mapLegend.SET_CURRENT_SCALE, function (state, payload) {\n\t\n\t  var scales = Object.assign({}, state.scales);\n\t  scales[payload.mapId] = payload.scale;\n\t\n\t  return Object.assign({}, state, { 'scales': scales });\n\t}), _defineProperty(_createReducer, _mapLegend.RESET_LEGEND_IS_FETCHING, function (state, payload) {\n\t\n\t  return Object.assign({}, state, { 'isFetching': false });\n\t}), _defineProperty(_createReducer, _mapLegend.REQUEST_LEGEND_DATA, function (state, payload) {\n\t\n\t  return Object.assign({}, state, { 'isFetching': true });\n\t}), _defineProperty(_createReducer, _mapLegend.RECEIVE_LEGEND_DATA, function (state, payload) {\n\t\n\t  var legends = Object.assign({}, state.legends);\n\t  var legend = legends[payload.mapId];\n\t\n\t  var legendItems = legend.items.map(function (leg, idx) {\n\t    if (leg.url === payload.url) {\n\t      leg.legendLayers = payload.layers.map(function (lyr) {\n\t        var legendData = lyr.legend.map(function (subnode) {\n\t          return {\n\t            label: subnode.label,\n\t            image: subnode.imageData,\n\t            imageHeight: subnode.height,\n\t            imageWidth: subnode.width,\n\t            id: guid()\n\t          };\n\t        });\n\t\n\t        return {\n\t          subLayerId: lyr.layerId,\n\t          subLayerName: lyr.layerName,\n\t          subLayerMinScale: lyr.minScale,\n\t          subLayerMaxScale: lyr.maxScale,\n\t          subLayerScaleRestricted: lyr.minScale !== 0 || lyr.maxScale !== 0,\n\t          subLayerLegendData: legendData,\n\t          visible: leg.subLayersVisible ? leg.subLayersVisible.indexOf(lyr.layerId) > -1 : true,\n\t          expanded: true,\n\t          id: guid()\n\t        };\n\t      });\n\t    }\n\t\n\t    leg.alreadyLoaded = true;\n\t    leg.expanded = true;\n\t    return leg;\n\t  });\n\t\n\t  legend.items = legendItems;\n\t  legends[payload.mapId] = legend;\n\t\n\t  return Object.assign({}, state, {\n\t    'isFetching': false,\n\t    'legends': legends\n\t  });\n\t}), _defineProperty(_createReducer, _mapLegend.SET_INITIAL_LEGEND_DATA, function (state, payload) {\n\t\n\t  var views = Object.assign({}, state.views);\n\t  views[payload.mapId] = payload.view;\n\t\n\t  var layersWithSublayers = payload.view.map.layers.filter(function (lyr) {\n\t    return !lyr.loadError && lyr.allSublayers;\n\t  }).map(function (initLyr, idx) {\n\t\n\t    var subLayersVisible = [];\n\t\n\t    initLyr.allSublayers.items.forEach(function (sl) {\n\t\n\t      if (sl.visible) {\n\t        subLayersVisible.push(sl.id);\n\t      }\n\t    });\n\t\n\t    return {\n\t      layerId: idx,\n\t      layerName: initLyr.title || initLyr.id,\n\t      minScale: initLyr.minScale,\n\t      maxScale: initLyr.maxScale,\n\t      scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\n\t      visible: initLyr.visible,\n\t      subLayersVisible: subLayersVisible,\n\t      url: initLyr.url.replace(/\\/+$/, ''),\n\t      legendLayers: null,\n\t      hasDomNode: false,\n\t      alreadyLoaded: false,\n\t      expanded: false,\n\t      id: guid(),\n\t      uid: initLyr.uid\n\t    };\n\t  });\n\t\n\t  var graphicsLayers = payload.view.map.layers.filter(function (lyr) {\n\t    return !lyr.loadError && lyr.type && (lyr.type.toLowerCase() === 'feature' || lyr.type.toLowerCase() === 'graphics');\n\t  }).map(function (initLyr, idx) {\n\t\n\t    return {\n\t      layerId: idx,\n\t      layerName: initLyr.title || initLyr.id,\n\t      minScale: initLyr.minScale,\n\t      maxScale: initLyr.maxScale,\n\t      scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\n\t      visible: initLyr.visible,\n\t      legendLayers: null,\n\t      hasDomNode: false,\n\t      alreadyLoaded: false,\n\t      expanded: false,\n\t      id: guid(),\n\t      uid: initLyr.uid\n\t    };\n\t  });\n\t\n\t  var legends = Object.assign({}, state.legends);\n\t  legends[payload.mapId] = layersWithSublayers.concat(graphicsLayers);\n\t\n\t  return Object.assign({}, state, {\n\t    'legends': legends,\n\t    'views': views\n\t  });\n\t}), _defineProperty(_createReducer, _mapLegend.SET_LEGEND_DOM_DATA, function (state, payload) {\n\t\n\t  var legends = Object.assign({}, state.legends);\n\t\n\t  legends[payload.mapId].items = legends[payload.mapId].items.map(function (leg, idx) {\n\t\n\t    if (payload.legendWidget && payload.legendWidget.children && payload.legendWidget.children.length > 0) {\n\t\n\t      var legendDOMForLayer = null;\n\t      for (var i = 0; i < payload.legendWidget.children.length; i++) {\n\t\n\t        var child = payload.legendWidget.children[i];\n\t        if (child.id.split('_').pop() === leg.uid) {\n\t          legendDOMForLayer = child;\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (leg.hasDomNode === false && legendDOMForLayer && legendDOMForLayer.children && legendDOMForLayer.children.length > 1) {\n\t\n\t        leg.alreadyLoaded = true;\n\t        leg.hasDomNode = true;\n\t        leg.domNode = legendDOMForLayer.children[1].outerHTML;\n\t        leg.expanded = true;\n\t      }\n\t    }\n\t\n\t    return leg;\n\t  });\n\t\n\t  return Object.assign({}, state, {\n\t    'legends': legends\n\t  });\n\t}), _defineProperty(_createReducer, _mapLegend.TOGGLE_LEGEND_NODE_EXPANDED, function (state, payload) {\n\t\n\t  var legends = Object.assign({}, state.legends);\n\t  var legend = legends[payload.mapId];\n\t\n\t  var legendItems = legend.items.map(function (leg, idx) {\n\t\n\t    if (leg.id === payload.nodeId) {\n\t      leg.expanded = !leg.expanded;\n\t    } else if (leg.legendLayers) {\n\t      var legendLayers = leg.legendLayers.map(function (lyr) {\n\t        if (lyr.id === payload.nodeId) {\n\t          lyr.expanded = !lyr.expanded;\n\t        }\n\t        return lyr;\n\t      });\n\t\n\t      leg.legendLayers = legendLayers;\n\t    }\n\t    return leg;\n\t  });\n\t\n\t  legend.items = legendItems;\n\t  legends[payload.mapId] = legend;\n\t\n\t  return Object.assign({}, state, { 'legends': legends });\n\t}), _defineProperty(_createReducer, _mapLegend.TOGGLE_LEGEND_NODE_VISIBLE, function (state, payload) {\n\t\n\t  var legends = Object.assign({}, state.legends);\n\t  var legend = legends[payload.mapId];\n\t\n\t  var legendItems = legend.items.map(function (leg, idx) {\n\t    if (leg.id === payload.nodeId) {\n\t      leg.visible = !leg.visible;\n\t    } else if (leg.legendLayers) {\n\t      (function () {\n\t        var legendLayers = leg.legendLayers.map(function (lyr) {\n\t          if (lyr.id === payload.nodeId) {\n\t            lyr.visible = !lyr.visible;\n\t          }\n\t\n\t          return lyr;\n\t        });\n\t\n\t        var subLayersVisible = [];\n\t\n\t        leg.legendLayers.forEach(function (layer) {\n\t\n\t          if (layer.visible) {\n\t            subLayersVisible.push(layer.subLayerId);\n\t          }\n\t        });\n\t\n\t        leg.subLayersVisible = subLayersVisible;\n\t        leg.legendLayers = legendLayers;\n\t      })();\n\t    }\n\t\n\t    return leg;\n\t  });\n\t\n\t  legend.items = legendItems;\n\t  legends[payload.mapId] = legend;\n\t\n\t  updateLayers(state.views[payload.mapId], legend);\n\t\n\t  return Object.assign({}, state, { 'legends': legends });\n\t}), _createReducer));\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"esri-loader\");\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"react\");\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"react-redux\");\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// arcgis-react-redux-legend.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b0d8f58859cbca00b929","// components\r\nexport const MapLegend = require('./components/map-legend').default;\r\n\r\n// redurcers\r\nexport const reducer = require('./reducers/map-legend').default;\r\n\r\n// actions\r\nexport const setInitialLegend = require('./actions/map-legend').setInitialLegend;\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import * as esriLoader from \"esri-loader\";\r\n\r\nexport const SET_CURRENT_SCALE = \"map-legend/SET_CURRENT_SCALE\";\r\nexport const TOGGLE_LEGEND_NODE_VISIBLE = \"map-legend/TOGGLE_LEGEND_NODE_VISIBLE\";\r\nexport const RESET_LEGEND_IS_FETCHING = \"map-legend/RESET_LEGEND_IS_FETCHING\";\r\nexport const REQUEST_LEGEND_DATA = \"map-legend/REQUEST_LEGEND_DATA\";\r\nexport const RECEIVE_LEGEND_DATA = \"map-legend/RECEIVE_LEGEND_DATA\";\r\nexport const SET_INITIAL_LEGEND_DATA = \"map-legend/SET_INITIAL_LEGEND_DATA\";\r\nexport const TOGGLE_LEGEND_NODE_EXPANDED = \"map-legend/TOGGLE_LEGEND_NODE_EXPANDED\";\r\nexport const SET_LEGEND_DOM_DATA = \"map-legend/SET_LEGEND_DOM_DATA\";\r\n\r\nexport const toggleNodeExpanded = (nodeId, mapId) => {\r\n  return {\r\n    type: TOGGLE_LEGEND_NODE_EXPANDED, \r\n    payload: { nodeId, mapId } \r\n  };\r\n};\r\n\r\nexport const toggleNodeVisible = (nodeId, mapId) => {\r\n  return {\r\n    type: TOGGLE_LEGEND_NODE_VISIBLE, \r\n    payload: { nodeId, mapId } \r\n  };\r\n};\r\n\r\nexport const fetchLegend = (url, mapId) => {\r\n\r\n  return function(dispatch) {\r\n\r\n    dispatch({\r\n      type: REQUEST_LEGEND_DATA, \r\n      payload: { url, mapId } \r\n    });\r\n\r\n    esriLoader.dojoRequire(\r\n      [\"esri/request\", \"esri/config\"], \r\n      (esriRequest, esriConfig) =>\r\n      {\r\n        esriConfig.request.corsDetection = false;\r\n\r\n        return esriRequest(url + \"/legend\", {\r\n          query: {f: \"json\"},\r\n          responseType: \"json\"\r\n        })\r\n        .then(\r\n          response => {\r\n            dispatch({\r\n              type: RECEIVE_LEGEND_DATA, \r\n              payload: { layers: response.data.layers, url, mapId } \r\n            });\r\n          },\r\n          error => {\r\n            console.error(error);\r\n            dispatch({\r\n              type: RESET_LEGEND_IS_FETCHING\r\n            });\r\n          }\r\n        );\r\n      });\r\n  };\r\n};\r\n\r\nconst hookLegend = (legend, callback) => {\r\n\r\n    var original = legend._buildLegendDOMForLayer;\r\n\r\n    legend._buildLegendDOMForLayer = (a, b) => {\r\n\r\n      var result = original.call(legend, a, b);\r\n      callback(result);\r\n      return result;\r\n    };\r\n  }\r\n\r\nexport const setInitialLegend = (view, mapId) => {\r\n\r\n  return function(dispatch) {\r\n\r\n    esriLoader.dojoRequire(\r\n      [\"esri/core/watchUtils\", \"esri/widgets/Legend\"], \r\n      (watchUtils, Legend) => {\r\n      \r\n      view.then(() => {\r\n\r\n        view.map.layers.forEach((lyr) => {\r\n\r\n          watchUtils.once(lyr, \"loaded\", (value) => {\r\n\r\n            const allLoaded = view.map.layers.items\r\n              .map(a => a.loaded || a.loadError)\r\n              .reduce((prev, curr) => prev && curr);\r\n\r\n            if (allLoaded) {\r\n              dispatch({\r\n                type: SET_INITIAL_LEGEND_DATA, \r\n                payload: { view, mapId } \r\n              });\r\n\r\n              const layerInfos = view.map.layers\r\n                .filter(lyr => \r\n                  lyr.type \r\n                  && (lyr.type.toLowerCase() === 'feature' || lyr.type.toLowerCase() === 'graphics')\r\n                  && !lyr.loadError\r\n                  && (lyr.url || lyr.source))\r\n                .map((lyr, idx) => {\r\n                  \r\n                  return {\r\n                    layer: lyr\r\n                  }\r\n                });\r\n\r\n              if (layerInfos && layerInfos.length > 0) { \r\n                \r\n                let legend = new Legend({\r\n                  view: view,\r\n                  layerInfos\r\n                });\r\n\r\n                let esriLegendCount = 0;\r\n                hookLegend(legend, (legendDOMForLayer) => {\r\n\r\n                  esriLegendCount++;\r\n\r\n                  if (esriLegendCount === layerInfos.length) {\r\n\r\n                    setTimeout(() => {\r\n\r\n                      dispatch({\r\n                        type: SET_LEGEND_DOM_DATA, \r\n                        payload: { legendWidget: legendDOMForLayer.widget, mapId } \r\n                      });\r\n\r\n                      legend.destroy();\r\n                      legend = null;\r\n                    }, 400);   \r\n                  }  \r\n                });\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        view.watch(\"scale\", (newScale) => {\r\n          dispatch({\r\n            type: SET_CURRENT_SCALE, \r\n            payload: { scale: newScale, mapId }\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/actions/map-legend.js","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  fetchLegend,\r\n  toggleNodeExpanded,\r\n  toggleNodeVisible\r\n} from \"../actions/map-legend\";\r\n\r\nconst styles = {  \r\n  clickLegendNode: {\r\n      cursor: 'pointer',\r\n      marginRight: 6,\r\n      display: 'inline-block'\r\n  },\r\n  inlineBlockDisplay: {\r\n      display: 'inline-block'\r\n  },\r\n  legendMap: {\r\n      paddingTop: 10,\r\n      paddingRight: 6,\r\n      paddingBottom: 10,\r\n      paddingLeft: 6,\r\n      backgroundColor: '#ebebeb',\r\n      fontWeight: 'bold'\r\n  },\r\n  legendCheckbox: {\r\n      position: 'relative',\r\n      display: 'inline-block',\r\n      marginTop: 10,\r\n      marginRight: 6,\r\n      marginBottom: 10,\r\n      marginLeft: 0\r\n  },\r\n  legendCheckboxLabel: {\r\n      minHeight: 20,\r\n      marginBottom: 0,\r\n      fontWeight: 400,\r\n      cursor: 'pointer'\r\n  },\r\n  textStyle: {\r\n    display: \"inline-block\",\r\n    verticalAlign: \"bottom\",\r\n    fontWeight: 500\r\n  }\r\n}\r\n\r\nclass MapLegend extends React.Component {\r\n  initialise = () => {\r\n    const {legends, mapId, fetchLegend} = this.props;\r\n    const legend = legends[mapId];\r\n\r\n    if (!legend) {\r\n      return;\r\n    }\r\n\r\n    legend.items.forEach((lyr) => {\r\n\r\n      if (lyr.url && lyr.alreadyLoaded === false) {\r\n        fetchLegend(lyr.url, mapId);\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initialise();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.initialise();\r\n  }\r\n\r\n  renderSubNodeLegendData = item => {\r\n    const imageStyle = {\r\n      width: item.imageWidth + 8,\r\n      height: item.imageHeight,\r\n      backgroundImage: \"url(data:image/png;base64,\" + item.image + \")\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      display: \"inline-block\"\r\n    };\r\n\r\n    const marginStyle = {marginLeft: 16};\r\n\r\n    return (\r\n      <div key={item.id} style={marginStyle}>\r\n        <div style={imageStyle}></div><label style={styles.textStyle}>\r\n        {item.label}\r\n      </label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderSubNodes = item => {\r\n    const {\r\n      mapId,\r\n      scales,\r\n      toggleNodeExpanded,\r\n      toggleNodeVisible\r\n    } = this.props;\r\n\r\n    const currentScale = scales[mapId];\r\n\r\n    let marginStyle = {marginLeft: 8, marginTop: 8};\r\n\r\n    let subLayerLegendData = item.expanded && item.subLayerLegendData\r\n      ? item.subLayerLegendData.map(this.renderSubNodeLegendData)\r\n      : \"\";\r\n\r\n    if (currentScale && item.subLayerScaleRestricted &&\r\n      (item.subLayerMinScale !== 0 && (item.subLayerMinScale < currentScale) \r\n      || item.subLayerMaxScale !== 0 && (item.subLayerMaxScale > currentScale))) {\r\n      marginStyle.color = \"#dcdcdc\";\r\n    }\r\n\r\n    let subNodeExpander = !item.subLayerLegendData\r\n      ? \"\"\r\n      : <div onClick={() => toggleNodeExpanded(item.id, mapId)} style={styles.clickLegendNode}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\">\r\n            {item.expanded\r\n              ? <path d=\"M28 9v5L16 26 4 14V9l12 12L28 9z\"/>\r\n              : <path d=\"M7 4h5l12 12-12 12H7l12-12L7 4z\"/>}\r\n          </svg>\r\n        </div>;\r\n\r\n    let subNodeCheckbox = \r\n      <div style={styles.inlineBlockDisplay}>\r\n        <label style={styles.legendCheckboxLabel}>\t    \r\n          <input type=\"checkbox\" style={styles.legendCheckbox} onChange={() => toggleNodeVisible(item.id, mapId)} checked={item.visible} />\r\n            {item.subLayerName}\r\n        </label> \r\n      </div>;\r\n\r\n    return (\r\n      <div key={item.id} style={marginStyle}>\r\n        {subNodeExpander}{subNodeCheckbox}{subLayerLegendData}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderNodes = item => {\r\n\r\n    if (!item.alreadyLoaded) {\r\n      return '';\r\n    }\r\n\r\n    const {mapId, scales, toggleNodeExpanded, toggleNodeVisible} = this.props;\r\n\r\n    const currentScale = scales[mapId];\r\n\r\n    const marginStyle = {marginLeft: 4};\r\n    const subMarginStyle = {marginLeft: 8, marginTop: 8};\r\n\r\n    let sublayers = item.expanded && (item.legendLayers || item.hasDomNode)\r\n      ? item.legendLayers \r\n        ? item.legendLayers.map(this.renderSubNodes)\r\n        : item.hasDomNode \r\n          ? <div style={subMarginStyle} dangerouslySetInnerHTML={{__html: item.domNode}}></div>\r\n          : \"\"\r\n      : \"\";\r\n\r\n    if (currentScale && item.scaleRestricted &&\r\n      (item.minScale !== 0 && (item.minScale < currentScale) || item.maxScale !== 0 && (item.maxScale > currentScale))) {\r\n      marginStyle.color = \"#dcdcdc\";\r\n    }\r\n\r\n    let topNodeExpander = !item.legendLayers && !item.hasDomNode\r\n      ? \"\"\r\n      : <div onClick={() => toggleNodeExpanded(item.id, mapId)} style={styles.clickLegendNode}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\">\r\n            {item.expanded \r\n              ? <path d=\"M28 9v5L16 26 4 14V9l12 12L28 9z\"/> \r\n            : <path d=\"M7 4h5l12 12-12 12H7l12-12L7 4z\"/>}\r\n          </svg>\r\n        </div>;\r\n        \r\n    let nodeCheckbox = \r\n      <div style={styles.inlineBlockDisplay}>\r\n        <label style={styles.legendCheckboxLabel}>\t    \r\n          <input type=\"checkbox\" style={styles.legendCheckbox} onChange={() => toggleNodeVisible(item.id, mapId)} checked={item.visible} />\r\n            {item.layerName}\r\n        </label>          \r\n      </div>;\r\n\r\n    return (\r\n      <div key={item.id} style={marginStyle}>\r\n        {topNodeExpander}{nodeCheckbox}{sublayers}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {legends, mapId} = this.props;\r\n    const legend = legends[mapId];\r\n\r\n    if (!legend) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div id=\"legend\">\r\n        <div>\r\n          <h5 style={styles.legendMap}>{mapId.split(\"-\").join(\" - \")}</h5>\r\n        </div>\r\n        <div>\r\n          {legend.items.map(this.renderNodes)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    legends: state.mapLegendConfig.legends,\r\n    scales: state.mapLegendConfig.scales\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchLegend: (url, mapId) => {\r\n      dispatch(fetchLegend(url, mapId));\r\n    },\r\n    toggleNodeExpanded: (id, mapId) => {\r\n      dispatch(toggleNodeExpanded(id, mapId));\r\n    },\r\n    toggleNodeVisible: (id, mapId) => {\r\n      dispatch(toggleNodeVisible(id, mapId));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapLegend)\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-legend.js","import {\r\n  SET_CURRENT_SCALE,\r\n  RESET_LEGEND_IS_FETCHING,\r\n  REQUEST_LEGEND_DATA,\r\n  RECEIVE_LEGEND_DATA,\r\n  SET_INITIAL_LEGEND_DATA,\r\n  TOGGLE_LEGEND_NODE_EXPANDED,\r\n  TOGGLE_LEGEND_NODE_VISIBLE,\r\n  SET_LEGEND_DOM_DATA\r\n} from \"../actions/map-legend\";\r\n\r\nconst s4 = () => {\r\n  return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);\r\n};\r\n\r\nconst guid = () => {\r\n  return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\r\n};\r\n\r\nconst updateLayers = (view, legend) => {\r\n\r\n  legend.items.forEach((legendLyr) => {\r\n  \r\n    if (legendLyr.alreadyLoaded === true) {\r\n      const layerFind = view.map.layers.filter((lyr) => {\r\n        return lyr.title === legendLyr.layerName ||\r\n          lyr.id === legendLyr.layerName;\r\n      });\r\n\r\n      if (layerFind && layerFind.items && layerFind.items.length !== 1) {\r\n        return null;\r\n      }\r\n\r\n      const matchedLayer = layerFind.items[0];\r\n\r\n      if (legendLyr.visible && legendLyr.subLayersVisible && matchedLayer.sublayers) {\r\n        if (matchedLayer.sublayers) {\r\n          matchedLayer.sublayers = matchedLayer.sublayers.map((subLyr) => {\r\n            const subLayerFind = legendLyr.subLayersVisible.filter((subId) => {\r\n              return subLyr.id === subId;\r\n            });\r\n\r\n            subLyr.visible = subLayerFind && subLayerFind.length === 1;\r\n            return subLyr;\r\n          });\r\n        }\r\n      }\r\n\r\n      if (matchedLayer.visible !== legendLyr.visible) {\r\n        matchedLayer.visible = legendLyr.visible;\r\n      }\r\n    }    \r\n  });\r\n};\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  legends: {},\r\n  views: {},\r\n  scales: {}\r\n};\r\n\r\nconst createReducer = (initialState, reducerMap) => {\r\n  return (state = initialState, action) => {\r\n    const reducer = reducerMap[action.type];\r\n\r\n    return reducer\r\n      ? reducer(state, action.payload)\r\n      : state;\r\n  };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n\r\n  [SET_CURRENT_SCALE]: (state, payload) => {\r\n\r\n    let scales = Object.assign({}, state.scales);\r\n    scales[payload.mapId] = payload.scale;\r\n\r\n    return Object.assign({}, state, {'scales': scales});\r\n  },\r\n\r\n  [RESET_LEGEND_IS_FETCHING]: (state, payload) => {\r\n\r\n    return Object.assign({}, state, {'isFetching': false});\r\n  },\r\n\r\n  [REQUEST_LEGEND_DATA]: (state, payload) => {\r\n\r\n    return Object.assign({}, state, {'isFetching': true});\r\n  },\r\n\r\n  [RECEIVE_LEGEND_DATA]: (state, payload) => {\r\n  \r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.items.map((leg, idx) => {\r\n      if (leg.url === payload.url) {\r\n        leg.legendLayers = payload.layers.map((lyr) => {\r\n          const legendData = lyr.legend.map((subnode) => {\r\n            return {\r\n              label: subnode.label,\r\n              image: subnode.imageData,\r\n              imageHeight: subnode.height,\r\n              imageWidth: subnode.width,\r\n              id: guid()\r\n            };\r\n          });\r\n\r\n          return {\r\n            subLayerId: lyr.layerId,\r\n            subLayerName: lyr.layerName,\r\n            subLayerMinScale: lyr.minScale,\r\n            subLayerMaxScale: lyr.maxScale,\r\n            subLayerScaleRestricted: lyr.minScale !== 0 || lyr.maxScale !== 0,\r\n            subLayerLegendData: legendData,\r\n            visible: leg.subLayersVisible\r\n              ? leg.subLayersVisible.indexOf(lyr.layerId) > -1\r\n              : true,\r\n            expanded: true,\r\n            id: guid()\r\n          };\r\n        });\r\n      }\r\n\r\n      leg.alreadyLoaded = true;\r\n      leg.expanded = true;\r\n      return leg;\r\n    });\r\n\r\n    legend.items = legendItems;\r\n    legends[payload.mapId] = legend;\r\n\r\n    return Object.assign({}, state, {\r\n      'isFetching': false,\r\n      'legends': legends\r\n    });\r\n  },\r\n\r\n  [SET_INITIAL_LEGEND_DATA]: (state, payload) => {\r\n\r\n    let views = Object.assign({}, state.views);\r\n    views[payload.mapId] = payload.view;\r\n\r\n    const layersWithSublayers = payload.view.map.layers\r\n      .filter(lyr => !lyr.loadError && lyr.allSublayers)\r\n      .map((initLyr, idx) => {\r\n        \r\n        let subLayersVisible = [];\r\n\r\n        initLyr.allSublayers.items.forEach((sl) => {\r\n\r\n          if (sl.visible) {\r\n            subLayersVisible.push(sl.id);\r\n          }\r\n        });\r\n\r\n        return {\r\n          layerId: idx,\r\n          layerName: initLyr.title || initLyr.id,\r\n          minScale: initLyr.minScale,\r\n          maxScale: initLyr.maxScale,\r\n          scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\r\n          visible: initLyr.visible,\r\n          subLayersVisible: subLayersVisible,\r\n          url: initLyr.url.replace(/\\/+$/, ''),\r\n          legendLayers: null,\r\n          hasDomNode: false,\r\n          alreadyLoaded: false,\r\n          expanded: false,\r\n          id: guid(),\r\n          uid: initLyr.uid\r\n        };\r\n      });\r\n\r\n    const graphicsLayers = payload.view.map.layers\r\n      .filter(lyr => \r\n        !lyr.loadError && lyr.type \r\n        && (lyr.type.toLowerCase() === 'feature' || lyr.type.toLowerCase() === 'graphics'))\r\n      .map((initLyr, idx) => {\r\n        \r\n        return {\r\n          layerId: idx,\r\n          layerName: initLyr.title || initLyr.id,\r\n          minScale: initLyr.minScale,\r\n          maxScale: initLyr.maxScale,\r\n          scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\r\n          visible: initLyr.visible,      \r\n          legendLayers: null,\r\n          hasDomNode: false,\r\n          alreadyLoaded: false,\r\n          expanded: false,\r\n          id: guid(),\r\n          uid: initLyr.uid\r\n        };\r\n      });\r\n\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    legends[payload.mapId] = layersWithSublayers.concat(graphicsLayers);\r\n\r\n    return Object.assign({}, state, {\r\n      'legends': legends,\r\n      'views': views\r\n    });\r\n  },\r\n\r\n  [SET_LEGEND_DOM_DATA]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n\r\n    legends[payload.mapId].items = legends[payload.mapId].items.map((leg, idx) => {\r\n\r\n      if (payload.legendWidget && payload.legendWidget.children && payload.legendWidget.children.length > 0) {\r\n      \r\n        let legendDOMForLayer = null;\r\n        for (let i = 0; i < payload.legendWidget.children.length; i++) {\r\n          \r\n          let child = payload.legendWidget.children[i];\r\n          if (child.id.split('_').pop() === leg.uid) {\r\n            legendDOMForLayer = child;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if (\r\n          leg.hasDomNode === false && legendDOMForLayer && \r\n          legendDOMForLayer.children && legendDOMForLayer.children.length > 1\r\n          ) {\r\n\r\n          leg.alreadyLoaded = true;\r\n          leg.hasDomNode = true;\r\n          leg.domNode = legendDOMForLayer.children[1].outerHTML;\r\n          leg.expanded = true;\r\n        }\r\n      }\r\n\r\n      return leg;\r\n    });\r\n\r\n    return Object.assign({}, state, {\r\n      'legends': legends\r\n    });\r\n  },\r\n\r\n  [TOGGLE_LEGEND_NODE_EXPANDED]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.items.map((leg, idx) => {\r\n\r\n        if (leg.id === payload.nodeId) {\r\n          leg.expanded = !leg.expanded;\r\n        } \r\n        else if (leg.legendLayers) {\r\n          const legendLayers = leg.legendLayers.map((lyr) => {\r\n              if (lyr.id === payload.nodeId) {\r\n                lyr.expanded = !lyr.expanded;\r\n              }\r\n              return lyr;\r\n            }\r\n          );\r\n\r\n          leg.legendLayers = legendLayers;\r\n        }\r\n        return leg;\r\n      }\r\n    );\r\n\r\n    legend.items = legendItems;\r\n    legends[payload.mapId] = legend;\r\n\r\n    return Object.assign({}, state, {'legends': legends});\r\n  },\r\n      \r\n  [TOGGLE_LEGEND_NODE_VISIBLE]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.items.map((leg, idx) => {\r\n        if (leg.id === payload.nodeId) {\r\n          leg.visible = !leg.visible;\r\n        } \r\n        else if (leg.legendLayers) {\r\n          const legendLayers = leg.legendLayers.map((lyr) => {\r\n              if (lyr.id === payload.nodeId) {\r\n                lyr.visible = !lyr.visible;\r\n              }\r\n\r\n              return lyr;\r\n            }\r\n          );\r\n\r\n          let subLayersVisible = [];\r\n\r\n          leg.legendLayers.forEach((layer) => {\r\n\r\n            if (layer.visible) {\r\n              subLayersVisible.push(layer.subLayerId);\r\n            }\r\n          });\r\n\r\n          leg.subLayersVisible = subLayersVisible;\r\n          leg.legendLayers = legendLayers;\r\n        }\r\n\r\n        return leg;\r\n      }\r\n    );\r\n\r\n    legend.items = legendItems;\r\n    legends[payload.mapId] = legend;\r\n\r\n    updateLayers(state.views[payload.mapId], legend);\r\n\r\n    return Object.assign({}, state, {'legends': legends});\r\n  }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/map-legend.js","module.exports = require(\"esri-loader\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"esri-loader\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"react-redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-redux\"\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}