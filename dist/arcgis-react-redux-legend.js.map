{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///arcgis-react-redux-legend.js","webpack:///webpack/bootstrap a7506d46f7dfc316ced8","webpack:///./src/actions/map-legend.js","webpack:///./src/components/map-legend.js","webpack:///./src/reducers/map-legend.js","webpack:///external \"esri-loader\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///./src/index.js"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","modules","__webpack_require__","moduleId","installedModules","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireWildcard","obj","newObj","key","default","setInitialLegend","fetchLegend","toggleNodeVisible","toggleNodeExpanded","SET_LEGEND_DOM_DATA","TOGGLE_LEGEND_NODE_EXPANDED","SET_INITIAL_LEGEND_DATA","RECEIVE_LEGEND_DATA","REQUEST_LEGEND_DATA","RESET_LEGEND_IS_FETCHING","TOGGLE_LEGEND_NODE_VISIBLE","SET_CURRENT_SCALE","undefined","_esriLoader","esriLoader","hookLegend","nodeId","mapId","type","payload","url","dispatch","dojoRequire","esriRequest","esriConfig","request","corsDetection","query","f","responseType","then","response","layers","data","error","console","legend","callback","original","_buildLegendDOMForLayer","b","result","view","watchUtils","Legend","map","forEach","lyr","once","allLoaded","items","loaded","loadError","reduce","prev","curr","layerInfos","filter","toLowerCase","source","idx","layer","length","esriLegendCount","legendDOMForLayer","setTimeout","legendWidget","widget","destroy","watch","newScale","scale","_interopRequireDefault","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","_react","_react2","_reactRedux","_mapLegend","styles","clickLegendNode","cursor","marginRight","display","inlineBlockDisplay","marginTop","marginBottom","legendMap","paddingTop","paddingRight","paddingBottom","paddingLeft","backgroundColor","fontWeight","legendCheckbox","legendCheckboxLabel","textStyle","verticalAlign","MapLegend","_React$Component","_ref","_temp","_this","_ret","_len","arguments","args","Array","_key","getPrototypeOf","apply","concat","initialise","_this$props","legends","alreadyLoaded","renderSubNodeLegendData","item","imageStyle","width","imageWidth","height","imageHeight","backgroundImage","image","backgroundRepeat","marginStyle","marginLeft","createElement","id","style","label","renderSubNodes","_this$props2","scales","currentScale","subLayerLegendData","expanded","subLayerScaleRestricted","subLayerMinScale","subLayerMaxScale","color","subNodeExpander","onClick","className","subNodeCheckbox","visible","subLayerName","renderNodes","_this$props3","subMarginStyle","sublayers","legendLayers","hasDomNode","dangerouslySetInnerHTML","__html","domNode","scaleRestricted","minScale","maxScale","topNodeExpander","nodeCheckbox","layerName","prevProps","prevState","_props","split","join","Component","mapStateToProps","state","mapLegendConfig","mapDispatchToProps","connect","_defineProperty","_createReducer","s4","Math","floor","random","toString","substring","guid","updateLayers","legendLyr","layerFind","title","matchedLayer","subLayersVisible","subLyr","subLayerFind","subId","initialState","isFetching","views","createReducer","reducerMap","action","reducer","assign","legendItems","leg","legendData","subnode","imageData","subLayerId","layerId","indexOf","layersWithSublayers","allSublayers","initLyr","sl","push","replace","uid","graphicsLayers","children","child","pop","outerHTML"],"mappings":"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","file":"arcgis-react-redux-legend.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"esri-loader\", \"react\", \"react-redux\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\")) : factory(root[\"esri-loader\"], root[\"react\"], root[\"react-redux\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"esri-loader\", \"react\", \"react-redux\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\")) : factory(root[\"esri-loader\"], root[\"react\"], root[\"react-redux\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setInitialLegend = exports.fetchLegend = exports.toggleNodeVisible = exports.toggleNodeExpanded = exports.SET_LEGEND_DOM_DATA = exports.TOGGLE_LEGEND_NODE_EXPANDED = exports.SET_INITIAL_LEGEND_DATA = exports.RECEIVE_LEGEND_DATA = exports.REQUEST_LEGEND_DATA = exports.RESET_LEGEND_IS_FETCHING = exports.TOGGLE_LEGEND_NODE_VISIBLE = exports.SET_CURRENT_SCALE = undefined;\n\nvar _esriLoader = __webpack_require__(3);\n\nvar esriLoader = _interopRequireWildcard(_esriLoader);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar SET_CURRENT_SCALE = exports.SET_CURRENT_SCALE = \"map-legend/SET_CURRENT_SCALE\";\nvar TOGGLE_LEGEND_NODE_VISIBLE = exports.TOGGLE_LEGEND_NODE_VISIBLE = \"map-legend/TOGGLE_LEGEND_NODE_VISIBLE\";\nvar RESET_LEGEND_IS_FETCHING = exports.RESET_LEGEND_IS_FETCHING = \"map-legend/RESET_LEGEND_IS_FETCHING\";\nvar REQUEST_LEGEND_DATA = exports.REQUEST_LEGEND_DATA = \"map-legend/REQUEST_LEGEND_DATA\";\nvar RECEIVE_LEGEND_DATA = exports.RECEIVE_LEGEND_DATA = \"map-legend/RECEIVE_LEGEND_DATA\";\nvar SET_INITIAL_LEGEND_DATA = exports.SET_INITIAL_LEGEND_DATA = \"map-legend/SET_INITIAL_LEGEND_DATA\";\nvar TOGGLE_LEGEND_NODE_EXPANDED = exports.TOGGLE_LEGEND_NODE_EXPANDED = \"map-legend/TOGGLE_LEGEND_NODE_EXPANDED\";\nvar SET_LEGEND_DOM_DATA = exports.SET_LEGEND_DOM_DATA = \"map-legend/SET_LEGEND_DOM_DATA\";\n\nvar toggleNodeExpanded = exports.toggleNodeExpanded = function toggleNodeExpanded(nodeId, mapId) {\n  return {\n    type: TOGGLE_LEGEND_NODE_EXPANDED,\n    payload: { nodeId: nodeId, mapId: mapId }\n  };\n};\n\nvar toggleNodeVisible = exports.toggleNodeVisible = function toggleNodeVisible(nodeId, mapId) {\n  return {\n    type: TOGGLE_LEGEND_NODE_VISIBLE,\n    payload: { nodeId: nodeId, mapId: mapId }\n  };\n};\n\nvar fetchLegend = exports.fetchLegend = function fetchLegend(url, mapId) {\n\n  return function (dispatch) {\n\n    dispatch({\n      type: REQUEST_LEGEND_DATA,\n      payload: { url: url, mapId: mapId }\n    });\n\n    esriLoader.dojoRequire([\"esri/request\", \"esri/config\"], function (esriRequest, esriConfig) {\n      esriConfig.request.corsDetection = false;\n\n      return esriRequest(url + \"/legend\", {\n        query: { f: \"json\" },\n        responseType: \"json\"\n      }).then(function (response) {\n        dispatch({\n          type: RECEIVE_LEGEND_DATA,\n          payload: { layers: response.data.layers, url: url, mapId: mapId }\n        });\n      }, function (error) {\n        console.error(error);\n        dispatch({\n          type: RESET_LEGEND_IS_FETCHING\n        });\n      });\n    });\n  };\n};\n\nvar hookLegend = function hookLegend(legend, callback) {\n\n  var original = legend._buildLegendDOMForLayer;\n\n  legend._buildLegendDOMForLayer = function (a, b) {\n\n    var result = original.call(legend, a, b);\n    callback(result);\n    return result;\n  };\n};\n\nvar setInitialLegend = exports.setInitialLegend = function setInitialLegend(view, mapId) {\n\n  return function (dispatch) {\n\n    esriLoader.dojoRequire([\"esri/core/watchUtils\", \"esri/widgets/Legend\"], function (watchUtils, Legend) {\n\n      view.then(function () {\n\n        view.map.layers.forEach(function (lyr) {\n\n          watchUtils.once(lyr, \"loaded\", function (value) {\n\n            var allLoaded = view.map.layers.items.map(function (a) {\n              return a.loaded || a.loadError;\n            }).reduce(function (prev, curr) {\n              return prev && curr;\n            });\n\n            if (allLoaded) {\n              (function () {\n                dispatch({\n                  type: SET_INITIAL_LEGEND_DATA,\n                  payload: { view: view, mapId: mapId }\n                });\n\n                var layerInfos = view.map.layers.filter(function (lyr) {\n                  return lyr.type && (lyr.type.toLowerCase() === 'feature' || lyr.type.toLowerCase() === 'graphics') && !lyr.loadError && (lyr.url || lyr.source);\n                }).map(function (lyr, idx) {\n\n                  return {\n                    layer: lyr\n                  };\n                });\n\n                if (layerInfos && layerInfos.length > 0) {\n                  (function () {\n\n                    var legend = new Legend({\n                      view: view,\n                      layerInfos: layerInfos\n                    });\n\n                    var esriLegendCount = 0;\n                    hookLegend(legend, function (legendDOMForLayer) {\n\n                      esriLegendCount++;\n\n                      if (esriLegendCount === layerInfos.length) {\n\n                        setTimeout(function () {\n\n                          dispatch({\n                            type: SET_LEGEND_DOM_DATA,\n                            payload: { legendWidget: legendDOMForLayer.widget, mapId: mapId }\n                          });\n\n                          legend.destroy();\n                          legend = null;\n                        }, 400);\n                      }\n                    });\n                  })();\n                }\n              })();\n            }\n          });\n        });\n\n        view.watch(\"scale\", function (newScale) {\n          dispatch({\n            type: SET_CURRENT_SCALE,\n            payload: { scale: newScale, mapId: mapId }\n          });\n        });\n      });\n    });\n  };\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(4);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(5);\n\nvar _mapLegend = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar styles = {\n  clickLegendNode: {\n    cursor: 'pointer',\n    marginRight: 6,\n    display: 'inline-block'\n  },\n  inlineBlockDisplay: {\n    display: 'inline-block',\n    marginTop: 8,\n    marginBottom: 0\n  },\n  legendMap: {\n    paddingTop: 10,\n    paddingRight: 6,\n    paddingBottom: 10,\n    paddingLeft: 6,\n    backgroundColor: '#ebebeb',\n    fontWeight: 'bold'\n  },\n  legendCheckbox: {\n    cursor: 'pointer',\n    marginRight: 8\n  },\n  legendCheckboxLabel: {\n    fontWeight: 400,\n    cursor: 'pointer'\n  },\n  textStyle: {\n    display: \"inline-block\",\n    verticalAlign: \"bottom\",\n    fontWeight: 500\n  }\n};\n\nvar MapLegend = function (_React$Component) {\n  _inherits(MapLegend, _React$Component);\n\n  function MapLegend() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MapLegend);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MapLegend.__proto__ || Object.getPrototypeOf(MapLegend)).call.apply(_ref, [this].concat(args))), _this), _this.initialise = function () {\n      var _this$props = _this.props,\n          legends = _this$props.legends,\n          mapId = _this$props.mapId,\n          fetchLegend = _this$props.fetchLegend;\n\n      var legend = legends[mapId];\n\n      if (!legend) {\n        return;\n      }\n\n      legend.items.forEach(function (lyr) {\n\n        if (lyr.url && lyr.alreadyLoaded === false) {\n          fetchLegend(lyr.url, mapId);\n        }\n      });\n    }, _this.renderSubNodeLegendData = function (item) {\n      var imageStyle = {\n        width: item.imageWidth + 8,\n        height: item.imageHeight,\n        backgroundImage: \"url(data:image/png;base64,\" + item.image + \")\",\n        backgroundRepeat: \"no-repeat\",\n        display: 'inline-block'\n      };\n\n      var marginStyle = { marginLeft: 16, marginTop: 6 };\n\n      return _react2.default.createElement(\n        \"div\",\n        { key: item.id, style: marginStyle },\n        _react2.default.createElement(\"div\", { style: imageStyle }),\n        _react2.default.createElement(\n          \"label\",\n          { style: styles.textStyle },\n          item.label\n        )\n      );\n    }, _this.renderSubNodes = function (item) {\n      var _this$props2 = _this.props,\n          mapId = _this$props2.mapId,\n          scales = _this$props2.scales,\n          toggleNodeExpanded = _this$props2.toggleNodeExpanded,\n          toggleNodeVisible = _this$props2.toggleNodeVisible;\n\n\n      var currentScale = scales[mapId];\n\n      var marginStyle = { marginLeft: 8 };\n\n      var subLayerLegendData = item.expanded && item.subLayerLegendData ? item.subLayerLegendData.map(_this.renderSubNodeLegendData) : \"\";\n\n      if (currentScale && item.subLayerScaleRestricted && (item.subLayerMinScale !== 0 && item.subLayerMinScale < currentScale || item.subLayerMaxScale !== 0 && item.subLayerMaxScale > currentScale)) {\n        marginStyle.color = \"#dcdcdc\";\n      }\n\n      var subNodeExpander = !item.subLayerLegendData ? \"\" : _react2.default.createElement(\n        \"div\",\n        { onClick: function onClick() {\n            return toggleNodeExpanded(item.id, mapId);\n          }, style: styles.clickLegendNode },\n        item.expanded ? _react2.default.createElement(\"span\", { className: \"esri-icon-down\" }) : _react2.default.createElement(\"span\", { className: \"esri-icon-right\" })\n      );\n\n      var subNodeCheckbox = _react2.default.createElement(\n        \"div\",\n        { style: styles.inlineBlockDisplay },\n        _react2.default.createElement(\n          \"div\",\n          { style: styles.inlineBlockDisplay },\n          _react2.default.createElement(\"span\", { style: styles.legendCheckbox, onClick: function onClick() {\n              return toggleNodeVisible(item.id, mapId);\n            }, className: item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible' }),\n          _react2.default.createElement(\n            \"label\",\n            { style: styles.legendCheckboxLabel, onClick: function onClick() {\n                return toggleNodeVisible(item.id, mapId);\n              } },\n            item.subLayerName\n          )\n        )\n      );\n\n      return _react2.default.createElement(\n        \"div\",\n        { key: item.id, style: marginStyle },\n        subNodeExpander,\n        subNodeCheckbox,\n        subLayerLegendData\n      );\n    }, _this.renderNodes = function (item) {\n\n      if (!item.alreadyLoaded) {\n        return '';\n      }\n\n      var _this$props3 = _this.props,\n          mapId = _this$props3.mapId,\n          scales = _this$props3.scales,\n          toggleNodeExpanded = _this$props3.toggleNodeExpanded,\n          toggleNodeVisible = _this$props3.toggleNodeVisible;\n\n\n      var currentScale = scales[mapId];\n\n      var marginStyle = { marginLeft: 4, marginTop: 8 };\n      var subMarginStyle = { marginLeft: 8 };\n\n      var sublayers = item.expanded && (item.legendLayers || item.hasDomNode) ? item.legendLayers ? item.legendLayers.map(_this.renderSubNodes) : item.hasDomNode ? _react2.default.createElement(\"div\", { style: subMarginStyle, dangerouslySetInnerHTML: { __html: item.domNode } }) : \"\" : \"\";\n\n      if (currentScale && item.scaleRestricted && (item.minScale !== 0 && item.minScale < currentScale || item.maxScale !== 0 && item.maxScale > currentScale)) {\n        marginStyle.color = \"#dcdcdc\";\n      }\n\n      var topNodeExpander = !item.legendLayers && !item.hasDomNode ? \"\" : _react2.default.createElement(\n        \"div\",\n        { onClick: function onClick() {\n            return toggleNodeExpanded(item.id, mapId);\n          }, style: styles.clickLegendNode },\n        item.expanded ? _react2.default.createElement(\"span\", { className: \"esri-icon-down\" }) : _react2.default.createElement(\"span\", { className: \"esri-icon-right\" })\n      );\n\n      var nodeCheckbox = _react2.default.createElement(\n        \"div\",\n        { style: styles.inlineBlockDisplay },\n        _react2.default.createElement(\"span\", { style: styles.legendCheckbox, onClick: function onClick() {\n            return toggleNodeVisible(item.id, mapId);\n          }, className: item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible' }),\n        _react2.default.createElement(\n          \"label\",\n          { style: styles.legendCheckboxLabel, onClick: function onClick() {\n              return toggleNodeVisible(item.id, mapId);\n            } },\n          item.layerName\n        )\n      );\n\n      return _react2.default.createElement(\n        \"div\",\n        { key: item.id, style: marginStyle },\n        topNodeExpander,\n        nodeCheckbox,\n        sublayers\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(MapLegend, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initialise();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this.initialise();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          legends = _props.legends,\n          mapId = _props.mapId;\n\n      var legend = legends[mapId];\n\n      if (!legend) {\n        return null;\n      }\n\n      return _react2.default.createElement(\n        \"div\",\n        { id: \"legend\" },\n        _react2.default.createElement(\n          \"div\",\n          null,\n          _react2.default.createElement(\n            \"h5\",\n            { style: styles.legendMap },\n            mapId.split(\"-\").join(\" - \")\n          )\n        ),\n        _react2.default.createElement(\n          \"div\",\n          null,\n          legend.items.map(this.renderNodes)\n        )\n      );\n    }\n  }]);\n\n  return MapLegend;\n}(_react2.default.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    legends: state.mapLegendConfig.legends,\n    scales: state.mapLegendConfig.scales\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchLegend: function fetchLegend(url, mapId) {\n      dispatch((0, _mapLegend.fetchLegend)(url, mapId));\n    },\n    toggleNodeExpanded: function toggleNodeExpanded(id, mapId) {\n      dispatch((0, _mapLegend.toggleNodeExpanded)(id, mapId));\n    },\n    toggleNodeVisible: function toggleNodeVisible(id, mapId) {\n      dispatch((0, _mapLegend.toggleNodeVisible)(id, mapId));\n    }\n  };\n};\n\nexports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MapLegend);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createReducer;\n\nvar _mapLegend = __webpack_require__(0);\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar s4 = function s4() {\n  return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);\n};\n\nvar guid = function guid() {\n  return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\n};\n\nvar updateLayers = function updateLayers(view, legend) {\n\n  legend.items.forEach(function (legendLyr) {\n\n    if (legendLyr.alreadyLoaded === true) {\n      var layerFind = view.map.layers.filter(function (lyr) {\n        return lyr.title === legendLyr.layerName || lyr.id === legendLyr.layerName;\n      });\n\n      if (layerFind && layerFind.items && layerFind.items.length !== 1) {\n        return null;\n      }\n\n      var matchedLayer = layerFind.items[0];\n\n      if (legendLyr.visible && legendLyr.subLayersVisible && matchedLayer.sublayers) {\n        if (matchedLayer.sublayers) {\n          matchedLayer.sublayers = matchedLayer.sublayers.map(function (subLyr) {\n            var subLayerFind = legendLyr.subLayersVisible.filter(function (subId) {\n              return subLyr.id === subId;\n            });\n\n            subLyr.visible = subLayerFind && subLayerFind.length === 1;\n            return subLyr;\n          });\n        }\n      }\n\n      if (matchedLayer.visible !== legendLyr.visible) {\n        matchedLayer.visible = legendLyr.visible;\n      }\n    }\n  });\n};\n\nvar initialState = {\n  isFetching: false,\n  legends: {},\n  views: {},\n  scales: {}\n};\n\nvar createReducer = function createReducer(initialState, reducerMap) {\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments[1];\n\n    var reducer = reducerMap[action.type];\n\n    return reducer ? reducer(state, action.payload) : state;\n  };\n};\n\nexports.default = createReducer(initialState, (_createReducer = {}, _defineProperty(_createReducer, _mapLegend.SET_CURRENT_SCALE, function (state, payload) {\n\n  var scales = Object.assign({}, state.scales);\n  scales[payload.mapId] = payload.scale;\n\n  return Object.assign({}, state, { 'scales': scales });\n}), _defineProperty(_createReducer, _mapLegend.RESET_LEGEND_IS_FETCHING, function (state, payload) {\n\n  return Object.assign({}, state, { 'isFetching': false });\n}), _defineProperty(_createReducer, _mapLegend.REQUEST_LEGEND_DATA, function (state, payload) {\n\n  return Object.assign({}, state, { 'isFetching': true });\n}), _defineProperty(_createReducer, _mapLegend.RECEIVE_LEGEND_DATA, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.items.map(function (leg, idx) {\n    if (leg.url === payload.url) {\n      leg.legendLayers = payload.layers.map(function (lyr) {\n        var legendData = lyr.legend.map(function (subnode) {\n          return {\n            label: subnode.label,\n            image: subnode.imageData,\n            imageHeight: subnode.height,\n            imageWidth: subnode.width,\n            id: guid()\n          };\n        });\n\n        return {\n          subLayerId: lyr.layerId,\n          subLayerName: lyr.layerName,\n          subLayerMinScale: lyr.minScale,\n          subLayerMaxScale: lyr.maxScale,\n          subLayerScaleRestricted: lyr.minScale !== 0 || lyr.maxScale !== 0,\n          subLayerLegendData: legendData,\n          visible: leg.subLayersVisible ? leg.subLayersVisible.indexOf(lyr.layerId) > -1 : true,\n          expanded: true,\n          id: guid()\n        };\n      });\n    }\n\n    leg.alreadyLoaded = true;\n    leg.expanded = true;\n    return leg;\n  });\n\n  legend.items = legendItems;\n  legends[payload.mapId] = legend;\n\n  return Object.assign({}, state, {\n    'isFetching': false,\n    'legends': legends\n  });\n}), _defineProperty(_createReducer, _mapLegend.SET_INITIAL_LEGEND_DATA, function (state, payload) {\n\n  var views = Object.assign({}, state.views);\n  views[payload.mapId] = payload.view;\n\n  var layersWithSublayers = payload.view.map.layers.filter(function (lyr) {\n    return !lyr.loadError && lyr.allSublayers;\n  }).map(function (initLyr, idx) {\n\n    var subLayersVisible = [];\n\n    initLyr.allSublayers.items.forEach(function (sl) {\n\n      if (sl.visible) {\n        subLayersVisible.push(sl.id);\n      }\n    });\n\n    return {\n      layerId: idx,\n      layerName: initLyr.title || initLyr.id,\n      minScale: initLyr.minScale,\n      maxScale: initLyr.maxScale,\n      scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\n      visible: initLyr.visible,\n      subLayersVisible: subLayersVisible,\n      url: initLyr.url.replace(/\\/+$/, ''),\n      legendLayers: null,\n      hasDomNode: false,\n      alreadyLoaded: false,\n      expanded: false,\n      id: guid(),\n      uid: initLyr.uid\n    };\n  });\n\n  var graphicsLayers = payload.view.map.layers.filter(function (lyr) {\n    return !lyr.loadError && lyr.type && (lyr.type.toLowerCase() === 'feature' || lyr.type.toLowerCase() === 'graphics');\n  }).map(function (initLyr, idx) {\n\n    return {\n      layerId: idx,\n      layerName: initLyr.title || initLyr.id,\n      minScale: initLyr.minScale,\n      maxScale: initLyr.maxScale,\n      scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\n      visible: initLyr.visible,\n      legendLayers: null,\n      hasDomNode: false,\n      alreadyLoaded: false,\n      expanded: false,\n      id: guid(),\n      uid: initLyr.uid\n    };\n  });\n\n  var legends = Object.assign({}, state.legends);\n  legends[payload.mapId] = layersWithSublayers.concat(graphicsLayers);\n\n  return Object.assign({}, state, {\n    'legends': legends,\n    'views': views\n  });\n}), _defineProperty(_createReducer, _mapLegend.SET_LEGEND_DOM_DATA, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n\n  legends[payload.mapId].items = legends[payload.mapId].items.map(function (leg, idx) {\n\n    if (payload.legendWidget && payload.legendWidget.children && payload.legendWidget.children.length > 0) {\n\n      var legendDOMForLayer = null;\n      for (var i = 0; i < payload.legendWidget.children.length; i++) {\n\n        var child = payload.legendWidget.children[i];\n        if (child.id.split('_').pop() === leg.uid) {\n          legendDOMForLayer = child;\n          break;\n        }\n      }\n\n      if (leg.hasDomNode === false && legendDOMForLayer && legendDOMForLayer.children && legendDOMForLayer.children.length > 1) {\n\n        leg.alreadyLoaded = true;\n        leg.hasDomNode = true;\n        leg.domNode = legendDOMForLayer.children[1].outerHTML;\n        leg.expanded = true;\n      }\n    }\n\n    return leg;\n  });\n\n  return Object.assign({}, state, {\n    'legends': legends\n  });\n}), _defineProperty(_createReducer, _mapLegend.TOGGLE_LEGEND_NODE_EXPANDED, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.items.map(function (leg, idx) {\n\n    if (leg.id === payload.nodeId) {\n      leg.expanded = !leg.expanded;\n    } else if (leg.legendLayers) {\n      var legendLayers = leg.legendLayers.map(function (lyr) {\n        if (lyr.id === payload.nodeId) {\n          lyr.expanded = !lyr.expanded;\n        }\n        return lyr;\n      });\n\n      leg.legendLayers = legendLayers;\n    }\n    return leg;\n  });\n\n  legend.items = legendItems;\n  legends[payload.mapId] = legend;\n\n  return Object.assign({}, state, { 'legends': legends });\n}), _defineProperty(_createReducer, _mapLegend.TOGGLE_LEGEND_NODE_VISIBLE, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.items.map(function (leg, idx) {\n    if (leg.id === payload.nodeId) {\n      leg.visible = !leg.visible;\n    } else if (leg.legendLayers) {\n      (function () {\n        var legendLayers = leg.legendLayers.map(function (lyr) {\n          if (lyr.id === payload.nodeId) {\n            lyr.visible = !lyr.visible;\n          }\n\n          return lyr;\n        });\n\n        var subLayersVisible = [];\n\n        leg.legendLayers.forEach(function (layer) {\n\n          if (layer.visible) {\n            subLayersVisible.push(layer.subLayerId);\n          }\n        });\n\n        leg.subLayersVisible = subLayersVisible;\n        leg.legendLayers = legendLayers;\n      })();\n    }\n\n    return leg;\n  });\n\n  legend.items = legendItems;\n  legends[payload.mapId] = legend;\n\n  updateLayers(state.views[payload.mapId], legend);\n\n  return Object.assign({}, state, { 'legends': legends });\n}), _createReducer));\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"esri-loader\");\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"react\");\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"react-redux\");\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// components\nvar MapLegend = exports.MapLegend = __webpack_require__(1).default;\n\n// redurcers\nvar reducer = exports.reducer = __webpack_require__(2).default;\n\n// actions\nvar setInitialLegend = exports.setInitialLegend = __webpack_require__(0).setInitialLegend;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// arcgis-react-redux-legend.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a7506d46f7dfc316ced8","import * as esriLoader from \"esri-loader\";\r\n\r\nexport const SET_CURRENT_SCALE = \"map-legend/SET_CURRENT_SCALE\";\r\nexport const TOGGLE_LEGEND_NODE_VISIBLE = \"map-legend/TOGGLE_LEGEND_NODE_VISIBLE\";\r\nexport const RESET_LEGEND_IS_FETCHING = \"map-legend/RESET_LEGEND_IS_FETCHING\";\r\nexport const REQUEST_LEGEND_DATA = \"map-legend/REQUEST_LEGEND_DATA\";\r\nexport const RECEIVE_LEGEND_DATA = \"map-legend/RECEIVE_LEGEND_DATA\";\r\nexport const SET_INITIAL_LEGEND_DATA = \"map-legend/SET_INITIAL_LEGEND_DATA\";\r\nexport const TOGGLE_LEGEND_NODE_EXPANDED = \"map-legend/TOGGLE_LEGEND_NODE_EXPANDED\";\r\nexport const SET_LEGEND_DOM_DATA = \"map-legend/SET_LEGEND_DOM_DATA\";\r\n\r\nexport const toggleNodeExpanded = (nodeId, mapId) => {\r\n  return {\r\n    type: TOGGLE_LEGEND_NODE_EXPANDED, \r\n    payload: { nodeId, mapId } \r\n  };\r\n};\r\n\r\nexport const toggleNodeVisible = (nodeId, mapId) => {\r\n  return {\r\n    type: TOGGLE_LEGEND_NODE_VISIBLE, \r\n    payload: { nodeId, mapId } \r\n  };\r\n};\r\n\r\nexport const fetchLegend = (url, mapId) => {\r\n\r\n  return function(dispatch) {\r\n\r\n    dispatch({\r\n      type: REQUEST_LEGEND_DATA, \r\n      payload: { url, mapId } \r\n    });\r\n\r\n    esriLoader.dojoRequire(\r\n      [\"esri/request\", \"esri/config\"], \r\n      (esriRequest, esriConfig) =>\r\n      {\r\n        esriConfig.request.corsDetection = false;\r\n\r\n        return esriRequest(url + \"/legend\", {\r\n          query: {f: \"json\"},\r\n          responseType: \"json\"\r\n        })\r\n        .then(\r\n          response => {\r\n            dispatch({\r\n              type: RECEIVE_LEGEND_DATA, \r\n              payload: { layers: response.data.layers, url, mapId } \r\n            });\r\n          },\r\n          error => {\r\n            console.error(error);\r\n            dispatch({\r\n              type: RESET_LEGEND_IS_FETCHING\r\n            });\r\n          }\r\n        );\r\n      });\r\n  };\r\n};\r\n\r\nconst hookLegend = (legend, callback) => {\r\n\r\n    var original = legend._buildLegendDOMForLayer;\r\n\r\n    legend._buildLegendDOMForLayer = (a, b) => {\r\n\r\n      var result = original.call(legend, a, b);\r\n      callback(result);\r\n      return result;\r\n    };\r\n  }\r\n\r\nexport const setInitialLegend = (view, mapId) => {\r\n\r\n  return function(dispatch) {\r\n\r\n    esriLoader.dojoRequire(\r\n      [\"esri/core/watchUtils\", \"esri/widgets/Legend\"], \r\n      (watchUtils, Legend) => {\r\n      \r\n      view.then(() => {\r\n\r\n        view.map.layers.forEach((lyr) => {\r\n\r\n          watchUtils.once(lyr, \"loaded\", (value) => {\r\n\r\n            const allLoaded = view.map.layers.items\r\n              .map(a => a.loaded || a.loadError)\r\n              .reduce((prev, curr) => prev && curr);\r\n\r\n            if (allLoaded) {\r\n              dispatch({\r\n                type: SET_INITIAL_LEGEND_DATA, \r\n                payload: { view, mapId } \r\n              });\r\n\r\n              const layerInfos = view.map.layers\r\n                .filter(lyr => \r\n                  lyr.type \r\n                  && (lyr.type.toLowerCase() === 'feature' || lyr.type.toLowerCase() === 'graphics')\r\n                  && !lyr.loadError\r\n                  && (lyr.url || lyr.source))\r\n                .map((lyr, idx) => {\r\n                  \r\n                  return {\r\n                    layer: lyr\r\n                  }\r\n                });\r\n\r\n              if (layerInfos && layerInfos.length > 0) { \r\n                \r\n                let legend = new Legend({\r\n                  view: view,\r\n                  layerInfos\r\n                });\r\n\r\n                let esriLegendCount = 0;\r\n                hookLegend(legend, (legendDOMForLayer) => {\r\n\r\n                  esriLegendCount++;\r\n\r\n                  if (esriLegendCount === layerInfos.length) {\r\n\r\n                    setTimeout(() => {\r\n\r\n                      dispatch({\r\n                        type: SET_LEGEND_DOM_DATA, \r\n                        payload: { legendWidget: legendDOMForLayer.widget, mapId } \r\n                      });\r\n\r\n                      legend.destroy();\r\n                      legend = null;\r\n                    }, 400);   \r\n                  }  \r\n                });\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        view.watch(\"scale\", (newScale) => {\r\n          dispatch({\r\n            type: SET_CURRENT_SCALE, \r\n            payload: { scale: newScale, mapId }\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/actions/map-legend.js","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  fetchLegend,\r\n  toggleNodeExpanded,\r\n  toggleNodeVisible\r\n} from \"../actions/map-legend\";\r\n\r\nconst styles = {  \r\n  clickLegendNode: {\r\n      cursor: 'pointer',\r\n      marginRight: 6,\r\n      display: 'inline-block'\r\n  },\r\n  inlineBlockDisplay: {\r\n      display: 'inline-block',\r\n      marginTop: 8,\r\n      marginBottom: 0\r\n  },\r\n  legendMap: {\r\n      paddingTop: 10,\r\n      paddingRight: 6,\r\n      paddingBottom: 10,\r\n      paddingLeft: 6,\r\n      backgroundColor: '#ebebeb',\r\n      fontWeight: 'bold'\r\n  },\r\n  legendCheckbox: {\r\n      cursor: 'pointer',\r\n      marginRight: 8\r\n  },\r\n  legendCheckboxLabel: {\r\n      fontWeight: 400,\r\n      cursor: 'pointer'\r\n  },\r\n  textStyle: {\r\n    display: \"inline-block\",\r\n    verticalAlign: \"bottom\",\r\n    fontWeight: 500\r\n  }\r\n}\r\n\r\nclass MapLegend extends React.Component {\r\n  initialise = () => {\r\n    const {legends, mapId, fetchLegend} = this.props;\r\n    const legend = legends[mapId];\r\n\r\n    if (!legend) {\r\n      return;\r\n    }\r\n\r\n    legend.items.forEach((lyr) => {\r\n\r\n      if (lyr.url && lyr.alreadyLoaded === false) {\r\n        fetchLegend(lyr.url, mapId);\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initialise();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.initialise();\r\n  }\r\n\r\n  renderSubNodeLegendData = item => {\r\n    const imageStyle = {\r\n      width: item.imageWidth + 8,\r\n      height: item.imageHeight,\r\n      backgroundImage: \"url(data:image/png;base64,\" + item.image + \")\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      display: 'inline-block'\r\n    };\r\n\r\n    const marginStyle = {marginLeft: 16, marginTop: 6};\r\n\r\n    return (\r\n      <div key={item.id} style={marginStyle}>\r\n        <div style={imageStyle} />\r\n        <label style={styles.textStyle}>{item.label}</label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderSubNodes = item => {\r\n    const {\r\n      mapId,\r\n      scales,\r\n      toggleNodeExpanded,\r\n      toggleNodeVisible\r\n    } = this.props;\r\n\r\n    const currentScale = scales[mapId];\r\n\r\n    let marginStyle = {marginLeft: 8};\r\n\r\n    let subLayerLegendData = item.expanded && item.subLayerLegendData\r\n      ? item.subLayerLegendData.map(this.renderSubNodeLegendData)\r\n      : \"\";\r\n\r\n    if (currentScale && item.subLayerScaleRestricted &&\r\n      (item.subLayerMinScale !== 0 && (item.subLayerMinScale < currentScale) \r\n      || item.subLayerMaxScale !== 0 && (item.subLayerMaxScale > currentScale))) {\r\n      marginStyle.color = \"#dcdcdc\";\r\n    }\r\n\r\n    let subNodeExpander = !item.subLayerLegendData\r\n      ? \"\"\r\n      : <div onClick={() => toggleNodeExpanded(item.id, mapId)} style={styles.clickLegendNode}>          \r\n          {item.expanded\r\n            ? <span className='esri-icon-down' />\r\n            : <span className='esri-icon-right' />}          \r\n        </div>;\r\n\r\n    let subNodeCheckbox = \r\n      <div style={styles.inlineBlockDisplay}>        \r\n        <div style={styles.inlineBlockDisplay}>\r\n          <span style={styles.legendCheckbox} onClick={() => toggleNodeVisible(item.id, mapId)} className={item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible'} />\r\n          <label style={styles.legendCheckboxLabel} onClick={() => toggleNodeVisible(item.id, mapId)}>{item.subLayerName}</label>             \r\n        </div>\r\n      </div>;\r\n\r\n    return (\r\n      <div key={item.id} style={marginStyle}>\r\n        {subNodeExpander}{subNodeCheckbox}{subLayerLegendData}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderNodes = item => {\r\n\r\n    if (!item.alreadyLoaded) {\r\n      return '';\r\n    }\r\n\r\n    const {mapId, scales, toggleNodeExpanded, toggleNodeVisible} = this.props;\r\n\r\n    const currentScale = scales[mapId];\r\n\r\n    const marginStyle = {marginLeft: 4, marginTop: 8};\r\n    const subMarginStyle = {marginLeft: 8};\r\n\r\n    let sublayers = item.expanded && (item.legendLayers || item.hasDomNode)\r\n      ? item.legendLayers \r\n        ? item.legendLayers.map(this.renderSubNodes)\r\n        : item.hasDomNode \r\n          ? <div style={subMarginStyle} dangerouslySetInnerHTML={{__html: item.domNode}}></div>\r\n          : \"\"\r\n      : \"\";\r\n\r\n    if (currentScale && item.scaleRestricted &&\r\n      (item.minScale !== 0 && (item.minScale < currentScale) || item.maxScale !== 0 && (item.maxScale > currentScale))) {\r\n      marginStyle.color = \"#dcdcdc\";\r\n    }\r\n\r\n    let topNodeExpander = !item.legendLayers && !item.hasDomNode\r\n      ? \"\"\r\n      : <div onClick={() => toggleNodeExpanded(item.id, mapId)} style={styles.clickLegendNode}>\r\n          {item.expanded\r\n            ? <span className='esri-icon-down' />\r\n            : <span className='esri-icon-right' />}    \r\n        </div>;\r\n        \r\n    let nodeCheckbox = \r\n      <div style={styles.inlineBlockDisplay}>\r\n        <span style={styles.legendCheckbox} onClick={() => toggleNodeVisible(item.id, mapId)} className={item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible'} />\r\n        <label style={styles.legendCheckboxLabel} onClick={() => toggleNodeVisible(item.id, mapId)}>{item.layerName}</label>             \r\n      </div>;\r\n\r\n    return (\r\n      <div key={item.id} style={marginStyle}>\r\n        {topNodeExpander}{nodeCheckbox}{sublayers}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {legends, mapId} = this.props;\r\n    const legend = legends[mapId];\r\n\r\n    if (!legend) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div id=\"legend\">\r\n        <div>\r\n          <h5 style={styles.legendMap}>{mapId.split(\"-\").join(\" - \")}</h5>\r\n        </div>\r\n        <div>\r\n          {legend.items.map(this.renderNodes)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    legends: state.mapLegendConfig.legends,\r\n    scales: state.mapLegendConfig.scales\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchLegend: (url, mapId) => {\r\n      dispatch(fetchLegend(url, mapId));\r\n    },\r\n    toggleNodeExpanded: (id, mapId) => {\r\n      dispatch(toggleNodeExpanded(id, mapId));\r\n    },\r\n    toggleNodeVisible: (id, mapId) => {\r\n      dispatch(toggleNodeVisible(id, mapId));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapLegend)\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-legend.js","import {\r\n  SET_CURRENT_SCALE,\r\n  RESET_LEGEND_IS_FETCHING,\r\n  REQUEST_LEGEND_DATA,\r\n  RECEIVE_LEGEND_DATA,\r\n  SET_INITIAL_LEGEND_DATA,\r\n  TOGGLE_LEGEND_NODE_EXPANDED,\r\n  TOGGLE_LEGEND_NODE_VISIBLE,\r\n  SET_LEGEND_DOM_DATA\r\n} from \"../actions/map-legend\";\r\n\r\nconst s4 = () => {\r\n  return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);\r\n};\r\n\r\nconst guid = () => {\r\n  return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\r\n};\r\n\r\nconst updateLayers = (view, legend) => {\r\n\r\n  legend.items.forEach((legendLyr) => {\r\n  \r\n    if (legendLyr.alreadyLoaded === true) {\r\n      const layerFind = view.map.layers.filter((lyr) => {\r\n        return lyr.title === legendLyr.layerName ||\r\n          lyr.id === legendLyr.layerName;\r\n      });\r\n\r\n      if (layerFind && layerFind.items && layerFind.items.length !== 1) {\r\n        return null;\r\n      }\r\n\r\n      const matchedLayer = layerFind.items[0];\r\n\r\n      if (legendLyr.visible && legendLyr.subLayersVisible && matchedLayer.sublayers) {\r\n        if (matchedLayer.sublayers) {\r\n          matchedLayer.sublayers = matchedLayer.sublayers.map((subLyr) => {\r\n            const subLayerFind = legendLyr.subLayersVisible.filter((subId) => {\r\n              return subLyr.id === subId;\r\n            });\r\n\r\n            subLyr.visible = subLayerFind && subLayerFind.length === 1;\r\n            return subLyr;\r\n          });\r\n        }\r\n      }\r\n\r\n      if (matchedLayer.visible !== legendLyr.visible) {\r\n        matchedLayer.visible = legendLyr.visible;\r\n      }\r\n    }    \r\n  });\r\n};\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  legends: {},\r\n  views: {},\r\n  scales: {}\r\n};\r\n\r\nconst createReducer = (initialState, reducerMap) => {\r\n  return (state = initialState, action) => {\r\n    const reducer = reducerMap[action.type];\r\n\r\n    return reducer\r\n      ? reducer(state, action.payload)\r\n      : state;\r\n  };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n\r\n  [SET_CURRENT_SCALE]: (state, payload) => {\r\n\r\n    let scales = Object.assign({}, state.scales);\r\n    scales[payload.mapId] = payload.scale;\r\n\r\n    return Object.assign({}, state, {'scales': scales});\r\n  },\r\n\r\n  [RESET_LEGEND_IS_FETCHING]: (state, payload) => {\r\n\r\n    return Object.assign({}, state, {'isFetching': false});\r\n  },\r\n\r\n  [REQUEST_LEGEND_DATA]: (state, payload) => {\r\n\r\n    return Object.assign({}, state, {'isFetching': true});\r\n  },\r\n\r\n  [RECEIVE_LEGEND_DATA]: (state, payload) => {\r\n  \r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.items.map((leg, idx) => {\r\n      if (leg.url === payload.url) {\r\n        leg.legendLayers = payload.layers.map((lyr) => {\r\n          const legendData = lyr.legend.map((subnode) => {\r\n            return {\r\n              label: subnode.label,\r\n              image: subnode.imageData,\r\n              imageHeight: subnode.height,\r\n              imageWidth: subnode.width,\r\n              id: guid()\r\n            };\r\n          });\r\n\r\n          return {\r\n            subLayerId: lyr.layerId,\r\n            subLayerName: lyr.layerName,\r\n            subLayerMinScale: lyr.minScale,\r\n            subLayerMaxScale: lyr.maxScale,\r\n            subLayerScaleRestricted: lyr.minScale !== 0 || lyr.maxScale !== 0,\r\n            subLayerLegendData: legendData,\r\n            visible: leg.subLayersVisible\r\n              ? leg.subLayersVisible.indexOf(lyr.layerId) > -1\r\n              : true,\r\n            expanded: true,\r\n            id: guid()\r\n          };\r\n        });\r\n      }\r\n\r\n      leg.alreadyLoaded = true;\r\n      leg.expanded = true;\r\n      return leg;\r\n    });\r\n\r\n    legend.items = legendItems;\r\n    legends[payload.mapId] = legend;\r\n\r\n    return Object.assign({}, state, {\r\n      'isFetching': false,\r\n      'legends': legends\r\n    });\r\n  },\r\n\r\n  [SET_INITIAL_LEGEND_DATA]: (state, payload) => {\r\n\r\n    let views = Object.assign({}, state.views);\r\n    views[payload.mapId] = payload.view;\r\n\r\n    const layersWithSublayers = payload.view.map.layers\r\n      .filter(lyr => !lyr.loadError && lyr.allSublayers)\r\n      .map((initLyr, idx) => {\r\n        \r\n        let subLayersVisible = [];\r\n\r\n        initLyr.allSublayers.items.forEach((sl) => {\r\n\r\n          if (sl.visible) {\r\n            subLayersVisible.push(sl.id);\r\n          }\r\n        });\r\n\r\n        return {\r\n          layerId: idx,\r\n          layerName: initLyr.title || initLyr.id,\r\n          minScale: initLyr.minScale,\r\n          maxScale: initLyr.maxScale,\r\n          scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\r\n          visible: initLyr.visible,\r\n          subLayersVisible: subLayersVisible,\r\n          url: initLyr.url.replace(/\\/+$/, ''),\r\n          legendLayers: null,\r\n          hasDomNode: false,\r\n          alreadyLoaded: false,\r\n          expanded: false,\r\n          id: guid(),\r\n          uid: initLyr.uid\r\n        };\r\n      });\r\n\r\n    const graphicsLayers = payload.view.map.layers\r\n      .filter(lyr => \r\n        !lyr.loadError && lyr.type \r\n        && (lyr.type.toLowerCase() === 'feature' || lyr.type.toLowerCase() === 'graphics'))\r\n      .map((initLyr, idx) => {\r\n        \r\n        return {\r\n          layerId: idx,\r\n          layerName: initLyr.title || initLyr.id,\r\n          minScale: initLyr.minScale,\r\n          maxScale: initLyr.maxScale,\r\n          scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\r\n          visible: initLyr.visible,      \r\n          legendLayers: null,\r\n          hasDomNode: false,\r\n          alreadyLoaded: false,\r\n          expanded: false,\r\n          id: guid(),\r\n          uid: initLyr.uid\r\n        };\r\n      });\r\n\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    legends[payload.mapId] = layersWithSublayers.concat(graphicsLayers);\r\n\r\n    return Object.assign({}, state, {\r\n      'legends': legends,\r\n      'views': views\r\n    });\r\n  },\r\n\r\n  [SET_LEGEND_DOM_DATA]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n\r\n    legends[payload.mapId].items = legends[payload.mapId].items.map((leg, idx) => {\r\n\r\n      if (payload.legendWidget && payload.legendWidget.children && payload.legendWidget.children.length > 0) {\r\n      \r\n        let legendDOMForLayer = null;\r\n        for (let i = 0; i < payload.legendWidget.children.length; i++) {\r\n          \r\n          let child = payload.legendWidget.children[i];\r\n          if (child.id.split('_').pop() === leg.uid) {\r\n            legendDOMForLayer = child;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if (\r\n          leg.hasDomNode === false && legendDOMForLayer && \r\n          legendDOMForLayer.children && legendDOMForLayer.children.length > 1\r\n          ) {\r\n\r\n          leg.alreadyLoaded = true;\r\n          leg.hasDomNode = true;\r\n          leg.domNode = legendDOMForLayer.children[1].outerHTML;\r\n          leg.expanded = true;\r\n        }\r\n      }\r\n\r\n      return leg;\r\n    });\r\n\r\n    return Object.assign({}, state, {\r\n      'legends': legends\r\n    });\r\n  },\r\n\r\n  [TOGGLE_LEGEND_NODE_EXPANDED]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.items.map((leg, idx) => {\r\n\r\n        if (leg.id === payload.nodeId) {\r\n          leg.expanded = !leg.expanded;\r\n        } \r\n        else if (leg.legendLayers) {\r\n          const legendLayers = leg.legendLayers.map((lyr) => {\r\n              if (lyr.id === payload.nodeId) {\r\n                lyr.expanded = !lyr.expanded;\r\n              }\r\n              return lyr;\r\n            }\r\n          );\r\n\r\n          leg.legendLayers = legendLayers;\r\n        }\r\n        return leg;\r\n      }\r\n    );\r\n\r\n    legend.items = legendItems;\r\n    legends[payload.mapId] = legend;\r\n\r\n    return Object.assign({}, state, {'legends': legends});\r\n  },\r\n      \r\n  [TOGGLE_LEGEND_NODE_VISIBLE]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.items.map((leg, idx) => {\r\n        if (leg.id === payload.nodeId) {\r\n          leg.visible = !leg.visible;\r\n        } \r\n        else if (leg.legendLayers) {\r\n          const legendLayers = leg.legendLayers.map((lyr) => {\r\n              if (lyr.id === payload.nodeId) {\r\n                lyr.visible = !lyr.visible;\r\n              }\r\n\r\n              return lyr;\r\n            }\r\n          );\r\n\r\n          let subLayersVisible = [];\r\n\r\n          leg.legendLayers.forEach((layer) => {\r\n\r\n            if (layer.visible) {\r\n              subLayersVisible.push(layer.subLayerId);\r\n            }\r\n          });\r\n\r\n          leg.subLayersVisible = subLayersVisible;\r\n          leg.legendLayers = legendLayers;\r\n        }\r\n\r\n        return leg;\r\n      }\r\n    );\r\n\r\n    legend.items = legendItems;\r\n    legends[payload.mapId] = legend;\r\n\r\n    updateLayers(state.views[payload.mapId], legend);\r\n\r\n    return Object.assign({}, state, {'legends': legends});\r\n  }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/map-legend.js","module.exports = require(\"esri-loader\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"esri-loader\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"react-redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-redux\"\n// module id = 5\n// module chunks = 0","// components\r\nexport const MapLegend = require('./components/map-legend').default;\r\n\r\n// redurcers\r\nexport const reducer = require('./reducers/map-legend').default;\r\n\r\n// actions\r\nexport const setInitialLegend = require('./actions/map-legend').setInitialLegend;\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}