{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///arcgis-react-redux-legend.js","webpack:///webpack/bootstrap f8cc850f109c702496be","webpack:///./src/actions/map-legend.js","webpack:///./src/components/map-legend.js","webpack:///./src/reducers/map-legend.js","webpack:///external \"esri-loader\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///./src/index.js"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","modules","__webpack_require__","moduleId","installedModules","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireWildcard","obj","newObj","key","default","setInitialLegend","fetchLegend","showLayersNotVisibleForScale","reverseLayerOrder","toggleShowSettings","toggleNodeVisible","toggleNodeExpanded","SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA","SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA","SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE","REVERSE_LAYER_ORDER","TOGGLE_SHOW_SETTINGS","SET_LEGEND_DOM_DATA","TOGGLE_LEGEND_NODE_EXPANDED","RECEIVE_LEGEND_DATA","REQUEST_LEGEND_DATA","RESET_LEGEND_IS_FETCHING","TOGGLE_LEGEND_NODE_VISIBLE","SET_CURRENT_SCALE","undefined","_esriLoader","esriLoader","hookLegend","nodeId","mapId","type","payload","show","url","dispatch","dojoRequire","esriRequest","esriConfig","request","corsDetection","query","f","responseType","then","response","layers","data","error","console","legend","callback","original","_buildLegendDOMForLayer","b","result","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","dispatchScaleChange","newScale","scale","createLayerLegend","view","layer","Legend","layerInfos","legendDOMForLayer","widget","legendWidget","destroy","watch","map","forEach","lyr","__index","loadedLayer","loaded","indexOf","toLowerCase","allSublayers","legendEnabled","source","_interopRequireDefault","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","length","descriptor","protoProps","staticProps","_react","_react2","_reactRedux","_mapLegend","styles","clickLegendNode","cursor","marginRight","display","inlineBlockDisplay","marginTop","marginBottom","title","paddingTop","paddingRight","paddingBottom","paddingLeft","backgroundColor","margin","settings","opacity","float","position","right","top","settingsOn","settingsPanel","zIndex","width","border","legendPadding","legendCheckbox","color","legendCheckboxSelected","legendCheckboxLabel","fontWeight","textStyle","verticalAlign","MapLegend","_React$Component","_ref","_temp","_this","_ret","_len","Array","_key","getPrototypeOf","concat","initialise","_this$props","legends","isFetching","alreadyLoaded","renderSubNodeLegendData","item","imageStyle","imageWidth","height","imageHeight","backgroundImage","image","backgroundRepeat","marginStyle","marginLeft","createElement","id","style","label","renderSubNodes","_this$props2","scales","currentScale","subLayerLegendData","expanded","subLayerScaleRestricted","subLayerMinScale","subLayerMaxScale","subNodeExpander","onClick","className","subNodeCheckbox","visible","subLayerName","renderNodes","_this$props3","options","subMarginStyle","scaleRestricted","minScale","maxScale","sublayers","legendLayers","hasDomNode","dangerouslySetInnerHTML","__html","domNode","topNodeExpander","nodeCheckbox","layerName","prevProps","prevState","_props","option","split","join","showSettings","Component","mapStateToProps","state","mapLegendConfig","mapDispatchToProps","propTypes","PropTypes","string","isRequired","connect","_defineProperty","_createReducer","s4","Math","floor","random","toString","substring","guid","sortLayers","mapIndex","sortLayersBackwards","updateLayers","legendLyr","matchedLayer","find","uid","subLayersVisible","subLyr","subLayerFind","filter","subId","initialState","views","createReducer","reducerMap","action","reducer","assign","sort","legendItems","leg","idx","legendData","subnode","imageData","subLayerId","layerId","initLyr","items","sl","push","replace","children","child","pop","outerHTML"],"mappings":"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","file":"arcgis-react-redux-legend.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"esri-loader\", \"react\", \"react-redux\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\")) : factory(root[\"esri-loader\"], root[\"react\"], root[\"react-redux\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"esri-loader\", \"react\", \"react-redux\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"esri-loader\"), require(\"react\"), require(\"react-redux\")) : factory(root[\"esri-loader\"], root[\"react\"], root[\"react-redux\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setInitialLegend = exports.fetchLegend = exports.showLayersNotVisibleForScale = exports.reverseLayerOrder = exports.toggleShowSettings = exports.toggleNodeVisible = exports.toggleNodeExpanded = exports.SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA = exports.SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA = exports.SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE = exports.REVERSE_LAYER_ORDER = exports.TOGGLE_SHOW_SETTINGS = exports.SET_LEGEND_DOM_DATA = exports.TOGGLE_LEGEND_NODE_EXPANDED = exports.RECEIVE_LEGEND_DATA = exports.REQUEST_LEGEND_DATA = exports.RESET_LEGEND_IS_FETCHING = exports.TOGGLE_LEGEND_NODE_VISIBLE = exports.SET_CURRENT_SCALE = undefined;\n\nvar _esriLoader = __webpack_require__(3);\n\nvar esriLoader = _interopRequireWildcard(_esriLoader);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar SET_CURRENT_SCALE = exports.SET_CURRENT_SCALE = \"map-legend/SET_CURRENT_SCALE\";\nvar TOGGLE_LEGEND_NODE_VISIBLE = exports.TOGGLE_LEGEND_NODE_VISIBLE = \"map-legend/TOGGLE_LEGEND_NODE_VISIBLE\";\nvar RESET_LEGEND_IS_FETCHING = exports.RESET_LEGEND_IS_FETCHING = \"map-legend/RESET_LEGEND_IS_FETCHING\";\nvar REQUEST_LEGEND_DATA = exports.REQUEST_LEGEND_DATA = \"map-legend/REQUEST_LEGEND_DATA\";\nvar RECEIVE_LEGEND_DATA = exports.RECEIVE_LEGEND_DATA = \"map-legend/RECEIVE_LEGEND_DATA\";\nvar TOGGLE_LEGEND_NODE_EXPANDED = exports.TOGGLE_LEGEND_NODE_EXPANDED = \"map-legend/TOGGLE_LEGEND_NODE_EXPANDED\";\nvar SET_LEGEND_DOM_DATA = exports.SET_LEGEND_DOM_DATA = \"map-legend/SET_LEGEND_DOM_DATA\";\nvar TOGGLE_SHOW_SETTINGS = exports.TOGGLE_SHOW_SETTINGS = \"map-legend/TOGGLE_SHOW_SETTINGS\";\nvar REVERSE_LAYER_ORDER = exports.REVERSE_LAYER_ORDER = \"map-legend/REVERSE_LAYER_ORDER\";\nvar SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE = exports.SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE = \"map-legend/SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE\";\n\nvar SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA = exports.SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA = 'map-legend/SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA';\nvar SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA = exports.SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA = 'map-legend/SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA';\n\nvar toggleNodeExpanded = exports.toggleNodeExpanded = function toggleNodeExpanded(nodeId, mapId) {\n  return {\n    type: TOGGLE_LEGEND_NODE_EXPANDED,\n    payload: { nodeId: nodeId, mapId: mapId }\n  };\n};\n\nvar toggleNodeVisible = exports.toggleNodeVisible = function toggleNodeVisible(nodeId, mapId) {\n  return {\n    type: TOGGLE_LEGEND_NODE_VISIBLE,\n    payload: { nodeId: nodeId, mapId: mapId }\n  };\n};\n\nvar toggleShowSettings = exports.toggleShowSettings = function toggleShowSettings(mapId) {\n  return {\n    type: TOGGLE_SHOW_SETTINGS,\n    payload: { mapId: mapId }\n  };\n};\n\nvar reverseLayerOrder = exports.reverseLayerOrder = function reverseLayerOrder(mapId) {\n  return {\n    type: REVERSE_LAYER_ORDER,\n    payload: { mapId: mapId }\n  };\n};\n\nvar showLayersNotVisibleForScale = exports.showLayersNotVisibleForScale = function showLayersNotVisibleForScale(mapId, show) {\n  return {\n    type: SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE,\n    payload: { mapId: mapId, show: show }\n  };\n};\n\nvar fetchLegend = exports.fetchLegend = function fetchLegend(url, mapId) {\n\n  return function (dispatch) {\n\n    dispatch({\n      type: REQUEST_LEGEND_DATA,\n      payload: { url: url, mapId: mapId }\n    });\n\n    esriLoader.dojoRequire([\"esri/request\", \"esri/config\"], function (esriRequest, esriConfig) {\n      esriConfig.request.corsDetection = false;\n\n      return esriRequest(url + \"/legend\", {\n        query: { f: \"json\" },\n        responseType: \"json\"\n      }).then(function (response) {\n        dispatch({\n          type: RECEIVE_LEGEND_DATA,\n          payload: { layers: response.data.layers, url: url, mapId: mapId }\n        });\n      }, function (error) {\n        console.error(error);\n        dispatch({\n          type: RESET_LEGEND_IS_FETCHING\n        });\n      });\n    });\n  };\n};\n\nvar hookLegend = function hookLegend(legend, callback) {\n\n  var original = legend._buildLegendDOMForLayer;\n\n  legend._buildLegendDOMForLayer = function (a, b) {\n\n    var result = original.call(legend, a, b);\n    callback(result, legend);\n    return result;\n  };\n};\n\nvar debounce = function debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments;\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nvar dispatchScaleChange = debounce(function (dispatch, newScale, mapId) {\n\n  dispatch({\n    type: SET_CURRENT_SCALE,\n    payload: { scale: newScale, mapId: mapId }\n  });\n}, 250);\n\nvar createLayerLegend = function createLayerLegend(view, mapId, layer, dispatch) {\n\n  esriLoader.dojoRequire([\"esri/widgets/Legend\"], function (Legend) {\n\n    hookLegend(new Legend({ view: view, layerInfos: [{ layer: layer }] }), function (legendDOMForLayer, legend) {\n\n      setTimeout(function () {\n\n        if (legendDOMForLayer && legendDOMForLayer.widget) {\n          dispatch({\n            type: SET_LEGEND_DOM_DATA,\n            payload: { legendWidget: legendDOMForLayer.widget, mapId: mapId }\n          });\n        }\n\n        if (legend && legend.destroy) {\n          legend.destroy();\n        }\n      }, 250);\n    });\n  });\n};\n\nvar setInitialLegend = exports.setInitialLegend = function setInitialLegend(view, mapId) {\n\n  return function (dispatch) {\n\n    view.then(function () {\n\n      dispatchScaleChange(dispatch, view.scale, mapId);\n\n      view.watch(\"scale\", function (newScale) {\n        dispatchScaleChange(dispatch, newScale, mapId);\n      });\n\n      var i = 1;\n\n      view.map.layers.forEach(function (lyr) {\n\n        lyr.__index = i;\n        i++;\n\n        lyr.then(function (loadedLayer) {\n\n          if (loadedLayer.loaded && loadedLayer.type && ['map-image'].indexOf(loadedLayer.type.toLowerCase()) > -1 && loadedLayer.allSublayers && loadedLayer.legendEnabled) {\n\n            dispatch({\n              type: SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA,\n              payload: { view: view, mapId: mapId, layer: loadedLayer }\n            });\n          }\n\n          if (loadedLayer.loaded && loadedLayer.type && ['csv', 'feature', 'graphics', 'scene', 'stream'].indexOf(loadedLayer.type.toLowerCase()) > -1 && (lyr.url || lyr.source) && loadedLayer.legendEnabled) {\n\n            dispatch({\n              type: SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA,\n              payload: { view: view, mapId: mapId, layer: loadedLayer }\n            });\n\n            createLayerLegend(view, mapId, loadedLayer, dispatch);\n          }\n        }, function (error) {\n          console.error('Failed to load a layer for use with the legend control.', error);\n        });\n      });\n    });\n  };\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(4);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(5);\n\nvar _mapLegend = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar styles = {\n  clickLegendNode: {\n    cursor: 'pointer',\n    marginRight: 6,\n    display: 'inline-block'\n  },\n  inlineBlockDisplay: {\n    display: 'inline-block',\n    marginTop: 8,\n    marginBottom: 0\n  },\n  title: {\n    paddingTop: 10,\n    paddingRight: 12,\n    paddingBottom: 10,\n    paddingLeft: 12,\n    backgroundColor: '#ebebeb',\n    margin: 0\n  },\n  settings: {\n    opacity: 0.5,\n    float: 'right',\n    cursor: 'pointer',\n    position: 'absolute',\n    right: 10,\n    top: 10\n  },\n  settingsOn: {\n    opacity: 1,\n    float: 'right',\n    cursor: 'pointer',\n    position: 'absolute',\n    right: 10,\n    top: 10\n  },\n  settingsPanel: {\n    position: 'absolute',\n    top: 30,\n    right: 8,\n    backgroundColor: 'whitesmoke',\n    zIndex: 101,\n    width: '90%',\n    border: 'solid 1px rgba(0,0,0,0.2)'\n  },\n  legendPadding: {\n    paddingRight: 12,\n    paddingBottom: 10,\n    paddingLeft: 12\n  },\n  legendCheckbox: {\n    cursor: 'pointer',\n    marginRight: 8,\n    color: '#EF5350'\n  },\n  legendCheckboxSelected: {\n    cursor: 'pointer',\n    marginRight: 8\n  },\n  legendCheckboxLabel: {\n    fontWeight: 400,\n    cursor: 'pointer'\n  },\n  textStyle: {\n    display: 'inline-block',\n    verticalAlign: 'bottom',\n    fontWeight: 500\n  }\n};\n\nvar MapLegend = function (_React$Component) {\n  _inherits(MapLegend, _React$Component);\n\n  function MapLegend() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MapLegend);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MapLegend.__proto__ || Object.getPrototypeOf(MapLegend)).call.apply(_ref, [this].concat(args))), _this), _this.initialise = function () {\n      var _this$props = _this.props,\n          legends = _this$props.legends,\n          mapId = _this$props.mapId,\n          fetchLegend = _this$props.fetchLegend;\n\n      var legend = legends[mapId];\n\n      if (!legend) {\n        return;\n      }\n\n      legend.forEach(function (lyr) {\n        if (lyr.url && !lyr.isFetching && !lyr.alreadyLoaded) {\n          fetchLegend(lyr.url, mapId);\n        }\n      });\n    }, _this.renderSubNodeLegendData = function (item) {\n      var imageStyle = {\n        width: item.imageWidth + 8,\n        height: item.imageHeight,\n        backgroundImage: 'url(data:image/png;base64,' + item.image + ')',\n        backgroundRepeat: 'no-repeat',\n        display: 'inline-block'\n      };\n\n      var marginStyle = { marginLeft: 16, marginTop: 6 };\n\n      return _react2.default.createElement(\n        'div',\n        { key: item.id, style: marginStyle },\n        _react2.default.createElement('div', { style: imageStyle }),\n        _react2.default.createElement(\n          'label',\n          { style: styles.textStyle },\n          item.label\n        )\n      );\n    }, _this.renderSubNodes = function (item) {\n      var _this$props2 = _this.props,\n          mapId = _this$props2.mapId,\n          scales = _this$props2.scales,\n          toggleNodeExpanded = _this$props2.toggleNodeExpanded,\n          toggleNodeVisible = _this$props2.toggleNodeVisible;\n\n\n      var currentScale = scales[mapId];\n\n      var marginStyle = { marginLeft: 8, opacity: 1 };\n\n      var subLayerLegendData = item.expanded && item.subLayerLegendData ? item.subLayerLegendData.map(_this.renderSubNodeLegendData) : null;\n\n      if (currentScale && item.subLayerScaleRestricted && (item.subLayerMinScale !== 0 && item.subLayerMinScale < currentScale || item.subLayerMaxScale !== 0 && item.subLayerMaxScale > currentScale)) {\n        marginStyle.opacity = 0.5;\n      }\n\n      var subNodeExpander = !item.subLayerLegendData ? null : _react2.default.createElement(\n        'div',\n        { onClick: function onClick() {\n            return toggleNodeExpanded(item.id, mapId);\n          }, style: styles.clickLegendNode },\n        item.expanded ? _react2.default.createElement('span', { className: 'esri-icon-down' }) : _react2.default.createElement('span', { className: 'esri-icon-right' })\n      );\n\n      var subNodeCheckbox = _react2.default.createElement(\n        'div',\n        { style: styles.inlineBlockDisplay },\n        _react2.default.createElement(\n          'div',\n          { style: styles.inlineBlockDisplay },\n          _react2.default.createElement('span', {\n            style: item.visible ? styles.legendCheckboxSelected : styles.legendCheckbox,\n            onClick: function onClick() {\n              return toggleNodeVisible(item.id, mapId);\n            },\n            className: item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible'\n          }),\n          _react2.default.createElement(\n            'label',\n            {\n              style: styles.legendCheckboxLabel,\n              onClick: function onClick() {\n                return toggleNodeVisible(item.id, mapId);\n              } },\n            item.subLayerName\n          )\n        )\n      );\n\n      return _react2.default.createElement(\n        'div',\n        { key: item.id, style: marginStyle },\n        subNodeExpander,\n        subNodeCheckbox,\n        subLayerLegendData\n      );\n    }, _this.renderNodes = function (item) {\n\n      if (!item.alreadyLoaded) {\n        return null;\n      }\n\n      var _this$props3 = _this.props,\n          mapId = _this$props3.mapId,\n          options = _this$props3.options,\n          scales = _this$props3.scales,\n          toggleNodeExpanded = _this$props3.toggleNodeExpanded,\n          toggleNodeVisible = _this$props3.toggleNodeVisible;\n\n\n      var currentScale = scales[mapId];\n\n      var marginStyle = { marginLeft: 4, marginTop: 8, opacity: 1 };\n      var subMarginStyle = { marginLeft: 8 };\n\n      if (currentScale && item.scaleRestricted && (item.minScale !== 0 && item.minScale < currentScale || item.maxScale !== 0 && item.maxScale > currentScale)) {\n        if (options[mapId].showLayersNotVisibleForScale === false) {\n          return null;\n        }\n        marginStyle.opacity = 0.4;\n      }\n\n      var sublayers = item.expanded && (item.legendLayers || item.hasDomNode) ? item.legendLayers ? item.legendLayers.map(_this.renderSubNodes) : item.hasDomNode ? _react2.default.createElement('div', { style: subMarginStyle, dangerouslySetInnerHTML: { __html: item.domNode } }) : null : null;\n\n      var topNodeExpander = !item.legendLayers && !item.hasDomNode ? null : _react2.default.createElement(\n        'div',\n        { onClick: function onClick() {\n            return toggleNodeExpanded(item.id, mapId);\n          }, style: styles.clickLegendNode },\n        item.expanded ? _react2.default.createElement('span', { className: 'esri-icon-down' }) : _react2.default.createElement('span', { className: 'esri-icon-right' })\n      );\n\n      var nodeCheckbox = _react2.default.createElement(\n        'div',\n        { style: styles.inlineBlockDisplay },\n        _react2.default.createElement('span', {\n          style: item.visible ? styles.legendCheckboxSelected : styles.legendCheckbox,\n          onClick: function onClick() {\n            return toggleNodeVisible(item.id, mapId);\n          },\n          className: item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible'\n        }),\n        _react2.default.createElement(\n          'label',\n          { style: styles.legendCheckboxLabel, onClick: function onClick() {\n              return toggleNodeVisible(item.id, mapId);\n            } },\n          item.layerName\n        )\n      );\n\n      return _react2.default.createElement(\n        'div',\n        { key: item.id, style: marginStyle },\n        topNodeExpander,\n        nodeCheckbox,\n        sublayers\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(MapLegend, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initialise();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      this.initialise();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          legends = _props.legends,\n          options = _props.options,\n          mapId = _props.mapId,\n          reverseLayerOrder = _props.reverseLayerOrder,\n          showLayersNotVisibleForScale = _props.showLayersNotVisibleForScale,\n          toggleShowSettings = _props.toggleShowSettings;\n\n      var legend = legends[mapId];\n\n      if (!legend) {\n        return null;\n      }\n\n      var option = options[mapId];\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'arcgis-legend' },\n        _react2.default.createElement(\n          'div',\n          null,\n          _react2.default.createElement(\n            'h5',\n            { style: styles.title },\n            mapId.split('-').join(' - ')\n          ),\n          _react2.default.createElement('span', { title: 'Legend settings', style: option.showSettings ? styles.settingsOn : styles.settings, className: 'esri-icon-settings', onClick: function onClick() {\n              return toggleShowSettings(mapId);\n            } }),\n          option.showSettings ? _react2.default.createElement(\n            'div',\n            { style: styles.settingsPanel },\n            _react2.default.createElement(\n              'h5',\n              { style: styles.title },\n              'Legend options'\n            ),\n            _react2.default.createElement(\n              'div',\n              { style: styles.legendPadding },\n              _react2.default.createElement(\n                'div',\n                { style: styles.inlineBlockDisplay },\n                _react2.default.createElement('span', {\n                  style: styles.legendCheckboxSelected,\n                  onClick: function onClick() {\n                    return reverseLayerOrder(mapId);\n                  },\n                  className: option.reverseLayerOrder ? 'esri-icon-checkbox-checked' : 'esri-icon-checkbox-unchecked'\n                }),\n                _react2.default.createElement(\n                  'label',\n                  {\n                    style: styles.legendCheckboxLabel,\n                    onClick: function onClick() {\n                      return reverseLayerOrder(mapId);\n                    } },\n                  'Reverse order'\n                )\n              ),\n              _react2.default.createElement(\n                'div',\n                { style: styles.inlineBlockDisplay },\n                _react2.default.createElement('span', {\n                  style: styles.legendCheckboxSelected,\n                  onClick: function onClick() {\n                    return showLayersNotVisibleForScale(mapId, !option.showLayersNotVisibleForScale);\n                  },\n                  className: option.showLayersNotVisibleForScale ? 'esri-icon-checkbox-checked' : 'esri-icon-checkbox-unchecked'\n                }),\n                _react2.default.createElement(\n                  'label',\n                  {\n                    style: styles.legendCheckboxLabel,\n                    onClick: function onClick() {\n                      return showLayersNotVisibleForScale(mapId, !option.showLayersNotVisibleForScale);\n                    } },\n                  'Show layers not visible for current scale'\n                )\n              )\n            )\n          ) : null\n        ),\n        _react2.default.createElement(\n          'div',\n          { style: styles.legendPadding },\n          legend.map(this.renderNodes)\n        )\n      );\n    }\n  }]);\n\n  return MapLegend;\n}(_react2.default.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    legends: state.mapLegendConfig.legends,\n    options: state.mapLegendConfig.options,\n    scales: state.mapLegendConfig.scales\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchLegend: function fetchLegend(url, mapId) {\n      dispatch((0, _mapLegend.fetchLegend)(url, mapId));\n    },\n    toggleNodeExpanded: function toggleNodeExpanded(id, mapId) {\n      dispatch((0, _mapLegend.toggleNodeExpanded)(id, mapId));\n    },\n    toggleNodeVisible: function toggleNodeVisible(id, mapId) {\n      dispatch((0, _mapLegend.toggleNodeVisible)(id, mapId));\n    },\n    toggleShowSettings: function toggleShowSettings(mapId) {\n      dispatch((0, _mapLegend.toggleShowSettings)(mapId));\n    },\n    reverseLayerOrder: function reverseLayerOrder(mapId) {\n      dispatch((0, _mapLegend.reverseLayerOrder)(mapId));\n    },\n    showLayersNotVisibleForScale: function showLayersNotVisibleForScale(mapId, show) {\n      dispatch((0, _mapLegend.showLayersNotVisibleForScale)(mapId, show));\n    }\n  };\n};\n\nMapLegend.propTypes = {\n  mapId: _react2.default.PropTypes.string.isRequired,\n  view: _react2.default.PropTypes.object.isRequired\n};\n\nexports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MapLegend);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createReducer;\n\nvar _mapLegend = __webpack_require__(0);\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar s4 = function s4() {\n  return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);\n};\n\nvar guid = function guid() {\n  return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\n};\n\nvar sortLayers = function sortLayers(a, b) {\n  return a.mapIndex - b.mapIndex;\n};\n\nvar sortLayersBackwards = function sortLayersBackwards(a, b) {\n  return b.mapIndex - a.mapIndex;\n};\n\nvar updateLayers = function updateLayers(view, legend) {\n\n  legend.forEach(function (legendLyr) {\n\n    if (legendLyr.alreadyLoaded === true) {\n      var matchedLayer = view.map.layers.find(function (lyr) {\n        return lyr.uid === legendLyr.uid;\n      });\n\n      if (!matchedLayer) {\n        return null;\n      }\n\n      if (legendLyr.visible && legendLyr.subLayersVisible && matchedLayer.sublayers) {\n        if (matchedLayer.sublayers) {\n          matchedLayer.sublayers = matchedLayer.sublayers.map(function (subLyr) {\n            var subLayerFind = legendLyr.subLayersVisible.filter(function (subId) {\n              return subLyr.id === subId;\n            });\n\n            subLyr.visible = subLayerFind && subLayerFind.length === 1;\n            return subLyr;\n          });\n        }\n      }\n\n      if (matchedLayer.visible !== legendLyr.visible) {\n        matchedLayer.visible = legendLyr.visible;\n      }\n    }\n  });\n};\n\nvar initialState = {\n  isFetching: false,\n  legends: {},\n  views: {},\n  scales: {},\n  options: {}\n};\n\nvar createReducer = function createReducer(initialState, reducerMap) {\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments[1];\n\n    var reducer = reducerMap[action.type];\n\n    return reducer ? reducer(state, action.payload) : state;\n  };\n};\n\nexports.default = createReducer(initialState, (_createReducer = {}, _defineProperty(_createReducer, _mapLegend.SET_CURRENT_SCALE, function (state, payload) {\n\n  var scales = Object.assign({}, state.scales);\n  scales[payload.mapId] = payload.scale;\n\n  return Object.assign({}, state, { 'scales': scales });\n}), _defineProperty(_createReducer, _mapLegend.RESET_LEGEND_IS_FETCHING, function (state, payload) {\n\n  return Object.assign({}, state, { 'isFetching': false });\n}), _defineProperty(_createReducer, _mapLegend.TOGGLE_SHOW_SETTINGS, function (state, payload) {\n\n  var options = Object.assign({}, state.options);\n  options[payload.mapId].showSettings = !options[payload.mapId].showSettings;\n\n  return Object.assign({}, state, { 'options': options });\n}), _defineProperty(_createReducer, _mapLegend.REVERSE_LAYER_ORDER, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var options = Object.assign({}, state.options);\n  options[payload.mapId].reverseLayerOrder = !options[payload.mapId].reverseLayerOrder;\n\n  legends[payload.mapId] = legend.sort(options[payload.mapId].reverseLayerOrder ? sortLayersBackwards : sortLayers);\n\n  return Object.assign({}, state, {\n    'legends': legends,\n    'options': options\n  });\n}), _defineProperty(_createReducer, _mapLegend.SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE, function (state, payload) {\n\n  var options = Object.assign({}, state.options);\n  options[payload.mapId].showLayersNotVisibleForScale = payload.show;\n\n  return Object.assign({}, state, { 'options': options });\n}), _defineProperty(_createReducer, _mapLegend.REQUEST_LEGEND_DATA, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.map(function (leg, idx) {\n    if (leg.url === payload.url) {\n      leg.isFetching = true;\n    }\n\n    return leg;\n  });\n\n  legends[payload.mapId] = legendItems;\n\n  return Object.assign({}, state, {\n    'isFetching': true,\n    'legends': legends\n  });\n}), _defineProperty(_createReducer, _mapLegend.RECEIVE_LEGEND_DATA, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.map(function (leg, idx) {\n    if (leg.url === payload.url) {\n      leg.legendLayers = payload.layers.map(function (lyr) {\n        var legendData = lyr.legend.map(function (subnode) {\n          return {\n            label: subnode.label,\n            image: subnode.imageData,\n            imageHeight: subnode.height,\n            imageWidth: subnode.width,\n            id: guid()\n          };\n        });\n\n        return {\n          subLayerId: lyr.layerId,\n          subLayerName: lyr.layerName,\n          subLayerMinScale: lyr.minScale,\n          subLayerMaxScale: lyr.maxScale,\n          subLayerScaleRestricted: lyr.minScale !== 0 || lyr.maxScale !== 0,\n          subLayerLegendData: legendData,\n          visible: leg.subLayersVisible ? leg.subLayersVisible.indexOf(lyr.layerId) > -1 : true,\n          expanded: true,\n          id: guid()\n        };\n      });\n\n      leg.alreadyLoaded = true;\n      leg.expanded = true;\n    }\n\n    return leg;\n  });\n\n  legends[payload.mapId] = legendItems;\n\n  return Object.assign({}, state, {\n    'isFetching': false,\n    'legends': legends\n  });\n}), _defineProperty(_createReducer, _mapLegend.SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA, function (state, payload) {\n\n  var views = Object.assign({}, state.views);\n  views[payload.mapId] = payload.view;\n\n  var initLyr = payload.layer;\n  var subLayersVisible = [];\n\n  initLyr.allSublayers.items.forEach(function (sl) {\n\n    if (sl.visible) {\n      subLayersVisible.push(sl.id);\n    }\n  });\n\n  var layer = [{\n    layerId: initLyr.id,\n    layerName: initLyr.title || initLyr.id,\n    minScale: initLyr.minScale,\n    maxScale: initLyr.maxScale,\n    scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\n    visible: initLyr.visible,\n    subLayersVisible: subLayersVisible,\n    url: initLyr.url.replace(/\\/+$/, ''),\n    legendLayers: null,\n    hasDomNode: false,\n    alreadyLoaded: false,\n    isFetching: false,\n    expanded: false,\n    id: guid(),\n    uid: initLyr.uid,\n    mapIndex: initLyr.__index,\n    reverseLayerOrder: false,\n    showLayersNotVisibleForScale: true\n  }];\n\n  var legends = Object.assign({}, state.legends);\n  legends[payload.mapId] = legends[payload.mapId] && legends[payload.mapId].length ? legends[payload.mapId].concat(layer) : layer;\n\n  legends[payload.mapId].sort(sortLayers);\n\n  var options = Object.assign({}, state.options);\n  options[payload.mapId] = {\n    reverseLayerOrder: false,\n    showLayersNotVisibleForScale: true,\n    showSettings: false\n  };\n\n  return Object.assign({}, state, {\n    'legends': legends,\n    'options': options,\n    'views': views\n  });\n}), _defineProperty(_createReducer, _mapLegend.SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA, function (state, payload) {\n\n  var views = Object.assign({}, state.views);\n  views[payload.mapId] = payload.view;\n\n  var initLyr = payload.layer;\n\n  var layer = [{\n    layerId: initLyr.id,\n    layerName: initLyr.title || initLyr.id,\n    minScale: initLyr.minScale,\n    maxScale: initLyr.maxScale,\n    scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\n    visible: initLyr.visible,\n    legendLayers: null,\n    hasDomNode: false,\n    alreadyLoaded: false,\n    isFetching: false,\n    expanded: false,\n    id: guid(),\n    uid: initLyr.uid,\n    mapIndex: initLyr.__index,\n    reverseLayerOrder: false,\n    showLayersNotVisibleForScale: true\n  }];\n\n  var legends = Object.assign({}, state.legends);\n  legends[payload.mapId] = legends[payload.mapId] && legends[payload.mapId].length ? legends[payload.mapId].concat(layer) : layer;\n\n  legends[payload.mapId].sort(sortLayers);\n\n  return Object.assign({}, state, {\n    'legends': legends,\n    'views': views\n  });\n}), _defineProperty(_createReducer, _mapLegend.SET_LEGEND_DOM_DATA, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n\n  legends[payload.mapId] = legends[payload.mapId].map(function (leg, idx) {\n\n    if (payload.legendWidget && payload.legendWidget.children && payload.legendWidget.children.length > 0) {\n\n      var legendDOMForLayer = null;\n      for (var i = 0; i < payload.legendWidget.children.length; i++) {\n\n        var child = payload.legendWidget.children[i];\n        if (child.id.split('_').pop() === leg.uid) {\n          legendDOMForLayer = child;\n          break;\n        }\n      }\n\n      if (leg.hasDomNode === false && legendDOMForLayer && legendDOMForLayer.children && legendDOMForLayer.children.length > 1) {\n\n        leg.alreadyLoaded = true;\n        leg.hasDomNode = true;\n        leg.domNode = legendDOMForLayer.children[1].outerHTML;\n        leg.expanded = true;\n      }\n    }\n\n    return leg;\n  });\n\n  return Object.assign({}, state, {\n    'legends': legends\n  });\n}), _defineProperty(_createReducer, _mapLegend.TOGGLE_LEGEND_NODE_EXPANDED, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.map(function (leg, idx) {\n\n    if (leg.id === payload.nodeId) {\n      leg.expanded = !leg.expanded;\n    } else if (leg.legendLayers) {\n      var legendLayers = leg.legendLayers.map(function (lyr) {\n        if (lyr.id === payload.nodeId) {\n          lyr.expanded = !lyr.expanded;\n        }\n        return lyr;\n      });\n\n      leg.legendLayers = legendLayers;\n    }\n    return leg;\n  });\n\n  legends[payload.mapId] = legendItems;\n\n  return Object.assign({}, state, { 'legends': legends });\n}), _defineProperty(_createReducer, _mapLegend.TOGGLE_LEGEND_NODE_VISIBLE, function (state, payload) {\n\n  var legends = Object.assign({}, state.legends);\n  var legend = legends[payload.mapId];\n\n  var legendItems = legend.map(function (leg, idx) {\n    if (leg.id === payload.nodeId) {\n      leg.visible = !leg.visible;\n    } else if (leg.legendLayers) {\n      var legendLayers = leg.legendLayers.map(function (lyr) {\n        if (lyr.id === payload.nodeId) {\n          lyr.visible = !lyr.visible;\n        }\n\n        return lyr;\n      });\n\n      var subLayersVisible = [];\n\n      leg.legendLayers.forEach(function (layer) {\n\n        if (layer.visible) {\n          subLayersVisible.push(layer.subLayerId);\n        }\n      });\n\n      leg.subLayersVisible = subLayersVisible;\n      leg.legendLayers = legendLayers;\n    }\n\n    return leg;\n  });\n\n  legends[payload.mapId] = legendItems;\n\n  updateLayers(state.views[payload.mapId], legend);\n\n  return Object.assign({}, state, { 'legends': legends });\n}), _createReducer));\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"esri-loader\");\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"react\");\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"react-redux\");\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// components\nvar MapLegend = exports.MapLegend = __webpack_require__(1).default;\n\n// reducers\nvar reducer = exports.reducer = __webpack_require__(2).default;\n\n// actions\nvar setInitialLegend = exports.setInitialLegend = __webpack_require__(0).setInitialLegend;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// arcgis-react-redux-legend.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f8cc850f109c702496be","import * as esriLoader from \"esri-loader\";\r\n\r\nexport const SET_CURRENT_SCALE = \"map-legend/SET_CURRENT_SCALE\";\r\nexport const TOGGLE_LEGEND_NODE_VISIBLE = \"map-legend/TOGGLE_LEGEND_NODE_VISIBLE\";\r\nexport const RESET_LEGEND_IS_FETCHING = \"map-legend/RESET_LEGEND_IS_FETCHING\";\r\nexport const REQUEST_LEGEND_DATA = \"map-legend/REQUEST_LEGEND_DATA\";\r\nexport const RECEIVE_LEGEND_DATA = \"map-legend/RECEIVE_LEGEND_DATA\";\r\nexport const TOGGLE_LEGEND_NODE_EXPANDED = \"map-legend/TOGGLE_LEGEND_NODE_EXPANDED\";\r\nexport const SET_LEGEND_DOM_DATA = \"map-legend/SET_LEGEND_DOM_DATA\";\r\nexport const TOGGLE_SHOW_SETTINGS = \"map-legend/TOGGLE_SHOW_SETTINGS\";\r\nexport const REVERSE_LAYER_ORDER = \"map-legend/REVERSE_LAYER_ORDER\";\r\nexport const SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE = \"map-legend/SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE\";\r\n\r\nexport const SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA = 'map-legend/SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA';\r\nexport const SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA = 'map-legend/SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA';\r\n\r\nexport const toggleNodeExpanded = (nodeId, mapId) => {\r\n  return {\r\n    type: TOGGLE_LEGEND_NODE_EXPANDED, \r\n    payload: { nodeId, mapId } \r\n  };\r\n};\r\n\r\nexport const toggleNodeVisible = (nodeId, mapId) => {\r\n  return {\r\n    type: TOGGLE_LEGEND_NODE_VISIBLE, \r\n    payload: { nodeId, mapId } \r\n  };\r\n};\r\n\r\nexport const toggleShowSettings = (mapId) => {\r\n  return {\r\n    type: TOGGLE_SHOW_SETTINGS, \r\n    payload: { mapId } \r\n  };\r\n};\r\n\r\nexport const reverseLayerOrder = (mapId) => {\r\n  return {\r\n    type: REVERSE_LAYER_ORDER, \r\n    payload: { mapId } \r\n  };\r\n};\r\n\r\nexport const showLayersNotVisibleForScale = (mapId, show) => {\r\n  return {\r\n    type: SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE, \r\n    payload: { mapId, show } \r\n  };\r\n};\r\n\r\nexport const fetchLegend = (url, mapId) => {\r\n\r\n  return function(dispatch) {\r\n\r\n    dispatch({\r\n      type: REQUEST_LEGEND_DATA, \r\n      payload: { url, mapId } \r\n    });\r\n\r\n    esriLoader.dojoRequire(\r\n      [\"esri/request\", \"esri/config\"], \r\n      (esriRequest, esriConfig) =>\r\n      {\r\n        esriConfig.request.corsDetection = false;\r\n\r\n        return esriRequest(url + \"/legend\", {\r\n          query: {f: \"json\"},\r\n          responseType: \"json\"\r\n        })\r\n        .then(\r\n          response => {\r\n            dispatch({\r\n              type: RECEIVE_LEGEND_DATA, \r\n              payload: { layers: response.data.layers, url, mapId } \r\n            });\r\n          },\r\n          error => {\r\n            console.error(error);\r\n            dispatch({\r\n              type: RESET_LEGEND_IS_FETCHING\r\n            });\r\n          }\r\n        );\r\n      });\r\n  };\r\n};\r\n\r\nconst hookLegend = (legend, callback) => {\r\n\r\n  var original = legend._buildLegendDOMForLayer;\r\n\r\n  legend._buildLegendDOMForLayer = (a, b) => {\r\n\r\n    var result = original.call(legend, a, b);\r\n    callback(result, legend);\r\n    return result;\r\n  };\r\n}\r\n\r\nconst debounce = (func, wait, immediate) => {\r\n\tvar timeout;\r\n\treturn function() {\r\n\t\tvar context = this, args = arguments;\r\n\t\tvar later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tvar callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n};\r\n\r\nconst dispatchScaleChange = debounce(function(dispatch, newScale, mapId) {\r\n\t\r\n  dispatch({\r\n    type: SET_CURRENT_SCALE, \r\n    payload: { scale: newScale, mapId }\r\n  });\r\n}, 250);\r\n\r\nconst createLayerLegend = (view, mapId, layer, dispatch) => {\r\n\r\n  esriLoader.dojoRequire(\r\n    [\"esri/widgets/Legend\"], \r\n    (Legend) => {\r\n\r\n    hookLegend(new Legend({ view, layerInfos: [{ layer }] }), (legendDOMForLayer, legend) => {\r\n      \r\n      setTimeout(() => {\r\n\r\n        if (legendDOMForLayer && legendDOMForLayer.widget) {\r\n          dispatch({\r\n            type: SET_LEGEND_DOM_DATA, \r\n            payload: { legendWidget: legendDOMForLayer.widget, mapId } \r\n          });\r\n        }\r\n\r\n        if (legend && legend.destroy) {\r\n          legend.destroy();\r\n        }\r\n      }, 250);       \r\n    });\r\n  });    \r\n}\r\n\r\nexport const setInitialLegend = (view, mapId) => {\r\n\r\n  return function(dispatch) {\r\n\r\n    view.then(() => {\r\n\r\n      dispatchScaleChange(dispatch, view.scale, mapId);\r\n\r\n      view.watch(\"scale\", (newScale) => {\r\n        dispatchScaleChange(dispatch, newScale, mapId);\r\n      });\r\n\r\n      let i = 1;\r\n      \r\n      view.map.layers.forEach((lyr) => {\r\n\r\n        lyr.__index = i;\r\n        i++;\r\n\r\n        lyr.then(\r\n          loadedLayer => {\r\n\r\n            if (loadedLayer.loaded \r\n              && loadedLayer.type \r\n              && (['map-image'].indexOf(loadedLayer.type.toLowerCase()) > -1)\r\n              && loadedLayer.allSublayers \r\n              && loadedLayer.legendEnabled) {\r\n\r\n              dispatch({\r\n                type: SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA, \r\n                payload: { view, mapId, layer: loadedLayer } \r\n              });\r\n            }\r\n\r\n            if (loadedLayer.loaded\r\n              && loadedLayer.type \r\n              && (['csv', 'feature', 'graphics', 'scene', 'stream'].indexOf(loadedLayer.type.toLowerCase()) > -1)\r\n              && (lyr.url || lyr.source)\r\n              && loadedLayer.legendEnabled) {\r\n\r\n              dispatch({\r\n                type: SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA, \r\n                payload: { view, mapId, layer: loadedLayer } \r\n              });\r\n\r\n              createLayerLegend(view, mapId, loadedLayer, dispatch);\r\n            }\r\n          },\r\n          error => {\r\n            console.error('Failed to load a layer for use with the legend control.', error);\r\n          });\r\n      });\r\n    });\r\n  };\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/actions/map-legend.js","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchLegend, toggleNodeExpanded, toggleNodeVisible, toggleShowSettings, reverseLayerOrder, showLayersNotVisibleForScale } from '../actions/map-legend';\r\n\r\nconst styles = {\r\n  clickLegendNode: {\r\n    cursor: 'pointer',\r\n    marginRight: 6,\r\n    display: 'inline-block'\r\n  },\r\n  inlineBlockDisplay: {\r\n    display: 'inline-block',\r\n    marginTop: 8,\r\n    marginBottom: 0\r\n  },\r\n  title: {\r\n    paddingTop: 10,\r\n    paddingRight: 12,\r\n    paddingBottom: 10,\r\n    paddingLeft: 12,\r\n    backgroundColor: '#ebebeb',\r\n    margin: 0\r\n  },\r\n  settings: {\r\n    opacity: 0.5,\r\n    float: 'right',\r\n    cursor: 'pointer',\r\n    position: 'absolute',\r\n    right: 10,\r\n    top: 10\r\n  }, \r\n  settingsOn: {\r\n    opacity: 1,\r\n    float: 'right',\r\n    cursor: 'pointer',\r\n    position: 'absolute',\r\n    right: 10,\r\n    top: 10\r\n  },  \r\n  settingsPanel: {\r\n    position: 'absolute',\r\n    top: 30,\r\n    right: 8,\r\n    backgroundColor: 'whitesmoke',\r\n    zIndex: 101,\r\n    width: '90%',\r\n    border: 'solid 1px rgba(0,0,0,0.2)'\r\n  },  \r\n  legendPadding: {\r\n    paddingRight: 12,\r\n    paddingBottom: 10,\r\n    paddingLeft: 12\r\n  },\r\n  legendCheckbox: {\r\n    cursor: 'pointer',\r\n    marginRight: 8,\r\n    color: '#EF5350'\r\n  },\r\n  legendCheckboxSelected: {\r\n    cursor: 'pointer',\r\n    marginRight: 8\r\n  },\r\n  legendCheckboxLabel: {\r\n    fontWeight: 400,\r\n    cursor: 'pointer'\r\n  },\r\n  textStyle: {\r\n    display: 'inline-block',\r\n    verticalAlign: 'bottom',\r\n    fontWeight: 500\r\n  }\r\n};\r\n\r\nclass MapLegend extends React.Component {\r\n  initialise = () => {\r\n    const { legends, mapId, fetchLegend } = this.props;\r\n    const legend = legends[mapId];\r\n\r\n    if (!legend) {\r\n      return;\r\n    }\r\n\r\n    legend.forEach(lyr => {\r\n      if (lyr.url && !lyr.isFetching && !lyr.alreadyLoaded) {\r\n        fetchLegend(lyr.url, mapId);\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initialise();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.initialise();\r\n  }\r\n\r\n  renderSubNodeLegendData = item => {\r\n    const imageStyle = {\r\n      width: item.imageWidth + 8,\r\n      height: item.imageHeight,\r\n      backgroundImage: 'url(data:image/png;base64,' + item.image + ')',\r\n      backgroundRepeat: 'no-repeat',\r\n      display: 'inline-block'\r\n    };\r\n\r\n    const marginStyle = { marginLeft: 16, marginTop: 6 };\r\n\r\n    return (\r\n      <div key={item.id} style={marginStyle}>\r\n        <div style={imageStyle} />\r\n        <label style={styles.textStyle}>{item.label}</label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderSubNodes = item => {\r\n    const {\r\n      mapId,\r\n      scales,\r\n      toggleNodeExpanded,\r\n      toggleNodeVisible\r\n    } = this.props;\r\n\r\n    const currentScale = scales[mapId];\r\n\r\n    let marginStyle = { marginLeft: 8, opacity: 1 };\r\n\r\n    let subLayerLegendData = item.expanded && item.subLayerLegendData\r\n      ? item.subLayerLegendData.map(this.renderSubNodeLegendData)\r\n      : null;\r\n\r\n    if (\r\n      currentScale &&\r\n      item.subLayerScaleRestricted &&\r\n      ((item.subLayerMinScale !== 0 && item.subLayerMinScale < currentScale) ||\r\n        (item.subLayerMaxScale !== 0 && item.subLayerMaxScale > currentScale))\r\n    ) {\r\n      marginStyle.opacity = 0.5;\r\n    }\r\n\r\n    let subNodeExpander = !item.subLayerLegendData\r\n      ? null\r\n      : <div onClick={() => toggleNodeExpanded(item.id, mapId)} style={styles.clickLegendNode}>\r\n          {item.expanded\r\n            ? <span className=\"esri-icon-down\" />\r\n            : <span className=\"esri-icon-right\" />}\r\n        </div>;\r\n\r\n    let subNodeCheckbox = (\r\n      <div style={styles.inlineBlockDisplay}>\r\n        <div style={styles.inlineBlockDisplay}>\r\n          <span\r\n            style={item.visible ? styles.legendCheckboxSelected : styles.legendCheckbox}\r\n            onClick={() => toggleNodeVisible(item.id, mapId)}\r\n            className={item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible'}\r\n          />\r\n          <label\r\n            style={styles.legendCheckboxLabel}\r\n            onClick={() => toggleNodeVisible(item.id, mapId)}>\r\n            {item.subLayerName}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div key={item.id} style={marginStyle}>\r\n        {subNodeExpander}{subNodeCheckbox}{subLayerLegendData}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderNodes = item => {\r\n\r\n    if (!item.alreadyLoaded) {\r\n      return null;\r\n    }\r\n\r\n    const { mapId, options, scales, toggleNodeExpanded, toggleNodeVisible } = this.props;\r\n\r\n    const currentScale = scales[mapId];\r\n\r\n    const marginStyle = { marginLeft: 4, marginTop: 8, opacity: 1 };\r\n    const subMarginStyle = { marginLeft: 8 };\r\n\r\n    if (\r\n      currentScale &&\r\n      item.scaleRestricted &&\r\n      ((item.minScale !== 0 && item.minScale < currentScale) ||\r\n        (item.maxScale !== 0 && item.maxScale > currentScale))\r\n    ) {\r\n      if (options[mapId].showLayersNotVisibleForScale === false) {\r\n        return null;\r\n      }\r\n      marginStyle.opacity = 0.4;\r\n    }\r\n\r\n    let sublayers = item.expanded && (item.legendLayers || item.hasDomNode)\r\n      ? item.legendLayers\r\n          ? item.legendLayers.map(this.renderSubNodes)\r\n          : item.hasDomNode\r\n              ? <div style={subMarginStyle} dangerouslySetInnerHTML={{ __html: item.domNode }} />\r\n              : null\r\n      : null;   \r\n\r\n    let topNodeExpander = !item.legendLayers && !item.hasDomNode\r\n      ? null\r\n      : <div onClick={() => toggleNodeExpanded(item.id, mapId)} style={styles.clickLegendNode}>\r\n          {item.expanded\r\n            ? <span className=\"esri-icon-down\" />\r\n            : <span className=\"esri-icon-right\" />}\r\n        </div>;\r\n\r\n    let nodeCheckbox = (\r\n      <div style={styles.inlineBlockDisplay}>\r\n        <span\r\n          style={item.visible ? styles.legendCheckboxSelected : styles.legendCheckbox}\r\n          onClick={() => toggleNodeVisible(item.id, mapId)}\r\n          className={item.visible ? 'esri-icon-visible' : 'esri-icon-non-visible'}\r\n        />\r\n        <label style={styles.legendCheckboxLabel} onClick={() => toggleNodeVisible(item.id, mapId)}>\r\n          {item.layerName}\r\n        </label>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div key={item.id} style={marginStyle}>\r\n        {topNodeExpander}{nodeCheckbox}{sublayers}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { legends, options, mapId, reverseLayerOrder, showLayersNotVisibleForScale, toggleShowSettings } = this.props;\r\n    const legend = legends[mapId];\r\n\r\n    if (!legend) {\r\n      return null;\r\n    }\r\n\r\n    const option = options[mapId];\r\n\r\n    return (\r\n      <div className=\"arcgis-legend\">\r\n        <div>\r\n          <h5 style={styles.title}>{mapId.split('-').join(' - ')}</h5>          \r\n          <span title='Legend settings' style={option.showSettings ? styles.settingsOn : styles.settings} className=\"esri-icon-settings\" onClick={() => toggleShowSettings(mapId)} />\r\n          {\r\n            option.showSettings\r\n            ? <div style={styles.settingsPanel}>\r\n                <h5 style={styles.title}>Legend options</h5>\r\n                <div style={styles.legendPadding}>\r\n                  <div style={styles.inlineBlockDisplay}>\r\n                    <span\r\n                      style={styles.legendCheckboxSelected}\r\n                      onClick={() => reverseLayerOrder(mapId)}\r\n                      className={option.reverseLayerOrder ? 'esri-icon-checkbox-checked' : 'esri-icon-checkbox-unchecked'}\r\n                    />\r\n                    <label\r\n                      style={styles.legendCheckboxLabel}\r\n                      onClick={() => reverseLayerOrder(mapId)}>\r\n                      Reverse order\r\n                    </label>\r\n                  </div>\r\n                  <div style={styles.inlineBlockDisplay}>\r\n                    <span\r\n                      style={styles.legendCheckboxSelected}\r\n                      onClick={() => showLayersNotVisibleForScale(mapId, !option.showLayersNotVisibleForScale)}\r\n                      className={option.showLayersNotVisibleForScale ? 'esri-icon-checkbox-checked' : 'esri-icon-checkbox-unchecked'}\r\n                    />\r\n                    <label\r\n                      style={styles.legendCheckboxLabel}\r\n                      onClick={() => showLayersNotVisibleForScale(mapId, !option.showLayersNotVisibleForScale)}>\r\n                      Show layers not visible for current scale\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div> \r\n            :null\r\n          }          \r\n        </div>\r\n        <div style={styles.legendPadding}>\r\n          {legend.map(this.renderNodes)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    legends: state.mapLegendConfig.legends,\r\n    options: state.mapLegendConfig.options,\r\n    scales: state.mapLegendConfig.scales\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchLegend: (url, mapId) => {\r\n      dispatch(fetchLegend(url, mapId));\r\n    },\r\n    toggleNodeExpanded: (id, mapId) => {\r\n      dispatch(toggleNodeExpanded(id, mapId));\r\n    },\r\n    toggleNodeVisible: (id, mapId) => {\r\n      dispatch(toggleNodeVisible(id, mapId));\r\n    },\r\n    toggleShowSettings: (mapId) => {\r\n      dispatch(toggleShowSettings(mapId));\r\n    },\r\n    reverseLayerOrder: (mapId) => {\r\n      dispatch(reverseLayerOrder(mapId));\r\n    },\r\n    showLayersNotVisibleForScale: (mapId, show) => {\r\n      dispatch(showLayersNotVisibleForScale(mapId, show));\r\n    }\r\n  };\r\n};\r\n\r\nMapLegend.propTypes = {\r\n  mapId: React.PropTypes.string.isRequired,\r\n  view: React.PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapLegend);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-legend.js","import {\r\n  SET_CURRENT_SCALE,\r\n  TOGGLE_SHOW_SETTINGS,\r\n  REVERSE_LAYER_ORDER,\r\n  SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE,\r\n  RESET_LEGEND_IS_FETCHING,\r\n  REQUEST_LEGEND_DATA,\r\n  RECEIVE_LEGEND_DATA,\r\n  TOGGLE_LEGEND_NODE_EXPANDED,\r\n  TOGGLE_LEGEND_NODE_VISIBLE,\r\n  SET_LEGEND_DOM_DATA,\r\n  SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA,\r\n  SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA\r\n} from \"../actions/map-legend\";\r\n\r\nconst s4 = () => {\r\n  return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);\r\n};\r\n\r\nconst guid = () => {\r\n  return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\r\n};\r\n\r\nconst sortLayers = (a, b) => {\r\n  return a.mapIndex - b.mapIndex;\r\n}\r\n\r\nconst sortLayersBackwards = (a, b) => {\r\n  return b.mapIndex - a.mapIndex;\r\n}\r\n\r\nconst updateLayers = (view, legend) => {\r\n\r\n  legend.forEach((legendLyr) => {\r\n  \r\n    if (legendLyr.alreadyLoaded === true) {\r\n      const matchedLayer = view.map.layers.find((lyr) => lyr.uid === legendLyr.uid);\r\n        \r\n      if (!matchedLayer) {\r\n        return null;\r\n      }\r\n\r\n      if (legendLyr.visible && legendLyr.subLayersVisible && matchedLayer.sublayers) {\r\n        if (matchedLayer.sublayers) {\r\n          matchedLayer.sublayers = matchedLayer.sublayers.map((subLyr) => {\r\n            const subLayerFind = legendLyr.subLayersVisible.filter((subId) => {\r\n              return subLyr.id === subId;\r\n            });\r\n\r\n            subLyr.visible = subLayerFind && subLayerFind.length === 1;\r\n            return subLyr;\r\n          });\r\n        }\r\n      }\r\n\r\n      if (matchedLayer.visible !== legendLyr.visible) {\r\n        matchedLayer.visible = legendLyr.visible;\r\n      }\r\n    }    \r\n  });\r\n};\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  legends: {},\r\n  views: {},\r\n  scales: {},\r\n  options: {}\r\n};\r\n\r\nconst createReducer = (initialState, reducerMap) => {\r\n  return (state = initialState, action) => {\r\n    const reducer = reducerMap[action.type];\r\n\r\n    return reducer\r\n      ? reducer(state, action.payload)\r\n      : state;\r\n  };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n\r\n  [SET_CURRENT_SCALE]: (state, payload) => {\r\n\r\n    let scales = Object.assign({}, state.scales);\r\n    scales[payload.mapId] = payload.scale;\r\n\r\n    return Object.assign({}, state, {'scales': scales});\r\n  },\r\n\r\n  [RESET_LEGEND_IS_FETCHING]: (state, payload) => {\r\n\r\n    return Object.assign({}, state, {'isFetching': false});\r\n  },\r\n\r\n  [TOGGLE_SHOW_SETTINGS]: (state, payload) => {\r\n\r\n    let options = Object.assign({}, state.options);\r\n    options[payload.mapId].showSettings = !options[payload.mapId].showSettings;\r\n\r\n    return Object.assign({}, state, {'options': options});\r\n  },\r\n\r\n  [REVERSE_LAYER_ORDER]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    let options = Object.assign({}, state.options);\r\n    options[payload.mapId].reverseLayerOrder = !options[payload.mapId].reverseLayerOrder; \r\n    \r\n    legends[payload.mapId] = legend.sort(options[payload.mapId].reverseLayerOrder ? sortLayersBackwards : sortLayers);\r\n\r\n    return Object.assign({}, state, {\r\n      'legends': legends,\r\n      'options' : options\r\n    });\r\n  },\r\n\r\n  [SHOW_LAYERS_NOT_VISIBLE_FOR_SCALE]: (state, payload) => {\r\n\r\n    let options = Object.assign({}, state.options);\r\n    options[payload.mapId].showLayersNotVisibleForScale = payload.show;\r\n\r\n    return Object.assign({}, state, {'options': options});\r\n  },\r\n\r\n  [REQUEST_LEGEND_DATA]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.map((leg, idx) => {\r\n      if (leg.url === payload.url) {\r\n        leg.isFetching = true;\r\n      }\r\n\r\n      return leg;\r\n    });\r\n\r\n    legends[payload.mapId] = legendItems;\r\n\r\n    return Object.assign({}, state, {\r\n      'isFetching': true,\r\n      'legends': legends\r\n    });\r\n  },\r\n\r\n  [RECEIVE_LEGEND_DATA]: (state, payload) => {\r\n  \r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.map((leg, idx) => {\r\n      if (leg.url === payload.url) {\r\n        leg.legendLayers = payload.layers.map((lyr) => {\r\n          const legendData = lyr.legend.map((subnode) => {\r\n            return {\r\n              label: subnode.label,\r\n              image: subnode.imageData,\r\n              imageHeight: subnode.height,\r\n              imageWidth: subnode.width,\r\n              id: guid()\r\n            };\r\n          });\r\n\r\n          return {\r\n            subLayerId: lyr.layerId,\r\n            subLayerName: lyr.layerName,\r\n            subLayerMinScale: lyr.minScale,\r\n            subLayerMaxScale: lyr.maxScale,\r\n            subLayerScaleRestricted: lyr.minScale !== 0 || lyr.maxScale !== 0,\r\n            subLayerLegendData: legendData,\r\n            visible: leg.subLayersVisible\r\n              ? leg.subLayersVisible.indexOf(lyr.layerId) > -1\r\n              : true,\r\n            expanded: true,\r\n            id: guid()\r\n          };\r\n        });\r\n\r\n        leg.alreadyLoaded = true;\r\n        leg.expanded = true;\r\n      }\r\n\r\n      return leg;\r\n    });\r\n\r\n    legends[payload.mapId] = legendItems;\r\n\r\n    return Object.assign({}, state, {\r\n      'isFetching': false,\r\n      'legends': legends\r\n    });\r\n  },\r\n\r\n  [SET_INITIAL_LEGEND_MAPIMAGELAYER_DATA]: (state, payload) => {\r\n\r\n    let views = Object.assign({}, state.views);\r\n    views[payload.mapId] = payload.view;\r\n\r\n    let initLyr = payload.layer;\r\n    let subLayersVisible = [];    \r\n\r\n    initLyr.allSublayers.items.forEach((sl) => {\r\n\r\n      if (sl.visible) {\r\n        subLayersVisible.push(sl.id);\r\n      }\r\n    });\r\n\r\n    let layer = [{\r\n      layerId: initLyr.id,\r\n      layerName: initLyr.title || initLyr.id,\r\n      minScale: initLyr.minScale,\r\n      maxScale: initLyr.maxScale,\r\n      scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\r\n      visible: initLyr.visible,\r\n      subLayersVisible: subLayersVisible,\r\n      url: initLyr.url.replace(/\\/+$/, ''),\r\n      legendLayers: null,\r\n      hasDomNode: false,\r\n      alreadyLoaded: false,\r\n      isFetching: false,\r\n      expanded: false,\r\n      id: guid(),\r\n      uid: initLyr.uid,\r\n      mapIndex: initLyr.__index,\r\n      reverseLayerOrder: false,\r\n      showLayersNotVisibleForScale: true\r\n    }];\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    legends[payload.mapId] = legends[payload.mapId] && legends[payload.mapId].length ? legends[payload.mapId].concat(layer) : layer;\r\n\r\n    legends[payload.mapId].sort(sortLayers);\r\n\r\n    let options = Object.assign({}, state.options);\r\n    options[payload.mapId] = {\r\n      reverseLayerOrder: false,\r\n      showLayersNotVisibleForScale: true,\r\n      showSettings: false\r\n    };\r\n    \r\n    return Object.assign({}, state, {\r\n      'legends': legends,\r\n      'options': options,\r\n      'views': views\r\n    });\r\n  },\r\n\r\n  [SET_INITIAL_LEGEND_GRAPHICSLAYER_DATA]: (state, payload) => {\r\n\r\n    let views = Object.assign({}, state.views);\r\n    views[payload.mapId] = payload.view;\r\n\r\n    let initLyr = payload.layer;\r\n\r\n    let layer = [{\r\n      layerId: initLyr.id,\r\n      layerName: initLyr.title || initLyr.id,\r\n      minScale: initLyr.minScale,\r\n      maxScale: initLyr.maxScale,\r\n      scaleRestricted: initLyr.minScale !== 0 || initLyr.maxScale !== 0,\r\n      visible: initLyr.visible,      \r\n      legendLayers: null,\r\n      hasDomNode: false,\r\n      alreadyLoaded: false,\r\n      isFetching: false,\r\n      expanded: false,\r\n      id: guid(),\r\n      uid: initLyr.uid,\r\n      mapIndex: initLyr.__index,\r\n      reverseLayerOrder: false,\r\n      showLayersNotVisibleForScale: true\r\n    }];\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    legends[payload.mapId] = legends[payload.mapId] && legends[payload.mapId].length ? legends[payload.mapId].concat(layer) : layer;\r\n\r\n    legends[payload.mapId].sort(sortLayers);\r\n    \r\n    return Object.assign({}, state, {\r\n      'legends': legends,\r\n      'views': views\r\n    });\r\n  },\r\n  \r\n  [SET_LEGEND_DOM_DATA]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n\r\n    legends[payload.mapId] = legends[payload.mapId].map((leg, idx) => {\r\n\r\n      if (payload.legendWidget && payload.legendWidget.children && payload.legendWidget.children.length > 0) {\r\n      \r\n        let legendDOMForLayer = null;\r\n        for (let i = 0; i < payload.legendWidget.children.length; i++) {\r\n          \r\n          let child = payload.legendWidget.children[i];\r\n          if (child.id.split('_').pop() === leg.uid) {\r\n            legendDOMForLayer = child;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if (\r\n          leg.hasDomNode === false && legendDOMForLayer && \r\n          legendDOMForLayer.children && legendDOMForLayer.children.length > 1\r\n          ) {\r\n\r\n          leg.alreadyLoaded = true;\r\n          leg.hasDomNode = true;\r\n          leg.domNode = legendDOMForLayer.children[1].outerHTML;\r\n          leg.expanded = true;\r\n        }\r\n      }\r\n\r\n      return leg;\r\n    });\r\n\r\n    return Object.assign({}, state, {\r\n      'legends': legends\r\n    });\r\n  },\r\n\r\n  [TOGGLE_LEGEND_NODE_EXPANDED]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.map((leg, idx) => {\r\n\r\n        if (leg.id === payload.nodeId) {\r\n          leg.expanded = !leg.expanded;\r\n        } \r\n        else if (leg.legendLayers) {\r\n          const legendLayers = leg.legendLayers.map((lyr) => {\r\n              if (lyr.id === payload.nodeId) {\r\n                lyr.expanded = !lyr.expanded;\r\n              }\r\n              return lyr;\r\n            }\r\n          );\r\n\r\n          leg.legendLayers = legendLayers;\r\n        }\r\n        return leg;\r\n      }\r\n    );\r\n\r\n    legends[payload.mapId] = legendItems;\r\n\r\n    return Object.assign({}, state, {'legends': legends});\r\n  },\r\n      \r\n  [TOGGLE_LEGEND_NODE_VISIBLE]: (state, payload) => {\r\n\r\n    let legends = Object.assign({}, state.legends);\r\n    let legend = legends[payload.mapId];\r\n\r\n    const legendItems = legend.map((leg, idx) => {\r\n        if (leg.id === payload.nodeId) {\r\n          leg.visible = !leg.visible;\r\n        } \r\n        else if (leg.legendLayers) {\r\n          const legendLayers = leg.legendLayers.map((lyr) => {\r\n              if (lyr.id === payload.nodeId) {\r\n                lyr.visible = !lyr.visible;\r\n              }\r\n\r\n              return lyr;\r\n            }\r\n          );\r\n\r\n          let subLayersVisible = [];\r\n\r\n          leg.legendLayers.forEach((layer) => {\r\n\r\n            if (layer.visible) {\r\n              subLayersVisible.push(layer.subLayerId);\r\n            }\r\n          });\r\n\r\n          leg.subLayersVisible = subLayersVisible;\r\n          leg.legendLayers = legendLayers;\r\n        }\r\n\r\n        return leg;\r\n      } \r\n    );\r\n\r\n    legends[payload.mapId] = legendItems;\r\n\r\n    updateLayers(state.views[payload.mapId], legend);\r\n\r\n    return Object.assign({}, state, {'legends': legends});\r\n  }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/map-legend.js","module.exports = require(\"esri-loader\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"esri-loader\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"react-redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-redux\"\n// module id = 5\n// module chunks = 0","// components\r\nexport const MapLegend = require('./components/map-legend').default;\r\n\r\n// reducers\r\nexport const reducer = require('./reducers/map-legend').default;\r\n\r\n// actions\r\nexport const setInitialLegend = require('./actions/map-legend').setInitialLegend;\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}